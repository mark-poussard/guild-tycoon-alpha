{"version":3,"sources":["webpack:///./src/store/game-model/GameModelStore.tsx","webpack:///./src/store/game-model/GameModelActionTypes.tsx","webpack:///./src/store/game-model/GameModelDispatcher.tsx","webpack:///./src/data/HeroData.tsx","webpack:///./src/data/ItemData.tsx","webpack:///./src/business/HeroHelper.tsx","webpack:///./src/components/generic/resource/Resource.tsx","webpack:///./src/business/QuestHelper.tsx","webpack:///./src/store/navigation/NavigationStore.tsx","webpack:///./src/data/QuestData.tsx","webpack:///./src/model/items/Equipment.tsx","webpack:///./src/components/generic/Overlay.tsx","webpack:///./src/business/utils/ObjectUtils.tsx","webpack:///./src/business/collection/IndexedArray.tsx","webpack:///./src/components/body/items-tab/ItemInfo.tsx","webpack:///./src/business/ClassHelper.tsx","webpack:///./src/model/Rarity.tsx","webpack:///./src/data/ClassData.tsx","webpack:///./src/components/generic/ToolTip.tsx","webpack:///./src/components/generic/hero-info/ClassInfo.tsx","webpack:///./src/store/log/LogStore.tsx","webpack:///./src/store/log/LogActions.tsx","webpack:///./src/business/DungeonHelper.tsx","webpack:///./src/components/body/quest-tab/QuestResultOverlay.tsx","webpack:///./src/components/generic/select-hero-overlay/SelectHeroOverlay.tsx","webpack:///./src/components/body/quest-tab/QuestAction.tsx","webpack:///./src/components/generic/ennemy/EnnemyInfo.tsx","webpack:///./src/data/DungeonData.tsx","webpack:///./src/model/DungeonBase.tsx","webpack:///./src/components/generic/Timer.tsx","webpack:///./src/components/generic/quest/QuestProgressBar.tsx","webpack:///./src/components/body/items-tab/ItemsTab.tsx","webpack:///./src/components/generic/hero-info/SortButton.tsx","webpack:///./src/components/generic/quest/ProgressBar.tsx","webpack:///./src/components/body/hero-tab/Level.tsx","webpack:///./src/components/body/hero-tab/HeroInfo.css?f90b","webpack:///./src/components/generic/hero-info/RankStar.tsx","webpack:///./src/components/body/hero-tab/HeroInfo.tsx","webpack:///./src/model/Sorting.tsx","webpack:///./src/model/Quest.tsx","webpack:///./src/store/log/LogDispatcher.tsx","webpack:///./src/model/Duration.tsx","webpack:///./src/business/EquipmentSetHelper.tsx","webpack:///./src/store/TrainingHelper.tsx","webpack:///./src/index.css","webpack:///./src/index.css?d8c3","webpack:///./src/components/log/LogMessage.tsx","webpack:///./src/components/log/LogDisplayer.tsx","webpack:///./src/components/body/shop-tab/ShopItemInfo.css","webpack:///./src/components/body/shop-tab/ShopItemInfo.css?3940","webpack:///./src/components/body/shop-tab/ShopItemInfo.tsx","webpack:///./src/data/ShopData.tsx","webpack:///./src/components/body/shop-tab/ShopTab.tsx","webpack:///./src/components/body/dungeon-tab/DungeonModeInfo.tsx","webpack:///./src/components/generic/tabs/Tab.tsx","webpack:///./src/components/generic/tabs/Tabs.tsx","webpack:///./src/components/body/dungeon-tab/DungeonInfo.tsx","webpack:///./src/components/body/dungeon-tab/DungeonTab.tsx","webpack:///./src/components/body/log-tab/LogInfo.css","webpack:///./src/components/body/log-tab/LogInfo.css?67d4","webpack:///./src/components/body/log-tab/LogInfo.tsx","webpack:///./src/components/body/log-tab/LogTab.tsx","webpack:///./src/components/generic/select-hero-overlay/HeroSelectButton.css","webpack:///./src/components/generic/select-hero-overlay/HeroSelectButton.css?8afb","webpack:///./src/components/generic/select-hero-overlay/HeroSelectButton.tsx","webpack:///./src/components/generic/select-hero-overlay/SelectHeroOverlay.css","webpack:///./src/components/generic/select-hero-overlay/SelectHeroOverlay.css?8c0f","webpack:///./src/components/generic/ennemy/EnnemyInfo.css","webpack:///./src/components/generic/ennemy/EnnemyInfo.css?5dd6","webpack:///./src/components/body/quest-tab/QuestInfo.tsx","webpack:///./src/components/body/quest-tab/QuestTab.tsx","webpack:///./src/model/EquipmentSet.tsx","webpack:///./src/business/CFHHelper.tsx","webpack:///./src/components/body/call-tab/CallInfo.tsx","webpack:///./src/data/CFHData.tsx","webpack:///./src/components/body/call-tab/CallTab.tsx","webpack:///./src/components/body/Content.css","webpack:///./src/components/body/Content.css?ef73","webpack:///./src/data/ImprovementsData.tsx","webpack:///./src/components/body/improvements-tab/ImprovementDetails.css","webpack:///./src/components/body/improvements-tab/ImprovementDetails.css?485c","webpack:///./src/components/body/improvements-tab/ImprovementDetails.tsx","webpack:///./src/components/body/improvements-tab/ImprovementsTab.tsx","webpack:///./src/model/BaseQuest.tsx","webpack:///./src/business/EndQuestResult.tsx","webpack:///./src/business/BattleEngine.tsx","webpack:///./src/components/body/hero-tab/HeroQuestProgress.tsx","webpack:///./src/components/body/hero-tab/upgrade-overlay/UpgradeOverlay.css","webpack:///./src/components/body/hero-tab/upgrade-overlay/UpgradeOverlay.css?a44f","webpack:///./src/components/body/hero-tab/upgrade-overlay/UpgradeOverlay.tsx","webpack:///./src/components/body/hero-tab/upgrade-overlay/UpgradeButton.tsx","webpack:///./src/components/generic/equip-overlay/EquipmentOverlay.css","webpack:///./src/components/generic/equip-overlay/EquipmentOverlay.css?1bb9","webpack:///./src/business/ItemHelper.tsx","webpack:///./src/components/body/items-tab/ItemInfo.css","webpack:///./src/components/body/items-tab/ItemInfo.css?cd2a","webpack:///./src/components/generic/hero-info/DupLevel.css","webpack:///./src/components/generic/hero-info/DupLevel.css?40f6","webpack:///./src/components/generic/hero-info/DupLevel.tsx","webpack:///./src/components/generic/hero-info/AbilityModifier.css","webpack:///./src/components/generic/hero-info/AbilityModifier.css?de11","webpack:///./src/components/generic/hero-info/AbilityModifier.tsx","webpack:///./src/components/generic/hero-info/AbilityModifierList.tsx","webpack:///./src/components/generic/equip-overlay/EquipmentInfo.css","webpack:///./src/components/generic/equip-overlay/EquipmentInfo.css?019d","webpack:///./src/components/generic/equip-overlay/EquipmentPiece.css","webpack:///./src/components/generic/equip-overlay/EquipmentPiece.css?b920","webpack:///./src/components/generic/equip-overlay/EquipmentPiece.tsx","webpack:///./src/components/generic/equip-overlay/EquipmentInfo.tsx","webpack:///./src/components/generic/equip-overlay/EquipmentOverlay.tsx","webpack:///./src/components/body/hero-tab/EquipmentButton.tsx","webpack:///./src/components/body/hero-tab/HeroTab.css","webpack:///./src/components/body/hero-tab/HeroTab.css?ef43","webpack:///./src/components/body/hero-tab/train/TrainInfo.css","webpack:///./src/components/body/hero-tab/train/TrainInfo.css?93cc","webpack:///./src/components/body/hero-tab/train/TrainButton.tsx","webpack:///./src/components/body/hero-tab/train/TrainProgress.css","webpack:///./src/components/body/hero-tab/train/TrainProgress.css?7687","webpack:///./src/components/generic/quest/ProgressBar.css","webpack:///./src/components/generic/quest/ProgressBar.css?a0e7","webpack:///./src/components/body/hero-tab/train/TrainProgress.tsx","webpack:///./src/components/body/hero-tab/train/TrainInfo.tsx","webpack:///./src/components/body/hero-tab/HeroRecruitButton.css","webpack:///./src/components/body/hero-tab/HeroRecruitButton.css?0cd7","webpack:///./src/components/body/hero-tab/HeroRecruitButton.tsx","webpack:///./src/components/body/hero-tab/Rarity.tsx","webpack:///./src/components/generic/hero-info/ClassInfo.css","webpack:///./src/components/generic/hero-info/ClassInfo.css?603a","webpack:///./src/components/generic/ToolTip.css","webpack:///./src/components/generic/ToolTip.css?a9df","webpack:///./src/components/body/hero-tab/HeroInfo.css","webpack:///./src/components/body/hero-tab/HeroTab.tsx","webpack:///./src/components/body/Content.tsx","webpack:///./src/components/menu/Menu.css","webpack:///./src/components/menu/Menu.css?3176","webpack:///./src/components/menu/MenuButton.css","webpack:///./src/components/menu/MenuButton.css?e9e9","webpack:///./src/components/menu/MenuButton.tsx","webpack:///./src/components/menu/Menu.tsx","webpack:///./src/components/guild-visu/GuildVisu.css","webpack:///./src/components/guild-visu/GuildVisu.css?2af7","webpack:///./src/components/guild-visu/GuildVisu.tsx","webpack:///./src/components/generic/Overlay.css","webpack:///./src/components/generic/Overlay.css?62c6","webpack:///./src/components/header/Settings.tsx","webpack:///./src/model/log/Log.tsx","webpack:///./src/model/UpgradeRequirements.tsx","webpack:///./src/model/ModifierAbility.tsx","webpack:///./src/model/items/Item.tsx","webpack:///./src/store/achievements/AchievementsHelper.tsx","webpack:///./src/model/GameSwitches.tsx","webpack:///./src/model/Improvements.tsx","webpack:///./src/store/game-model/GameModelState.tsx","webpack:///./src/components/header/Header.css","webpack:///./src/components/header/Header.css?3a10","webpack:///./src/components/generic/resource/Resource.css","webpack:///./src/components/generic/resource/Resource.css?70d4","webpack:///./src/components/header/Header.tsx","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["FbEmitter","__webpack_require__","utils_1","GameModelState_1","GameModelDispatcher_1","GameModelActionTypes_1","AchievementsHelper_1","TrainingHelper_1","HeroHelper_1","QuestData_1","ItemData_1","Equipment_1","LogActions_1","HeroData_1","Quest_1","NavigationStore_1","exports","CACHE_GAME_STATE_KEY","default","ReduceStore","[object Object]","super","this","subscribe","action","listener","eventEmitter","addListener","EventEmitter","achievementsHelper","gameState","localStorage","getItem","GameStateDeserializer","StartingGameState","state","newState","Object","assign","payload","type","GameModelActionTypes","ADD_GOLD","gold","quantity","emit","ADD_EXP","exp","ADD_FAME","shards","RECRUIT_HERO","heroes","add","hero","HERO_LVL_UP","get","heroId","requiredExp","expRequiredToLevel","level","HERO_BULK_LVL_UP","isMaxLevel","SET_IMPROVEMENT","improvements","improvementKey","value","TRAIN_CLICK","statistics","trainClicks","TrainingHelper","computeReqClicks","computeExpReward","START_QUEST","quests","hasOwnProperty","quest","id","startedAt","Date","getTime","data","questId","END_QUEST_SUCCEED","completedAt","questData","QuestDataArray","reward","shard","drop","drops","items","item","gameSwitches","repeat","activates","logUserAction","title","END_QUEST_FAIL","REPEAT_QUEST","SUBMIT_DUNGEON","dungeons","mode","CLEAR_DUNGEON","REGISTER_CFH_RESULT","cfh","price","firstHero","dupId","heroData","HeroDataArray","name","dupLevel","EQUIP_ITEM","slotsToRemove","ItemDataArray","itemId","slot","otherHand","otherHandItemId","equipment","EquipmentType","TWO_HANDED","push","slotToRemove","slotItemId","REMOVE_ALL_ITEMS","equipmentSlots","REMOVE_ITEM","HERO_RANK_UP","rankUpRequirements","upgradeRequirements","rank","req","BUY_ITEM","itemData","CLEAR_GAME_DATA","clearLogs","removeItem","navigateTo","TabType","HEROES","setItem","GameStateSerializer","flux_1","Dispatcher","ClassData","ModifierAbility_1","Rarity_1","IndexedArray_1","ObjectUtils_1","UpgradeRequirements_1","HeroData","HERO1","rarity","Rarity","SP","imgUrl","bbaMult","maxRank","class","SWORDSMAN_CLASS","description","modAbilityList","classes","MINSTREL_CLASS","modPrct","ModifierAbilityType","BOOST","RASCAL_CLASS","WARRIOR_REQUIREMENTS","HERO2","ELEMENTALIST_CLASS","WARRIOR_CLASS","MAGICAL_CLASS","MAGE_REQUIREMENTS","HERO3","ARCHER_CLASS","MAGE_CLASS","BEAST_CLASS","MINSTREL_REQUIREMENTS","HERO4","T","THIEF_CLASS","HERO5","HERO6","HERO7","x","getValues","NO_ICON_PATH","ItemData","WOODEN_STICK","icon","ba","classRestriction","ONE_HANDED","STONE_SLING","WOODEN_SWORD","OLD_OAK_TWIG","BIG_ROCK","RAGGED_SHIRT","TORSO","RAGGED_GLOVES","HANDS","RAGGED_BREACHES","LEGS","RAGGED_BOOTS","FEET","COURAGE_ORB","SPIRIT_ORB","SENSES_ORB","EquipmentSetHelper_1","getPower","powerFormula","lvl","powerMultiplier","Math","pow","computeHeroBA","dupBonus","computeDupBonusBA","bba","floor","computeBA","createHeroSort","rankOrder","lvlOrder","nameOrder","h1","h2","result","h1Data","h2Data","localeCompare","isMaxRank","rarityMaxRank","React","ResourceType","Component","props","renderContent","iconUrl","computeIconUrl","colorClass","computeColorClass","sign","computeSign","createElement","key","className","src","EXP","GOLD","SHARD","TIME","modifier","remove","inline","style","GameModelStore_1","BattleEngine_1","EndQuestResult_1","computeSuccessRate","questPower","heroPower","endQuest","questResult","questHeroes","getQuestHeroes","isWin","computeBattleResult","ennemies","computeDrops","dispatch","rate","rates","random","getState","startQuest","duration","hours","minutes","seconds","hourStr","toString","length","minutesStr","secondsStr","tab","Duration_1","QuestData","QUEST01","maxPartySize","classReq","QUEST02","QUEST03","QUEST04","QUEST05","QUEST06","QUEST07","QUEST08","QUEST09","QUEST10","HARKLING_CLASS","QUEST11","TOMJAKER_CLASS","QUEST12","FROSTBEAR_CLASS","QUEST13","BEEWIZ_CLASS","QUEST14","QUEST15","QUEST16","VORPAL_CLASS","QUEST17","JABBERWOCKY_CLASS","QUEST18","QUEST19","QUEST20","Item_1","closeOverlay","closeOverlayCallback","dontCloseOverlay","e","stopPropagation","heightOffset","height","widthOffset","width","display","onClick","top","bottom","left","right","children","obj","keys","map","extractor","elements","internalMap","set","addAll","all","element","contains","has","size","asArray","Array","from","values","Map","Symbol","iterator","mapIterator","next","itResult","done","ToolTip_1","ItemHelper_1","renderItemInfo","statsInfo","onItemDrag","event","dataTransfer","setData","onDoubleClick","equipHero","isEquipable","computeSlotForItem","containerStyle","txtStyle","color","txtColor","onDragStart","draggable","toolTipContent","computeClassList","cls","atRank","onRank","previous","klassList","classList","klass","indexOf","t","r","ex","el","le","KNIGHT_CLASS","PALADIN_CLASS","MONK_CLASS","PSIONIC_CLASS","BARBARIAN_CLASS","BERSERKER_CLASS","COLOSSUS_CLASS","SHARPSHOOTER_CLASS","BARD_CLASS","DRUID_CLASS","PYROMANCER_CLASS","ELECTROMANCER_CLASS","WARLOCK_CLASS","SHADOWCASTER_CLASS","LIGHTSWORN_CLASS","CHRONOMANCER_CLASS","CULTIST_CLASS","ToolTipPosition","onHover","setState","displayed","onLeave","computePositionClass","position","TOP","BOTTOM","LEFT","RIGHT","classname","positionClass","onMouseEnter","onMouseLeave","renderClassDetails","i","classDetails","classTxt","LogDispatcher_1","CACHE_LOG_KEY","logCache","JSON","parse","logQueue","logArchive","reducedObj","LogActionTypes","LOG_ACTION","log","REMOVE_FROM_QUEUE","removeIdx","logs","filter","CLEAR_LOG","stringify","Log_1","msg","logAction","LogLevel","USER","removeLogFromQueue","QuestHelper_1","startDungeon","endDungeon","Overlay_1","Resource_1","ItemInfo_1","renderQuestWin","renderDropInfo","renderQuestLose","HeroInfo_1","Sorting_1","SortButton_1","HeroSelectButton_1","renderHeroes","heroArray","sort","selectedHeroes","doSelectHero","doUnselectHero","partySize","maxSelection","reqClass","delete","canConfirm","confirmSelection","doConfirmSelection","computeHeroesCombinedPower","heroeSet","heroesId","Set","SortOrder","DESC","ASC","doCancelSelection","order","txt","toggle","disabled","storeSubscribe","QuestProgressBar_1","Timer_1","repeatQuest","questEnded","end","start","endTxt","until","toMs","doEnd","doQuestOver","widthPrct","startTxt","ClassInfo_1","ClassHelper_1","ennemy","DungeonData","requireSwitches","repeatIn","modes","EASY","NORMAL","HARD","DungeonDataArray","BaseQuest_1","DungeonMode","DungeonModeBase","dungeonToQuestData","dungeon","computeTimeLeft","renderTimeLeft","durationToString","timeLeft","intervalId","window","setInterval","clearInterval","ProgressBar_1","computeProgress","min","progress","ProgressBar","renderItems","objectId","renderLevelUp","heroLevelUp","ctrlKey","content","module","options","hmr","transform","locals","RankStar","generateRank","RankStar_1","Level_1","renderHeroName","txtSize","renderBattleAbility","days","toSetItem","head","torso","hands","legs","feet","leftHand","rightHand","isEquipableInSlot","HEAD","model","train3","train2","train1","trainClickNo1","LogStore_1","LogMessage_1","LOG_TIMEOUT","isLogExpired","producedAt","slice","logSubscription","logInterval","logsToClear","logMessages","canBuy","playerGold","shopItem","shopPrice","buy","shopData","ShopData_1","ShopItemInfo_1","shopItems","DungeonBase_1","EnnemyInfo_1","QuestAction_1","SelectHeroOverlay_1","DungeonHelper_1","renderEnnemies","ennemyList","closeHeroSelect","overlayDisplayed","openHeroSelect","confirmHeroes","renderStatusButton","dungeonState","getQuest","activeQuests","getQuestData","doEndQuest","copyActiveQuests","dungeonModeData","changeTab","currentTab","childTabs","Children","forEach","child","index","isValidElement","childTabKeys","defaultTab","tabsHeader","Tabs_1","Tab_1","DungeonModeInfo_1","tabIdGenerator","difficultyTabs","DungeonData_1","DungeonInfo_1","QuestResultOverlay_1","computeAvailableDungeons","getDungeonStates","questResultData","dungeonStates","dungeonComponents","dungeonStateMode","LogInfo_1","logArchives","reverse","logInfoComponents","renderTxt","validClass","isHeroBusy","isHeroSelected","areAllHeroSelected","isButtonDisabled","doButtonCall","isHeroValidClass","renderClassReq","classReqList","renderQuestDetails","renderEnnemyCells","renderQuestAction","doSelectQuest","gameStoreListener","QuestInfo_1","renderQuests","shouldRenderQuest","renderQuestEndOverlay","renderQuestStartOverlay","questSelect","EquipmentSet_1","doCFH","undefined","newHero","computeRollRarity","pool","heroPull","computeHeroPull","roll","prct","pull","nbr","CFHHelper_1","hasEnoughShards","doCall","CFH1","sp","CFH2","CFH3","CFH4","CFHData","CallInfo_1","isBeginnerCFH","CFH1nbr","CFH2nbr","CFH3nbr","renderAvailableCFH","beginnerCFH","callsList","improvementsData","desc","cost","requireKeys","isTooExpensive","improvement","buyImprovement","float","ImprovementDetails_1","ImprovementsData_1","renderImprovements","requirements","requireKey","contenders","v","toBeat","j","heroBA","ennemyBA","successPrct","downgradeBAOnWin","winBA","loseBA","getHeroQuest","nxtProps","isDungeon","goToQuests","DUNGEONS","QUESTS","questFinished","nextProps","canUpgrade","wrapper","rankUp","requireItems","doCancel","UpgradeOverlay_1","canRankUp","displayOverlay","hideOverlay","Fragment","isPositive","modifierSign","modifierClassname","AbilityModifier_1","modifierList","modAbility","NO_ICON_PATH_SPECIFIC","onDrop","preventDefault","isDropHover","getData","checkItemValidity","onDragOver","onDragLeave","getPieceId","pieceId","piece","imgElement","onDragEnter","EquipmentPiece_1","AbilityModifierList_1","DupLevel_1","removeAll","EquipmentInfo_1","ItemsTab_1","EquipmentOverlay_1","showOverlay","cantChangeHeroEquipment","doTrain","totalClicks","reqClicks","TrainProgress_1","TrainButton_1","nbHeroes","totalTrainClicks","goToRecruit","CFH","RarityEnum","computeIconPath","HeroRecruitButton_1","TrainInfo_1","EquipmentButton_1","UpgradeButton_1","HeroQuestProgress_1","heroesArray","renderHeroRecruit","renderSortButton","HeroTab_1","ImprovementsTab_1","CallTab_1","QuestTab_1","LogTab_1","DungeonTab_1","ShopTab_1","tabSwitch","ITEMS","SHOP","IMPROVEMENTS","LOG","MenuButton_1","onMenuClick","hasLogs","logSubscribe","menuLeftContent","menuRightContent","shop1","clearGameData","fontSize","margin","ID_GEN","1","computeQuestStat","questCompleted","questCompleteLastState","ImprovementInfo","Improvements_1","GameSwitches_1","completedDungeons","replacer","str","reviver","Settings_1","xp","Header_1","GuildVisu_1","Menu_1","Content_1","LogDisplayer_1","newTab","tabType","ReactDOM","App_1","render","document","getElementById"],"mappings":"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","file":"js/main.d208e081fe6f18ad0fb6.js","sourcesContent":["import * as FbEmitter from 'fbemitter';\r\nimport { ReduceStore } from 'flux/utils';\r\nimport GameModelState, { StartingGameState, GameStateSerializer, GameStateDeserializer } from './GameModelState';\r\nimport GameModelPayload, {\r\n    AddResourcePayload,\r\n    RecruitHeroPayload,\r\n    HeroLevelUpPayload,\r\n    SetImprovementPayload,\r\n    StartQuestPayload,\r\n    EndQuestFailPayload,\r\n    RegisterCFHResultPayload,\r\n    EndQuestWinPayload,\r\n    EquipItemPayload,\r\n    RemoveAllItemsPayload,\r\n    RepeatQuestPayload,\r\n    RemoveItemPayload,\r\n    HeroRankUpPayload,\r\n    BuyItemPayload,\r\n    SubmitDungeonPayload,\r\n    ClearDungeonPayload\r\n} from './GameModelPayload';\r\nimport GameModelDispatcher from './GameModelDispatcher';\r\nimport { GameModelActionTypes } from './GameModelActionTypes';\r\nimport Hero from 'model/Hero';\r\nimport IndexedArray from 'business/collection/IndexedArray';\r\nimport AchievementsHelper from 'store/achievements/AchievementsHelper';\r\nimport { TrainingHelper } from 'store/TrainingHelper';\r\nimport HeroHelper from 'business/HeroHelper';\r\nimport { QuestDataArray } from 'data/QuestData';\r\nimport { ItemDataArray } from 'data/ItemData';\r\nimport Equipment, { EquipmentType } from 'model/items/Equipment';\r\nimport EquipmentSet from 'model/EquipmentSet';\r\nimport { logUserAction, clearLogs } from '../log/LogActions';\r\nimport { HeroDataArray } from 'data/HeroData';\r\nimport Quest from 'model/Quest';\r\nimport NavigationStore, { TabType } from 'store/navigation/NavigationStore';\r\n\r\nexport const CACHE_GAME_STATE_KEY = \"game-state\";\r\n\r\nclass GameModelStore extends ReduceStore<GameModelState, GameModelPayload> {\r\n    eventEmitter: FbEmitter.EventEmitter;\r\n\r\n    achievementsHelper: AchievementsHelper;\r\n    constructor() {\r\n        super(GameModelDispatcher);\r\n        this.eventEmitter = new FbEmitter.EventEmitter();\r\n        this.achievementsHelper = new AchievementsHelper();\r\n    }\r\n\r\n    getInitialState() {\r\n        let gameState = localStorage.getItem(CACHE_GAME_STATE_KEY);\r\n        if (gameState) {\r\n            return GameStateDeserializer(gameState);\r\n        }\r\n        return StartingGameState();\r\n    }\r\n\r\n    subscribe = (action: GameModelActionTypes, listener: Function) => {\r\n        return this.eventEmitter.addListener(action, listener);\r\n    }\r\n\r\n    reduce(state: GameModelState, action: GameModelPayload) {\r\n        const newState = Object.assign({}, state);\r\n        let payload;\r\n        switch (action.type) {\r\n            case GameModelActionTypes.ADD_GOLD:\r\n                payload = action.payload as AddResourcePayload;\r\n                newState.gold += payload.quantity;\r\n                this.eventEmitter.emit(GameModelActionTypes.ADD_GOLD, newState);\r\n                break;\r\n\r\n            case GameModelActionTypes.ADD_EXP:\r\n                payload = action.payload as AddResourcePayload;\r\n                newState.exp += payload.quantity;\r\n                this.eventEmitter.emit(GameModelActionTypes.ADD_EXP, newState);\r\n                break;\r\n\r\n            case GameModelActionTypes.ADD_FAME:\r\n                payload = action.payload as AddResourcePayload;\r\n                newState.shards += payload.quantity;\r\n                this.eventEmitter.emit(GameModelActionTypes.ADD_FAME, newState);\r\n                break;\r\n\r\n            case GameModelActionTypes.RECRUIT_HERO:\r\n                payload = action.payload as RecruitHeroPayload;\r\n                newState.heroes.add(payload.hero);\r\n                this.eventEmitter.emit(GameModelActionTypes.RECRUIT_HERO, newState);\r\n                break;\r\n\r\n            case GameModelActionTypes.HERO_LVL_UP:\r\n                {\r\n                    payload = action.payload as HeroLevelUpPayload;\r\n                    const hero = newState.heroes.get(payload.heroId);\r\n                    const requiredExp = HeroHelper.expRequiredToLevel(hero);\r\n                    if (newState.exp >= requiredExp) {\r\n                        newState.exp -= requiredExp;\r\n                        hero.level += 1;\r\n                        this.eventEmitter.emit(GameModelActionTypes.HERO_LVL_UP, newState);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.HERO_BULK_LVL_UP:\r\n                {\r\n                    payload = action.payload as HeroLevelUpPayload;\r\n                    const hero = newState.heroes.get(payload.heroId);\r\n                    let requiredExp = HeroHelper.expRequiredToLevel(hero);\r\n\r\n                    while (newState.exp >= requiredExp && !HeroHelper.isMaxLevel(hero)) {\r\n                        newState.exp -= requiredExp;\r\n                        hero.level += 1;\r\n\r\n                        requiredExp = HeroHelper.expRequiredToLevel(hero);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.SET_IMPROVEMENT:\r\n                {\r\n                    payload = action.payload as SetImprovementPayload;\r\n                    newState.improvements[payload.improvementKey] = payload.value;\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.TRAIN_CLICK:\r\n                {\r\n                    newState.statistics.trainClicks += 1;\r\n                    if (newState.statistics.trainClicks > 0 && newState.statistics.trainClicks % TrainingHelper.computeReqClicks(newState) == 0) {\r\n                        newState.exp += TrainingHelper.computeExpReward(newState);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.START_QUEST:\r\n                {\r\n                    payload = action.payload as StartQuestPayload;\r\n                    if (!newState.quests.hasOwnProperty(payload.quest.id)) {\r\n                        newState.quests[payload.quest.id] = new Quest();\r\n                        newState.quests[payload.quest.id].id = payload.quest.id;\r\n                    }\r\n                    newState.quests[payload.quest.id].startedAt = new Date().getTime();\r\n                    for (let hero of payload.heroes) {\r\n                        newState.heroes.get(hero.data).questId = payload.quest.id;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.END_QUEST_SUCCEED:\r\n                {\r\n                    payload = action.payload as EndQuestWinPayload;\r\n                    newState.quests[payload.quest.id].completedAt = new Date().getTime();\r\n                    //Remove ended quest id from participating heroes\r\n                    for (let hero of newState.heroes) {\r\n                        if (hero.questId === payload.quest.id) {\r\n                            hero.questId = null;\r\n                        }\r\n                    }\r\n                    //Add rewards\r\n                    const questData = payload.questData || QuestDataArray.get(payload.quest.id);\r\n                    newState.gold += questData.reward.gold;\r\n                    newState.exp += questData.reward.exp;\r\n                    newState.shards += questData.reward.shard;\r\n                    //Add drops\r\n                    for (let drop of payload.drops) {\r\n                        if (!newState.items.hasOwnProperty(drop.item.id)) {\r\n                            newState.items[drop.item.id] = 0;\r\n                        }\r\n                        newState.items[drop.item.id] += drop.quantity;\r\n                    }\r\n                    //Add switch & stats\r\n                    newState.gameSwitches[payload.quest.id] = true;\r\n                    if (!newState.statistics.hasOwnProperty(payload.quest.id)) {\r\n                        newState.statistics[payload.quest.id] = 0;\r\n                    }\r\n                    newState.statistics[payload.quest.id] += 1;\r\n                    //Remove from active quests if non-repeatable\r\n                    if (questData.repeat == null) {\r\n                        delete newState.quests[payload.quest.id];\r\n                    }\r\n                    //Add activated quests\r\n                    for (let questId of questData.activates) {\r\n                        newState.quests[questId] = {\r\n                            id: questId,\r\n                            completedAt: null,\r\n                            startedAt: null\r\n                        }\r\n                    }\r\n                    //Add success to log\r\n                    logUserAction(`Successfuly completed quest : ${questData.title}`);\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.END_QUEST_FAIL:\r\n                {\r\n                    //Modifying state by side effect\r\n                    payload = action.payload as EndQuestFailPayload;\r\n                    newState.quests[payload.quest.id].startedAt = null;\r\n                    newState.quests[payload.quest.id].completedAt = null;\r\n                    for (let hero of newState.heroes) {\r\n                        if (hero.questId === payload.quest.id) {\r\n                            hero.questId = null;\r\n                        }\r\n                    }\r\n                    const questData = payload.questData || QuestDataArray.get(payload.quest.id);\r\n                    logUserAction(`Failed quest : ${questData.title}`);\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.REPEAT_QUEST:\r\n                {\r\n                    payload = action.payload as RepeatQuestPayload;\r\n                    newState.quests[payload.quest.id].startedAt = null;\r\n                    newState.quests[payload.quest.id].completedAt = null;\r\n                    break;\r\n                }\r\n\r\n                case GameModelActionTypes.SUBMIT_DUNGEON:\r\n                    {\r\n                        payload = action.payload as SubmitDungeonPayload;\r\n                        newState.dungeons[payload.questId] = {id : payload.questId, mode : payload.mode};\r\n                        break;\r\n                    }\r\n\r\n                    case GameModelActionTypes.CLEAR_DUNGEON:\r\n                        {\r\n                            payload = action.payload as ClearDungeonPayload;\r\n                            if(newState.dungeons.hasOwnProperty(payload.questId)){\r\n                                delete newState.dungeons[payload.questId];\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n            case GameModelActionTypes.REGISTER_CFH_RESULT:\r\n                {\r\n                    payload = action.payload as RegisterCFHResultPayload;\r\n\r\n                    newState.shards -= payload.cfh.price;\r\n\r\n                    if (!newState.statistics.hasOwnProperty(payload.cfh.id)) {\r\n                        newState.statistics[payload.cfh.id] = 0;\r\n                    }\r\n                    newState.gameSwitches.firstHero = true;\r\n                    newState.statistics[payload.cfh.id] += 1;\r\n\r\n                    const heroId = (payload.hero) ? payload.hero.data : payload.dupId;\r\n                    const heroData = HeroDataArray.get(heroId);\r\n                    if (payload.hero) {\r\n                        newState.heroes.add(payload.hero);\r\n                        logUserAction(`Congratulations ! Your call brought a new hero to the guild : ${heroData.name}`);\r\n                    }\r\n\r\n                    if (payload.dupId) {\r\n                        newState.heroes.get(payload.dupId).dupLevel += 1;\r\n                        logUserAction(`Congratulations ! Your call upgraded your hero : ${heroData.name}`);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.EQUIP_ITEM:\r\n                {\r\n                    payload = action.payload as EquipItemPayload;\r\n                    const slotsToRemove: (keyof EquipmentSet)[] = [];\r\n                    const item = ItemDataArray.get(payload.itemId) as Equipment;\r\n                    if (payload.slot === 'leftHand' || payload.slot === 'rightHand') {\r\n                        const otherHand = (payload.slot === 'leftHand') ? 'rightHand' : 'leftHand';\r\n                        const otherHandItemId = payload.hero.equipment[otherHand];\r\n                        if (otherHandItemId) {\r\n                            const otherHandItem = ItemDataArray.get(otherHandItemId) as Equipment;\r\n                            if (otherHandItem.type === EquipmentType.TWO_HANDED\r\n                                || item.type === EquipmentType.TWO_HANDED) {\r\n                                slotsToRemove.push(otherHand);\r\n                            }\r\n                        }\r\n                    }\r\n                    slotsToRemove.push(payload.slot);\r\n                    for (let slotToRemove of slotsToRemove) {\r\n                        //Remove slot method\r\n                        const slotItemId = payload.hero.equipment[slotToRemove];\r\n                        if (slotItemId) {\r\n                            newState.heroes.get(payload.hero.data).equipment[slotToRemove] = null;\r\n                            if (!newState.items.hasOwnProperty(slotItemId)) {\r\n                                newState.items[slotItemId] = 0;\r\n                            }\r\n                            newState.items[slotItemId] += 1;\r\n                        }\r\n                    }\r\n                    newState.items[payload.itemId] -= 1;\r\n                    newState.heroes.get(payload.hero.data).equipment[payload.slot] = payload.itemId;\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.REMOVE_ALL_ITEMS:\r\n                {\r\n                    payload = action.payload as RemoveAllItemsPayload;\r\n                    const equipmentSlots: (keyof EquipmentSet)[] = [\"head\", \"torso\", \"hands\", \"legs\", \"feet\", \"leftHand\", \"rightHand\"];\r\n                    for (let slot of equipmentSlots) {\r\n                        //Remove slot method\r\n                        const slotItemId = payload.hero.equipment[slot];\r\n                        if (slotItemId) {\r\n                            newState.heroes.get(payload.hero.data).equipment[slot] = null;\r\n                            if (!newState.items.hasOwnProperty(slotItemId)) {\r\n                                newState.items[slotItemId] = 0;\r\n                            }\r\n                            newState.items[slotItemId] += 1;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.REMOVE_ITEM:\r\n                {\r\n                    payload = action.payload as RemoveItemPayload;\r\n                    const slotItemId = payload.hero.equipment[payload.slot];\r\n                    if (slotItemId) {\r\n                        newState.heroes.get(payload.hero.data).equipment[payload.slot] = null;\r\n                        if (!newState.items.hasOwnProperty(slotItemId)) {\r\n                            newState.items[slotItemId] = 0;\r\n                        }\r\n                        newState.items[slotItemId] += 1;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.HERO_RANK_UP:\r\n                {\r\n                    payload = action.payload as HeroRankUpPayload;\r\n                    const heroData = HeroDataArray.get(payload.hero.data);\r\n                    const rankUpRequirements = heroData.upgradeRequirements[payload.hero.rank];\r\n                    for (const req of rankUpRequirements) {\r\n                        newState.items[req.item.id] -= req.quantity;\r\n                    }\r\n                    newState.heroes.get(payload.hero.data).rank += 1;\r\n                    logUserAction(`You ranked up your hero : ${heroData.name}`);\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.BUY_ITEM:\r\n                {\r\n                    payload = action.payload as BuyItemPayload;\r\n                    const itemData = ItemDataArray.get(payload.itemId);\r\n                    if (!newState.items.hasOwnProperty(payload.itemId)) {\r\n                        newState.items[payload.itemId] = 0;\r\n                    }\r\n                    newState.items[payload.itemId] += 1;\r\n                    newState.gold -= payload.price;\r\n                    logUserAction(`Baught ${itemData.name} for ${payload.price} gold.`);\r\n                    break;\r\n                }\r\n\r\n            case GameModelActionTypes.CLEAR_GAME_DATA:\r\n                {\r\n                    clearLogs();\r\n                    localStorage.removeItem(CACHE_GAME_STATE_KEY);\r\n                    NavigationStore.navigateTo(TabType.HEROES);\r\n                    return StartingGameState();\r\n                }\r\n        }\r\n        localStorage.setItem(CACHE_GAME_STATE_KEY, GameStateSerializer(newState));\r\n        return newState;\r\n    }\r\n}\r\n\r\nexport default new GameModelStore();","export enum GameModelActionTypes {\r\n    ADD_GOLD = 'add_gold',\r\n    ADD_EXP = 'add_exp',\r\n    ADD_FAME = 'add_fame',\r\n    ASSIGN_QUEST = 'assign_quest',\r\n    RECRUIT_HERO = 'recruit_hero',\r\n    COMPLETE_QUEST = 'complete_quest',\r\n    HERO_LVL_UP = 'hero_level_up',\r\n    HERO_BULK_LVL_UP = 'hero_bulk_level_up',\r\n    SET_IMPROVEMENT = 'set_improvement',\r\n    TRAIN_CLICK = 'train_click',\r\n    CLEAR_GAME_DATA = 'clear_game_data',\r\n    START_QUEST = 'start_quest',\r\n    SUBMIT_DUNGEON = 'submit_dungeon',\r\n    CLEAR_DUNGEON = 'clear_dungeon',\r\n    END_QUEST_SUCCEED = 'end_quest_succeed',\r\n    END_QUEST_FAIL = 'end_quest_fail',\r\n    REPEAT_QUEST = 'repeat_quest',\r\n    REGISTER_CFH_RESULT = 'register_cfh_result',\r\n    EQUIP_ITEM = 'equip_item',\r\n    REMOVE_ALL_ITEMS = 'remove_all_items',\r\n    REMOVE_ITEM = 'remove_item',\r\n    HERO_RANK_UP = 'hero_rank_up',\r\n    BUY_ITEM = 'buy_item'\r\n}","import {Dispatcher} from 'flux';\r\nimport GameModelPayload from './GameModelPayload';\r\n\r\nexport default new Dispatcher<GameModelPayload>();","import BaseHero from \"model/BaseHero\";\r\nimport * as ClassData from 'data/ClassData';\r\nimport ModifierAbility, { ModifierAbilityType } from \"model/ModifierAbility\";\r\nimport { Rarity } from \"model/Rarity\";\r\nimport IndexedArray from \"business/collection/IndexedArray\";\r\nimport ObjectUtils from \"business/utils/ObjectUtils\";\r\nimport { WARRIOR_REQUIREMENTS, MAGE_REQUIREMENTS, MINSTREL_REQUIREMENTS } from \"model/UpgradeRequirements\";\r\n\r\nexport const HeroData: { [name: string]: BaseHero } = {\r\n    HERO1: {\r\n        id: 'HERO1',\r\n        name: 'Axel',\r\n        rarity: Rarity.SP,\r\n        imgUrl: 'img/char/squire.png',\r\n        bbaMult: 1.0,\r\n        maxRank: 5,\r\n        class: ClassData.SWORDSMAN_CLASS,\r\n        description: '',\r\n        modAbilityList: [\r\n            {\r\n                classes: [ClassData.MINSTREL_CLASS.name],\r\n                modPrct: 50,\r\n                type: ModifierAbilityType.BOOST\r\n            },\r\n            {\r\n                classes: [ClassData.RASCAL_CLASS.name],\r\n                modPrct: 20,\r\n                type: ModifierAbilityType.BOOST\r\n            }\r\n        ],\r\n        upgradeRequirements: WARRIOR_REQUIREMENTS\r\n    },\r\n    HERO2: {\r\n        id: 'HERO2',\r\n        name: 'Ak\\'man',\r\n        rarity: Rarity.SP,\r\n        imgUrl: 'img/char/mike.png',\r\n        bbaMult: 1.0,\r\n        maxRank: 5,\r\n        class: ClassData.ELEMENTALIST_CLASS,\r\n        description: '',\r\n        modAbilityList: [\r\n            {\r\n                classes: [ClassData.WARRIOR_CLASS.name],\r\n                modPrct: 50,\r\n                type: ModifierAbilityType.BOOST\r\n            },\r\n            {\r\n                classes: [ClassData.MAGICAL_CLASS.name],\r\n                modPrct: 20,\r\n                type: ModifierAbilityType.BOOST\r\n            }\r\n        ],\r\n        upgradeRequirements: MAGE_REQUIREMENTS\r\n    },\r\n    HERO3: {\r\n        id: 'HERO3',\r\n        name: 'Julia',\r\n        rarity: Rarity.SP,\r\n        imgUrl: 'img/char/julie.png',\r\n        bbaMult: 1.0,\r\n        maxRank: 5,\r\n        class: ClassData.ARCHER_CLASS,\r\n        description: '',\r\n        modAbilityList: [\r\n            {\r\n                classes: [ClassData.MAGE_CLASS.name],\r\n                modPrct: 50,\r\n                type: ModifierAbilityType.BOOST\r\n            },\r\n            {\r\n                classes: [ClassData.BEAST_CLASS.name],\r\n                modPrct: 20,\r\n                type: ModifierAbilityType.BOOST\r\n            }\r\n        ],\r\n        upgradeRequirements: MINSTREL_REQUIREMENTS\r\n    },\r\n    HERO4: {\r\n        id: 'HERO4',\r\n        name: 'Stefan',\r\n        rarity: Rarity.T,\r\n        imgUrl: 'img/char/battle_monk.png',\r\n        bbaMult: 1.0,\r\n        class: ClassData.THIEF_CLASS,\r\n        description: 'Orphaned at a young age he grew up on the busy streets of capital city surviving off larceny and small sketchy jobs. As he came of age he met a wonderful woman and together they had a beautiful baby girl. Now he sells his special set of skills to the highest bidder in order to provide for his family.',\r\n        modAbilityList: [] as ModifierAbility[],\r\n        upgradeRequirements: MINSTREL_REQUIREMENTS\r\n    },\r\n    HERO5: {\r\n        id: 'HERO5',\r\n        name: 'Caleb',\r\n        rarity: Rarity.T,\r\n        imgUrl: 'img/char/kris.png',\r\n        bbaMult: 1.0,\r\n        class: ClassData.SWORDSMAN_CLASS,\r\n        description: 'Son of a murdered nobleman, he was brought up in a capital city orphanage. There he learned from the pious sisters about the sins of upper society that ultimately brought death to his family. When he came of age he bought an old rusty sword and swore to avenge his fallen father and bring down the country\\'s degenerate aristocracy.',\r\n        modAbilityList: [] as ModifierAbility[],\r\n        upgradeRequirements: WARRIOR_REQUIREMENTS\r\n    },\r\n    HERO6: {\r\n        id: 'HERO6',\r\n        name: 'Vy',\r\n        rarity: Rarity.T,\r\n        imgUrl: 'img/char/sprite.png',\r\n        bbaMult: 1.0,\r\n        class: ClassData.ELEMENTALIST_CLASS,\r\n        description: 'Daughter of a wealthy family of merchants, her arcane education started at a young age and she studied under some of the most talented sorcerers of our time. She left her family on a disagrement as they were seeking to use her arcane abilities to expand the family business whereas she knew she was meant to serve a higher purpose.',\r\n        modAbilityList: [] as ModifierAbility[],\r\n        upgradeRequirements: MAGE_REQUIREMENTS\r\n    },\r\n    HERO7: {\r\n        id: 'HERO7',\r\n        name: 'Mai',\r\n        rarity: Rarity.T,\r\n        imgUrl: 'img/char/julie.png',\r\n        bbaMult: 1.0,\r\n        class: ClassData.ARCHER_CLASS,\r\n        description: '.',\r\n        modAbilityList: [] as ModifierAbility[],\r\n        upgradeRequirements: MINSTREL_REQUIREMENTS\r\n    }\r\n}\r\n\r\nexport const HeroDataArray = new IndexedArray<string, BaseHero>(x => x.id, ...ObjectUtils.getValues(HeroData));","import Item from \"model/items/Item\";\r\nimport IndexedArray from \"business/collection/IndexedArray\";\r\nimport Weapon from \"model/items/Weapon\";\r\nimport Equipment, { EquipmentType } from \"model/items/Equipment\";\r\nimport * as ClassData from 'data/ClassData';\r\nimport ObjectUtils from \"business/utils/ObjectUtils\";\r\n\r\nexport const NO_ICON_PATH = \"img/items/none.png\";\r\n\r\n/*\r\n    Item identification organisation :\r\n    0-1000 : Weapons\r\n    1000-6000 : Equipment\r\n    6000-7000 : Orbs - rank up material\r\n    7000-10000 : Craft materials\r\n */\r\n\r\nexport const ItemData : {[itemId : string] : Item} = {\r\n    // ---------------------------------- 0-1000 Weapons -------------------------------------\r\n    WOODEN_STICK: new Equipment({\r\n        id: \"ITEM1\",\r\n        name: 'Wooden Stick',\r\n        description : 'A sturdy branch fallen from a tree. You could throw it at something but honestly you\\'re better off just keeping it for firewood.',\r\n        icon: 'img/items/stick.png',\r\n        ba: 1,\r\n        classRestriction: [],\r\n        type : EquipmentType.ONE_HANDED,\r\n        price : 0\r\n    }),\r\n    STONE_SLING: new Equipment({\r\n        id: \"ITEM2\",\r\n        name: 'Stone Sling',\r\n        description : 'A rudimentary sling to throw stones at your ennemies.',\r\n        icon: '',\r\n        ba: 8,\r\n        classRestriction: [ClassData.MINSTREL_CLASS.name],\r\n        type : EquipmentType.TWO_HANDED,\r\n        price : 2\r\n    }),\r\n    WOODEN_SWORD: new Equipment({\r\n        id: \"ITEM3\",\r\n        name: 'Wooden Sword',\r\n        description : 'Careful with that, you might actually manage to hurt someone.',\r\n        icon: '',\r\n        ba: 5,\r\n        classRestriction: [ClassData.WARRIOR_CLASS.name],\r\n        type : EquipmentType.ONE_HANDED,\r\n        price : 2\r\n    }),\r\n    OLD_OAK_TWIG: new Equipment({\r\n        id: \"ITEM4\",\r\n        name: 'Old Oak Twig',\r\n        description : 'Some people say oak is a magical catalyst, maybe you could try casting a spell using this twig.',\r\n        icon: 'img/items/stick.png',\r\n        ba: 4,\r\n        classRestriction: [ClassData.MAGE_CLASS.name],\r\n        type : EquipmentType.ONE_HANDED,\r\n        price : 5\r\n    }),\r\n    BIG_ROCK: new Equipment({\r\n        id: \"ITEM5\",\r\n        name: 'Big Rock',\r\n        description : 'A rock, it\\'s quite big.',\r\n        icon: '',\r\n        ba: 2,\r\n        classRestriction: [],\r\n        type : EquipmentType.TWO_HANDED,\r\n        price : 0\r\n    }),\r\n    // ---------------------------------- 1000-6000 Equipment -------------------------------------\r\n    RAGGED_SHIRT: new Equipment({\r\n        id: \"ITEM1000\",\r\n        name: 'Ragged Shirt',\r\n        description : 'A piece of cloth that passes for a shirt.',\r\n        icon: '',\r\n        ba: 3,\r\n        classRestriction: [],\r\n        type : EquipmentType.TORSO,\r\n        price : 1\r\n    }),\r\n    RAGGED_GLOVES: new Equipment({\r\n        id: \"ITEM1001\",\r\n        name: 'Ragged Gloves',\r\n        description : 'Looks like an old sock in which someone would had pocked holes.',\r\n        icon: '',\r\n        ba: 1,\r\n        classRestriction: [],\r\n        type : EquipmentType.HANDS,\r\n        price : 1\r\n    }),\r\n    RAGGED_BREACHES: new Equipment({\r\n        id: \"ITEM1002\",\r\n        name: 'Ragged Breaches',\r\n        description : 'Barely covers up your underwear.',\r\n        icon: '',\r\n        ba: 2,\r\n        classRestriction: [],\r\n        type : EquipmentType.LEGS,\r\n        price : 1\r\n    }),\r\n    RAGGED_BOOTS: new Equipment({\r\n        id: \"ITEM1003\",\r\n        name: 'Ragged Boots',\r\n        description : 'Somehow manages to protect the sole of your feet.',\r\n        icon: '',\r\n        ba: 1,\r\n        classRestriction: [],\r\n        type : EquipmentType.FEET,\r\n        price : 1\r\n    }),\r\n    // ---------------------------------- 6000-7000 Orbs / Rank up materials -------------------------------------\r\n    COURAGE_ORB:{\r\n        id: \"ITEM6000\",\r\n        name: 'Orb of courage',\r\n        description : 'There is power brewing inside this glass sphere. Keep it preciously.',\r\n        icon: 'img/items/courage_orb.png',\r\n        price : 5\r\n    },\r\n    SPIRIT_ORB:{\r\n        id: \"ITEM6001\",\r\n        name: 'Orb of spirit',\r\n        description : 'There is power brewing inside this glass sphere. Keep it preciously.',\r\n        icon: 'img/items/spirit_orb.png',\r\n        price : 5\r\n    },\r\n    SENSES_ORB:{\r\n        id: \"ITEM6002\",\r\n        name: 'Orb of senses',\r\n        description : 'There is power brewing inside this glass sphere. Keep it preciously.',\r\n        icon: 'img/items/senses_orb.png',\r\n        price : 5\r\n    },\r\n};\r\n\r\nexport const ItemDataArray = new IndexedArray<string, Item>(x => x.id, ...ObjectUtils.getValues(ItemData));","import Hero from \"model/Hero\";\r\nimport EquipmentSetHelper from \"business/EquipmentSetHelper\";\r\nimport { SortOrder } from \"model/Sorting\";\r\nimport { HeroDataArray } from \"data/HeroData\";\r\nimport { rarityMaxRank } from \"model/Rarity\";\r\n\r\nclass HeroHelper {\r\n    getPower = (hero: Hero) => {\r\n        return this.powerFormula(hero.level, hero.rank);\r\n    }\r\n\r\n    powerFormula = (lvl: number, rank: number) => {\r\n        return lvl * this.powerMultiplier(rank);\r\n    }\r\n\r\n    powerMultiplier = (rank: number) => {\r\n        return Math.pow(3, rank - 1);\r\n    }\r\n\r\n    expRequiredToLevel = (hero: Hero) => {\r\n        return hero.level * Math.pow(3, hero.rank - 1);\r\n    }\r\n\r\n    computeHeroBA = (hero: Hero) => {\r\n        const heroData = HeroDataArray.get(hero.data);\r\n        const dupBonus = this.computeDupBonusBA(hero);\r\n        const bba = heroData.bbaMult * hero.level * 4 * dupBonus;\r\n        return Math.floor(bba + EquipmentSetHelper.computeBA(hero.equipment));\r\n    }\r\n\r\n    computeDupBonusBA = (hero: Hero) => {\r\n        return -(1 / (0.5 * hero.dupLevel + 1)) + 2\r\n    }\r\n\r\n    //Sort by rank, then level, then name\r\n    createHeroSort = (rankOrder: SortOrder, lvlOrder: SortOrder, nameOrder: SortOrder) => {\r\n        return (h1: Hero, h2: Hero) => {\r\n            let result = h1.rank - h2.rank;\r\n            if (result != 0) {\r\n                return result * rankOrder;\r\n            }\r\n            result = h1.level - h2.level;\r\n            if (result != 0) {\r\n                return result * lvlOrder;\r\n            }\r\n            const h1Data = HeroDataArray.get(h1.data);\r\n            const h2Data = HeroDataArray.get(h2.data);\r\n            return h1Data.name.localeCompare(h2Data.name) * nameOrder;\r\n        }\r\n    }\r\n\r\n    isMaxLevel = (hero: Hero) => {\r\n        return hero.level >= (hero.rank * 100);\r\n    }\r\n\r\n    isMaxRank = (hero: Hero) => {\r\n        const heroData = HeroDataArray.get(hero.data);\r\n        let maxRank;\r\n        if (heroData.maxRank) {\r\n            maxRank = heroData.maxRank;\r\n        }\r\n        else {\r\n            maxRank = rarityMaxRank[heroData.rarity];\r\n        }\r\n        return hero.rank >= maxRank;\r\n    }\r\n}\r\n\r\nexport default new HeroHelper();","import * as React from 'react';\r\nimport './Resource.css';\r\n\r\nexport enum ResourceType {\r\n    GOLD = 'gold',\r\n    EXP = 'exp',\r\n    SHARD = 'shard',\r\n    TIME = 'time',\r\n}\r\n\r\ninterface IResourceProps {\r\n    value: number | string;\r\n    type: ResourceType;\r\n    modifier?: boolean;\r\n    remove?: boolean;\r\n    inline?: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\ninterface IResourceState {\r\n\r\n}\r\n\r\nexport default class Resource extends React.Component<IResourceProps, IResourceState>{\r\n    constructor(props: IResourceProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.inline) {\r\n            return (\r\n                <span style={this.props.style} className=\"resource-container\">\r\n                    {this.renderContent()}\r\n                </span>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div style={this.props.style} className=\"resource-container\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderContent = () => {\r\n        const iconUrl = this.computeIconUrl(this.props.type);\r\n        const colorClass = this.computeColorClass();\r\n        const sign = this.computeSign();\r\n\r\n        const result: JSX.Element[] = [];\r\n        result.push(<img key=\"RESSOURCE_ICON\" className=\"icon\" src={iconUrl} />);\r\n        result.push(\r\n            <span key=\"RESSOURCE_VALUE\" className={`resource-value ${colorClass}`}>\r\n                {`${sign}${this.props.value}`}\r\n            </span>\r\n        );\r\n        return result;\r\n    }\r\n\r\n    computeIconUrl = (type: ResourceType) => {\r\n        switch (type) {\r\n            case ResourceType.EXP:\r\n                return \"img/xp.png\";\r\n            case ResourceType.GOLD:\r\n                return \"img/gold.png\";\r\n            case ResourceType.SHARD:\r\n                return \"img/shard.png\";\r\n            case ResourceType.TIME:\r\n                return \"img/clock.png\";\r\n        }\r\n    }\r\n\r\n    computeColorClass = () => {\r\n        if (this.props.modifier) {\r\n            if (this.props.remove) {\r\n                return 'remove-txt';\r\n            }\r\n            else {\r\n                return 'add-txt';\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    computeSign = () => {\r\n        if (this.props.modifier) {\r\n            if (this.props.remove) {\r\n                return '-';\r\n            }\r\n            else {\r\n                return '+';\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n}","import Quest from \"model/Quest\";\r\nimport GameModelStore from \"store/game-model/GameModelStore\";\r\nimport { GameModelActionTypes } from \"store/game-model/GameModelActionTypes\";\r\nimport BattleEngine from \"business/BattleEngine\";\r\nimport GameModelDispatcher from \"store/game-model/GameModelDispatcher\";\r\nimport Hero from \"model/Hero\";\r\nimport { QuestDataArray } from \"data/QuestData\";\r\nimport BaseQuest from \"model/BaseQuest\";\r\nimport QuestDrop from \"model/QuestDrop\";\r\nimport EndQuestResult from \"business/EndQuestResult\";\r\n\r\nclass QuestHelper {\r\n\r\n    // Linear success chance between 80% to 120% of the reqPower\r\n    // <80% -> 0% chance success | >120% -> 100% chance success\r\n    computeSuccessRate = (questPower: number, heroPower: number) => {\r\n        return (5 * heroPower) / (2 * questPower) - 2;\r\n    }\r\n\r\n    endQuest = (quest: Quest, data ?: BaseQuest) => {\r\n        const questResult = new EndQuestResult();\r\n        questResult.quest = quest;\r\n        const questData = data || QuestDataArray.get(quest.id);\r\n        const questHeroes = this.getQuestHeroes(quest);\r\n        const isWin = (questData.ennemies) ? BattleEngine.computeBattleResult(questHeroes, questData.ennemies) : true;\r\n        questResult.result = isWin;\r\n        if(isWin){\r\n            const drops = this.computeDrops(quest, questData);\r\n            questResult.drops = drops;\r\n            GameModelDispatcher.dispatch({\r\n                type: GameModelActionTypes.END_QUEST_SUCCEED,\r\n                payload: {\r\n                    quest: quest,\r\n                    drops : drops,\r\n                    questData : data\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            GameModelDispatcher.dispatch({\r\n                type: GameModelActionTypes.END_QUEST_FAIL,\r\n                payload: {\r\n                    quest: quest,\r\n                    questData : data\r\n                }\r\n            });\r\n        }\r\n        return questResult;\r\n    }\r\n\r\n    computeDrops = (quest: Quest, questData: BaseQuest) => {\r\n        const drops: QuestDrop[] = [];\r\n        for (let drop of questData.drop) {\r\n            let quantity = 0;\r\n            for (let rate of drop.rates) {\r\n                if (Math.random() * 100 <= rate) {\r\n                    quantity++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            if (quantity > 0) {\r\n                drops.push({ item: drop.item, quantity: quantity });\r\n            }\r\n        }\r\n        return drops;\r\n    }\r\n\r\n    getQuestHeroes = (quest: Quest) => {\r\n        const heroes = GameModelStore.getState().heroes;\r\n        const questHeroes = [];\r\n        for (let hero of heroes) {\r\n            if (hero.questId === quest.id) {\r\n                questHeroes.push(hero);\r\n            }\r\n        }\r\n        return questHeroes;\r\n    }\r\n\r\n    startQuest = (quest: Quest, heroes: Hero[]) => {\r\n        GameModelDispatcher.dispatch({\r\n            type: GameModelActionTypes.START_QUEST,\r\n            payload: {\r\n                heroes: heroes,\r\n                quest: quest\r\n            }\r\n        })\r\n    }\r\n\r\n    durationToString(duration: number) {\r\n        const hours = Math.floor(duration / (60 * 60000));\r\n        const minutes = Math.floor((duration - hours * (60 * 60000)) / 60000);\r\n        const seconds = Math.floor((duration - hours * (60 * 60000) - minutes * 60000) / 1000)\r\n\r\n        let hourStr = hours.toString();\r\n        if (hourStr.length < 2) {\r\n            hourStr = '0' + hourStr;\r\n        }\r\n        let minutesStr = minutes.toString();\r\n        if (minutesStr.length < 2) {\r\n            minutesStr = '0' + minutesStr;\r\n        }\r\n        let secondsStr = seconds.toString();\r\n        if (secondsStr.length < 2) {\r\n            secondsStr = '0' + secondsStr;\r\n        }\r\n        return hourStr + ':' + minutesStr + ':' + secondsStr;\r\n    }\r\n}\r\n\r\nexport default new QuestHelper();","export enum TabType {\r\n    HEROES = 'heroes',\r\n    IMPROVEMENTS = 'improvements',\r\n    CFH = 'cfh',\r\n    QUESTS = 'quests',\r\n    ITEMS = 'items',\r\n    LOG = 'log',\r\n    DUNGEONS = 'dungeons',\r\n    SHOP = 'shop'\r\n}\r\n\r\ntype Listener = (tab: TabType) => void;\r\n\r\nclass NavigationStore {\r\n    listener: Listener;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    navigateTo = (tab: TabType) => {\r\n        this.listener(tab);\r\n    }\r\n\r\n}\r\n\r\nexport default new NavigationStore();","import Duration from \"model/Duration\";\r\nimport IndexedArray from \"business/collection/IndexedArray\";\r\nimport BaseQuest from \"model/BaseQuest\";\r\nimport * as ClassData from 'data/ClassData';\r\nimport ObjectUtils from \"business/utils/ObjectUtils\";\r\nimport { ItemData } from \"data/ItemData\";\r\n\r\nexport const QuestData: { [key: string]: BaseQuest } = {\r\n    QUEST01: {\r\n        id: 'QUEST01',\r\n        title: 'Your first quest !',\r\n        description: 'Congratulations ! Your guild has just opened for business ! As you go about town to advertise the services of your newly founded guild, a frail old woman comes forward to ask if you will help pull her cat out of the well it got stuck in.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 0, 10),\r\n        ennemies: null,\r\n        reward: {\r\n            gold: 5,\r\n            exp: 1,\r\n            shard: 2\r\n        },\r\n        drop: [{ item: ItemData.WOODEN_STICK, rates: [100] }],\r\n        activates: ['QUEST02', 'QUEST03', 'QUEST04'],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    QUEST02: {\r\n        id: 'QUEST02',\r\n        title: 'Looking for Mitchel',\r\n        description: 'A frantic mother barges through the guild doors, she has lost her son Mitchel on the outskirts of town and is desperate for some help. Night is falling and wolves have been spotted nearby.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 0, 20),\r\n        ennemies: [{\r\n            class: ClassData.BEAST_CLASS,\r\n            name: 'Big Squirrel',\r\n            ba: 4\r\n        }],\r\n        reward: {\r\n            gold: 5,\r\n            exp: 2,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: ['QUEST06'],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 2\r\n    QUEST03: {\r\n        id: 'QUEST03',\r\n        title: 'The haunted graveyard',\r\n        description: 'The village mayor comes knocking at the guild door. Some rumours have been going around town about strange noises and movement in the local graveyard. Elections are coming up and although he is not a superstitious person he would like for someone to take a look.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 0, 20),\r\n        ennemies: [{\r\n            class: ClassData.MAGICAL_CLASS,\r\n            name: 'Animated Spade',\r\n            ba: 4\r\n        }],\r\n        reward: {\r\n            gold: 5,\r\n            exp: 2,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: ['QUEST05'],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    QUEST04: {\r\n        id: 'QUEST04',\r\n        title: 'The apple tree robbers',\r\n        description: 'Old farmer Mc.Pearson has sent a letter to ask for help. His orchards are being frequently visited by a thief who is stealing his apple caskets.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 0, 20),\r\n        ennemies: [{\r\n            class: ClassData.RASCAL_CLASS,\r\n            name: 'Juvenile Delinquent',\r\n            ba: 4\r\n        }],\r\n        reward: {\r\n            gold: 5,\r\n            exp: 2,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: ['QUEST08'],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 3\r\n    QUEST05: {\r\n        id: 'QUEST05',\r\n        title: 'Researching the art of object animation',\r\n        description: 'You report your findings on the animated spade you found causing the night commotion in the graveyard to the village mayor. He is deeply concerned by this kind of magical practice and would like for you to do some research and possibly find the culprit troublemaking mage. You decide the best place to start an investigation would be to find out what you can about this kind of magical art in the well-furnished capital library.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 0, 40),\r\n        ennemies: [],\r\n        reward: {\r\n            gold: 5,\r\n            exp: 3,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: ['QUEST07'],\r\n        repeat: null,\r\n        classReq: [ClassData.MAGE_CLASS.name]\r\n    },\r\n    // Expected lvl : 2\r\n    QUEST06: {\r\n        id: 'QUEST06',\r\n        title: 'Exploring the woods',\r\n        description: 'A walk through the woods. Maybe you will find something interesting along the way.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 0, 20),\r\n        ennemies: [{\r\n            class: ClassData.BEAST_CLASS,\r\n            name: 'Feeble Stray Wolf',\r\n            ba: 13\r\n        }],\r\n        reward: {\r\n            gold: 1,\r\n            exp: 1,\r\n            shard: 0\r\n        },\r\n        drop: [\r\n            { item: ItemData.WOODEN_STICK, rates: [50, 50, 50] },\r\n            /*{ item: ItemData.COURAGE_ORB, rates: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100] },\r\n            { item: ItemData.SENSES_ORB, rates: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100] },\r\n            { item: ItemData.SPIRIT_ORB, rates: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100] },*/\r\n        ],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 4\r\n    QUEST07: {\r\n        id: 'QUEST07',\r\n        title: 'The graveyard stakeout',\r\n        description: 'It seems that object animation is a very specific subset of magic that requires robust basics and is somewhat linked to necromancy. As everyone suspects, necromancy and graveyards are a recipe for trouble. The situation might be more serious than what it seemed at first sight. You decide to organize a stakeout at the graveyard to try and find the culprit and resolve the situation before it blows up.',\r\n        maxPartySize: 2,\r\n        duration: new Duration(0, 0, 1, 0),\r\n        ennemies: [{\r\n            class: ClassData.RASCAL_CLASS,\r\n            name: 'Hooded figure',\r\n            ba: 20\r\n        }],\r\n        reward: {\r\n            gold: 8,\r\n            exp: 4,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 3\r\n    QUEST08: {\r\n        id: 'QUEST08',\r\n        title: 'The carpenter\\'s troubles',\r\n        description: 'Old farmer Mc.Pearson\\'s nephew Mike is being threatened by a band of local thugs. Mike is a young talented carpenter and offers to come work on improvements for your guild in exchange for defeating those bandits.',\r\n        maxPartySize: 2,\r\n        duration: new Duration(0, 0, 0, 40),\r\n        ennemies: [{\r\n            class: ClassData.RASCAL_CLASS,\r\n            name: 'Thug',\r\n            ba: 8\r\n        },\r\n        {\r\n            class: ClassData.RASCAL_CLASS,\r\n            name: 'Thug',\r\n            ba: 8\r\n        },\r\n        {\r\n            class: ClassData.RASCAL_CLASS,\r\n            name: 'Thug',\r\n            ba: 8\r\n        }],\r\n        reward: {\r\n            gold: 3,\r\n            exp: 3,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 20-30\r\n    QUEST09: {\r\n        id: 'QUEST09',\r\n        title: 'Jake the beast hunter',\r\n        description: 'A savage looking man comes knocking at your guild door. He claims to a famous beast hunter named \\'Jake\\' looking for help in his next hunt through the wilds. Although you have never heard of this man before he seems competent enough and -most importantly- willing to pay for your services.',\r\n        maxPartySize: 2,\r\n        duration: new Duration(0, 0, 10, 0),\r\n        ennemies: [{\r\n            class: ClassData.BEAST_CLASS,\r\n            name: 'Grizzly Bear',\r\n            ba: 80\r\n        },\r\n        {\r\n            class: ClassData.BEAST_CLASS,\r\n            name: 'Enraged Boar',\r\n            ba: 120\r\n        }],\r\n        reward: {\r\n            gold: 5,\r\n            exp: 10,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 35\r\n    QUEST10: {\r\n        id: 'QUEST10',\r\n        title: 'What\\'s a Harkling ?',\r\n        description: 'You\\'ve received a letter from Jake (the hunter). He\\'s asking for help tracking down a scourge of Harklings down in the fire lands. He also mentions a hefty donation to the guild if it accepts to help.',\r\n        maxPartySize: 2,\r\n        duration: new Duration(0, 0, 15, 0),\r\n        ennemies: [{\r\n            class: ClassData.HARKLING_CLASS,\r\n            name: 'Baby Harkling',\r\n            ba: 10\r\n        },\r\n        {\r\n            class: ClassData.HARKLING_CLASS,\r\n            name: 'Baby Harkling',\r\n            ba: 10\r\n        },\r\n        {\r\n            class: ClassData.HARKLING_CLASS,\r\n            name: 'Baby Harkling',\r\n            ba: 10\r\n        },\r\n        {\r\n            class: ClassData.HARKLING_CLASS,\r\n            name: 'Mother Harkling',\r\n            ba: 160\r\n        }],\r\n        reward: {\r\n            gold: 10,\r\n            exp: 30,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 40\r\n    QUEST11: {\r\n        id: 'QUEST11',\r\n        title: 'The Tomjaker tooth',\r\n        description: 'It\\'s Jake again, this time he is rambling about a... tooth ? He claims it has great value especially if sold to the Ja\\'raki tribe who live deep in the western jungles. He promises that if the guild helps, he\\'ll share the spoils of the tooth fairly. If he makes it back alive.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 20, 0),\r\n        ennemies: [\r\n            {\r\n                class: ClassData.TOMJAKER_CLASS,\r\n                name: 'Imposant Tomjaker',\r\n                ba: 200\r\n            }],\r\n        reward: {\r\n            gold: 10,\r\n            exp: 45,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 50\r\n    QUEST12: {\r\n        id: 'QUEST12',\r\n        title: 'Hunting Frostbears',\r\n        description: 'Jake is back, and this time he wants to go on an epic hunt for Frostbears. You\\'ve already heard tales of those magnificent creatures, and from what you remember of them they have a ferocious temper and will maul or eat anything that comes close to their den. Jake seems very excited at the prospect.',\r\n        maxPartySize: 4,\r\n        duration: new Duration(0, 0, 30, 0),\r\n        ennemies: [\r\n            {\r\n                class: ClassData.FROSTBEAR_CLASS,\r\n                name: 'Frostbear',\r\n                ba: 250\r\n            },\r\n            {\r\n                class: ClassData.FROSTBEAR_CLASS,\r\n                name: 'Frostbear',\r\n                ba: 250\r\n            },\r\n            {\r\n                class: ClassData.FROSTBEAR_CLASS,\r\n                name: 'Frostbear',\r\n                ba: 250\r\n            }],\r\n        reward: {\r\n            gold: 20,\r\n            exp: 60,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 70\r\n    QUEST13: {\r\n        id: 'QUEST13',\r\n        title: 'A Beewiz infestation',\r\n        description: 'You\\'ve receive a letter from Jake. He is currently helping out a small northern village that is suffering from a terrifying Beewiz colony. These flying creatures are known to be a nuisance when encountered alone, when they form a colony it becomes urgent to evacuate neighbouring villages before a tragedy happens.',\r\n        maxPartySize: 2,\r\n        duration: new Duration(0, 0, 30, 0),\r\n        ennemies: [\r\n            {\r\n                class: ClassData.BEEWIZ_CLASS,\r\n                name: 'Beewiz',\r\n                ba: 300\r\n            },\r\n            {\r\n                class: ClassData.BEEWIZ_CLASS,\r\n                name: 'Beewiz',\r\n                ba: 300\r\n            },\r\n            {\r\n                class: ClassData.BEEWIZ_CLASS,\r\n                name: 'Beewiz Queen',\r\n                ba: 330\r\n            }],\r\n        reward: {\r\n            gold: 30,\r\n            exp: 90,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 90\r\n    QUEST14: {\r\n        id: 'QUEST14',\r\n        title: 'A beast among beasts',\r\n        description: 'Jake is back, and this time he is offering to go on a quest like no other. He is going to track the mightiest beast there is to slay and enter the legends. He has taken a liking to the guild and wants to share the glory and spoils with it. For the moment he has no clue where to start looking for his beast.',\r\n        maxPartySize: 3,\r\n        duration: new Duration(0, 0, 40, 0),\r\n        ennemies: [\r\n            {\r\n                class: ClassData.HARKLING_CLASS,\r\n                name: 'Harkling Alpha',\r\n                ba: 400\r\n            },\r\n            {\r\n                class: ClassData.TOMJAKER_CLASS,\r\n                name: 'Ancient Tomjaker',\r\n                ba: 400\r\n            },\r\n            {\r\n                class: ClassData.FROSTBEAR_CLASS,\r\n                name: 'Deranged Frostbear',\r\n                ba: 400\r\n            }],\r\n        reward: {\r\n            gold: 60,\r\n            exp: 200,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 120\r\n    QUEST15: {\r\n        id: 'QUEST15',\r\n        title: 'On the trace of the Jabberwocky',\r\n        description: 'During the latest hunt, you rested the night in an isolated village high up in the mountains, where you heard about the tale of the Jabberwocky. A formidable beast made of scale, fang, claw and wing, capable of crushing a man with the power of it\\'s stare. This tale got Jake visibly excited and he is determined to track down the fabled creature.',\r\n        maxPartySize: 1,\r\n        duration: new Duration(0, 0, 30, 0),\r\n        ennemies: [\r\n            {\r\n                class: ClassData.RASCAL_CLASS,\r\n                name: 'Bandit',\r\n                ba: 550\r\n            }],\r\n        reward: {\r\n            gold: 40,\r\n            exp: 100,\r\n            shard: 0\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: [ClassData.MINSTREL_CLASS.name]\r\n    },\r\n    // Expected lvl : 150\r\n    QUEST16: {\r\n        id: 'QUEST16',\r\n        title: 'The vaporous swamp',\r\n        description: 'After going through countless villages in the region, Jake finally finds an old man that talks about the great Jabberwocky hunt the people here took part in back when he was young. He says that the last he heard, all that was left of the beasts kind could only be found deep in the vaporous swamps, a local swamp named so because of jets of hot steam coming out of cracks in the ground. After asking for directions and a few days travel you make it to a valley covered in low hanging clouds. The swamps seem to be at the bottom.',\r\n        maxPartySize: 3,\r\n        duration: new Duration(0, 0, 30, 0),\r\n        ennemies: [\r\n            {\r\n                class: ClassData.VORPAL_CLASS,\r\n                name: 'Vorpal Wolf',\r\n                ba: 800\r\n            },\r\n            {\r\n                class: ClassData.VORPAL_CLASS,\r\n                name: 'Vorpal Bear',\r\n                ba: 850\r\n            }],\r\n        reward: {\r\n            gold: 80,\r\n            exp: 200,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 180\r\n    QUEST17: {\r\n        id: 'QUEST17',\r\n        title: 'Finding the beast',\r\n        description: 'You soon discover that the swamps are infused with a magical substance that seems to be tainting the wildlife. The animals here have a strange glow to their eyes and are particularly ferocious. Jake calls it Vorpal and says it has strange and fantastic properties. You continue your search through the endless fog when a scream resonnates through the swamp and makes everyone halt. Jake starts grinning wildly, the Jabberwocky is close.',\r\n        maxPartySize: 3,\r\n        duration: new Duration(0, 0, 40, 0),\r\n        ennemies: [\r\n            {\r\n                class: ClassData.JABBERWOCKY_CLASS,\r\n                name: 'Jabberwocky',\r\n                ba: 1000\r\n            }],\r\n        reward: {\r\n            gold: 80,\r\n            exp: 200,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 210\r\n    QUEST18: {\r\n        id: 'QUEST18',\r\n        title: 'The track',\r\n        description: 'Things did not go as planned. When the guild stumbled on the Jabberwocky it took off and fought from the other side of the mist, lunging at the party members one by one. Jake got wounded pretty bad during one of those lunges, just as he managed to pin down the terrible beast. With the beast down the fight got less one-sided and finally progressed. Unfortunately the beast ended up lashing out at Jake before fleeing back into the fog for good. Jake got hit by the deadly claw and the guild did everything to bring him back to safety and to get him to a healer in time. Unfortunately he didn\\'t make it. Now the guild is out for the blood of the beast.',\r\n        maxPartySize: 3,\r\n        duration: new Duration(0, 0, 30, 0),\r\n        ennemies: [{\r\n                class: ClassData.VORPAL_CLASS,\r\n                name: 'Vorpal Bear',\r\n                ba: 1200\r\n            }],\r\n        reward: {\r\n            gold: 100,\r\n            exp: 300,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 250\r\n    QUEST19: {\r\n        id: 'QUEST19',\r\n        title: 'The deep swamp',\r\n        description: 'The guild has found a way through the fog deep inside the swamp. The light doesn\\'t seem to filter through correclty here, and you can hear bizarre screams in the distance. These screams will guid you through the thick of these deep swamps.',\r\n        maxPartySize: 3,\r\n        duration: new Duration(0, 0, 30, 0),\r\n        ennemies: [{\r\n                class: ClassData.VORPAL_CLASS,\r\n                name: 'Vorpal Abomination',\r\n                ba: 1450\r\n            }],\r\n        reward: {\r\n            gold: 120,\r\n            exp: 400,\r\n            shard: 1\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    },\r\n    // Expected lvl : 300\r\n    QUEST20: {\r\n        id: 'QUEST20',\r\n        title: 'Jabberwocky layer',\r\n        description: 'Inside the deepest part of the vaporous swamp you stumble upon the layer of the beast. None of it\\'s kind has come out to attack yet. The guild plans how it will conduct the attack.',\r\n        maxPartySize: 5,\r\n        duration: new Duration(0, 1, 0, 0),\r\n        ennemies: [{\r\n                class: ClassData.JABBERWOCKY_CLASS,\r\n                name: 'Jabberwocky',\r\n                ba: 1600\r\n            },\r\n            {\r\n                class: ClassData.JABBERWOCKY_CLASS,\r\n                name: 'Jabberwocky Prime',\r\n                ba: 1800\r\n            }],\r\n        reward: {\r\n            gold: 150,\r\n            exp: 500,\r\n            shard: 3\r\n        },\r\n        drop: [],\r\n        activates: [],\r\n        repeat: null,\r\n        classReq: []\r\n    }\r\n};\r\n\r\nexport const QuestDataArray = new IndexedArray<string, BaseQuest>(x => x.id, ...ObjectUtils.getValues(QuestData));","import Item from \"model/items/Item\";\r\n\r\nexport default class Equipment extends Item {\r\n    ba: number;\r\n    classRestriction: string[];\r\n    type: EquipmentType;\r\n\r\n    constructor(props : Equipment){\r\n        super();\r\n        Object.assign(this, props);\r\n    }\r\n}\r\n\r\nexport enum EquipmentType {\r\n    HEAD = ('head'),\r\n    TORSO = ('torso'),\r\n    HANDS = ('hands'),\r\n    LEGS = ('legs'),\r\n    FEET = ('feet'),\r\n    ONE_HANDED = ('one_handed'),\r\n    TWO_HANDED = ('two_handed')\r\n}","import * as React from 'react';\r\nimport './Overlay.css';\r\n\r\ninterface IOverlayProps {\r\n    display: boolean;\r\n    closeOverlayCallback: () => void;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\ninterface IOverlayState {\r\n\r\n}\r\n\r\nexport default class Overlay extends React.Component<IOverlayProps, IOverlayState>{\r\n    constructor(props: IOverlayProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const heightOffset = (100 - this.props.height) / 2;\r\n        const widthOffset = (100 - this.props.width) / 2;\r\n        if (this.props.display) {\r\n            return (\r\n                <div className=\"blackout\" onClick={this.closeOverlay}>\r\n                    <div style={{\r\n                        top: `${heightOffset}%`,\r\n                        bottom: `${heightOffset}%`,\r\n                        left: `${widthOffset}%`,\r\n                        right: `${widthOffset}%`,\r\n                    }} className=\"overlay\" onClick={this.dontCloseOverlay}>\r\n                        <input className=\"cross\" type=\"image\" src=\"img/cross.png\" onClick={this.closeOverlay} />\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    closeOverlay = () => {\r\n        this.props.closeOverlayCallback();\r\n    }\r\n\r\n    dontCloseOverlay = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n}","class ObjectUtils {\r\n    getValues = (obj: any) => {\r\n        return Object.keys(obj).map((key) => obj[key]);\r\n    }\r\n}\r\n\r\nexport default new ObjectUtils();","\r\ntype KeyExtractor<K, V> = (obj: V) => K;\r\n\r\nexport default class IndexedArray<K, V>{\r\n    extractor: KeyExtractor<K, V>;\r\n    internalMap: Map<K, V>;\r\n\r\n    constructor(extractor: KeyExtractor<K, V>, ...elements : V[]) {\r\n        this.extractor = extractor;\r\n        this.internalMap = new Map<K, V>();\r\n        this.addAll(elements);\r\n    }\r\n\r\n    add = (obj: V) => {\r\n        this.internalMap.set(this.extractor(obj), obj);\r\n    }\r\n\r\n    addAll = (all: V[]) => {\r\n        for (let element of all) {\r\n            this.add(element);\r\n        }\r\n    }\r\n\r\n    get = (key: K) => {\r\n        return this.internalMap.get(key);\r\n    }\r\n\r\n    contains = (key: K) => {\r\n        return this.internalMap.has(key);\r\n    }\r\n\r\n    size = () => {\r\n        return this.internalMap.size;\r\n    }\r\n\r\n    asArray = () => {\r\n        return Array.from(this.internalMap.values());\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        let mapIterator = this.internalMap[Symbol.iterator]();\r\n        return {\r\n            next: () => {\r\n                let itResult: IteratorResult<[K, V]> = mapIterator.next();\r\n                let value = (itResult.value)?itResult.value[1]:null;\r\n                return { value: value, done: value == null };\r\n            }\r\n        }\r\n    };\r\n}","import * as React from 'react';\r\nimport Item from 'model/items/Item';\r\nimport ToolTip from 'components/generic/ToolTip';\r\nimport './ItemInfo.css';\r\nimport Equipment from 'model/items/Equipment';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\nimport Hero from 'model/Hero';\r\nimport ItemHelper from 'business/ItemHelper';\r\n\r\ninterface IItemInfoProps {\r\n    item: Item;\r\n    quantity: number;\r\n    equipHero?: Hero;\r\n    className?: string;\r\n    txtColor ?: string;\r\n    inline ?: boolean;\r\n}\r\n\r\nexport default class ItemInfo extends React.Component<IItemInfoProps> {\r\n    constructor(props: IItemInfoProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const containerStyle : React.CSSProperties = (this.props.inline)?{display:'inline-block'}:{};\r\n        const txtStyle = (this.props.txtColor)?{color:this.props.txtColor}:{};\r\n        return (\r\n            <div className={`item-container ${this.props.className}`} style={containerStyle} onDragStart={this.onItemDrag} onDoubleClick={this.onDoubleClick} draggable>\r\n                <ToolTip toolTipContent={this.renderItemInfo()}>\r\n                    <div className='item-img-container'>\r\n                        <img src={this.props.item.icon} />\r\n                        {this.props.quantity > 1 && \r\n                        <div className='item-quantity-txt' style={txtStyle}>{this.props.quantity}</div>}\r\n                    </div>\r\n                </ToolTip>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderItemInfo = () => {\r\n        let statsInfo;\r\n        if (this.props.item instanceof Equipment) {\r\n            const equipment = this.props.item as Equipment;\r\n            statsInfo = (\r\n                <div className='item-stats'>\r\n                    <div>\r\n                        Battle Ability : {equipment.ba}\r\n                    </div>\r\n                    <div>\r\n                        Type : {equipment.type}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='item-name'>\r\n                    {this.props.item.name}\r\n                </div>\r\n                <div className='item-description'>\r\n                    {this.props.item.description}\r\n                </div>\r\n                {statsInfo}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onItemDrag = (event: React.DragEvent<HTMLDivElement>) => {\r\n        event.dataTransfer.setData(\"itemId\", this.props.item.id);\r\n    }\r\n\r\n    onDoubleClick = () => {\r\n        if (this.props.equipHero && ItemHelper.isEquipable(this.props.item)) {\r\n            GameModelDispatcher.dispatch({\r\n                type: GameModelActionTypes.EQUIP_ITEM,\r\n                payload: {\r\n                    hero: this.props.equipHero,\r\n                    itemId: this.props.item.id,\r\n                    slot: ItemHelper.computeSlotForItem(this.props.item, this.props.equipHero)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n}","import Class from \"model/Class\";\r\n\r\nclass ClassHelper {\r\n\r\n    computeClassList = (cls: Class, atRank: number = null) => {\r\n        const result: string[] = [];\r\n        if (atRank == null || cls.onRank <= atRank) {\r\n            result.push(cls.name)\r\n        }\r\n        while (cls.previous) {\r\n            cls = cls.previous;\r\n            if (atRank == null || cls.onRank <= atRank) {\r\n                result.push(cls.name)\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    contains = (cls: Class, rank: number, klassList: string[]) => {\r\n        const classList = this.computeClassList(cls, rank);\r\n        for(const klass of klassList){\r\n            if(classList.indexOf(klass) > -1){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport default new ClassHelper();","export enum Rarity {\r\n    T = 't',\r\n    R = 'r',\r\n    EX = 'ex',\r\n    EL = 'el',\r\n    LE = 'le',\r\n\r\n    SP = 'sp',\r\n}\r\n\r\nexport const rarityMaxRank: { [rarity in Rarity]?: number } = {\r\n    t: 3,\r\n    r: 5,\r\n    ex: 8,\r\n    el: 10,\r\n    le: 15\r\n}","import Class from \"model/Class\";\r\n\r\n//Warrior classes\r\n\r\nexport const WARRIOR_CLASS : Class = {\r\n    name : 'warrior',\r\n    onRank : 0\r\n}\r\n\r\nexport const SWORDSMAN_CLASS : Class = {\r\n    name : 'swordsman',\r\n    onRank : 3,\r\n    previous : WARRIOR_CLASS\r\n}\r\n\r\nexport const KNIGHT_CLASS : Class = {\r\n    name : 'knight',\r\n    onRank : 5,\r\n    previous : SWORDSMAN_CLASS\r\n}\r\n\r\nexport const PALADIN_CLASS : Class = {\r\n    name : 'paladin',\r\n    onRank : 8,\r\n    previous : KNIGHT_CLASS\r\n}\r\n\r\nexport const MONK_CLASS : Class = {\r\n    name : 'monk',\r\n    onRank : 3,\r\n    previous : WARRIOR_CLASS\r\n}\r\n\r\nexport const PSIONIC_CLASS : Class = {\r\n    name : 'psionic',\r\n    onRank : 5,\r\n    previous : WARRIOR_CLASS\r\n}\r\n\r\nexport const BARBARIAN_CLASS : Class = {\r\n    name : 'barbarian',\r\n    onRank : 3,\r\n    previous : WARRIOR_CLASS\r\n}\r\n\r\nexport const BERSERKER_CLASS : Class = {\r\n    name : 'berserker',\r\n    onRank : 5,\r\n    previous : BARBARIAN_CLASS\r\n}\r\n\r\nexport const COLOSSUS_CLASS : Class = {\r\n    name : 'colossus',\r\n    onRank : 5,\r\n    previous : BARBARIAN_CLASS\r\n}\r\n\r\n// Minstrel classes\r\n\r\nexport const MINSTREL_CLASS : Class = {\r\n    name : 'minstrel',\r\n    onRank : 0\r\n}\r\n\r\nexport const ARCHER_CLASS : Class = {\r\n    name : 'archer',\r\n    onRank : 3,\r\n    previous : MINSTREL_CLASS\r\n}\r\n\r\nexport const SHARPSHOOTER_CLASS : Class = {\r\n    name : 'sharpshooter',\r\n    onRank : 5,\r\n    previous : ARCHER_CLASS\r\n}\r\n\r\nexport const BARD_CLASS : Class = {\r\n    name : 'bard',\r\n    onRank : 3,\r\n    previous : MINSTREL_CLASS\r\n}\r\n\r\nexport const DRUID_CLASS : Class = {\r\n    name : 'druid',\r\n    onRank : 5,\r\n    previous : BARD_CLASS\r\n}\r\n\r\nexport const THIEF_CLASS : Class = {\r\n    name : 'thief',\r\n    onRank : 3,\r\n    previous : MINSTREL_CLASS\r\n}\r\n\r\n// Mage classes\r\n\r\nexport const MAGE_CLASS : Class = {\r\n    name : 'mage',\r\n    onRank : 0\r\n}\r\n\r\nexport const ELEMENTALIST_CLASS : Class = {\r\n    name : 'elementalist',\r\n    onRank : 3,\r\n    previous : MAGE_CLASS\r\n}\r\n\r\nexport const PYROMANCER_CLASS : Class = {\r\n    name : 'pyromancer',\r\n    onRank : 5,\r\n    previous : ELEMENTALIST_CLASS\r\n}\r\n\r\nexport const ELECTROMANCER_CLASS : Class = {\r\n    name : 'electromancer',\r\n    onRank : 5,\r\n    previous : ELEMENTALIST_CLASS\r\n}\r\n\r\nexport const WARLOCK_CLASS : Class = {\r\n    name : 'warlock',\r\n    onRank : 3,\r\n    previous : MAGE_CLASS\r\n}\r\n\r\nexport const SHADOWCASTER_CLASS : Class = {\r\n    name : 'shadowcaster',\r\n    onRank : 3,\r\n    previous : MAGE_CLASS\r\n}\r\n\r\nexport const LIGHTSWORN_CLASS : Class = {\r\n    name : 'lightsworn',\r\n    onRank : 3,\r\n    previous : MAGE_CLASS\r\n}\r\n\r\nexport const CHRONOMANCER_CLASS : Class = {\r\n    name : 'chronomancer',\r\n    onRank : 5,\r\n    previous : MAGE_CLASS\r\n}\r\n\r\n// Ennemy specific class\r\n\r\nexport const RASCAL_CLASS : Class = {\r\n    name : 'rascal',\r\n    onRank : 0\r\n}\r\n\r\nexport const MAGICAL_CLASS : Class = {\r\n    name : 'magical',\r\n    onRank : 0\r\n}\r\n\r\nexport const CULTIST_CLASS : Class = {\r\n    name : 'cultist',\r\n    onRank : 0\r\n}\r\n\r\nexport const BEAST_CLASS : Class = {\r\n    name : 'beast',\r\n    onRank : 0\r\n}\r\n\r\nexport const HARKLING_CLASS : Class = {\r\n    name : 'harkling',\r\n    onRank : 0,\r\n    previous : BEAST_CLASS\r\n}\r\n\r\nexport const TOMJAKER_CLASS : Class = {\r\n    name : 'tomjaker',\r\n    onRank : 0,\r\n    previous : BEAST_CLASS\r\n}\r\n\r\nexport const FROSTBEAR_CLASS : Class = {\r\n    name : 'frostbear',\r\n    onRank : 0,\r\n    previous : BEAST_CLASS\r\n}\r\n\r\nexport const BEEWIZ_CLASS : Class = {\r\n    name : 'beewiz',\r\n    onRank : 0,\r\n    previous : BEAST_CLASS\r\n}\r\n\r\nexport const VORPAL_CLASS : Class = {\r\n    name : 'vorpal',\r\n    onRank : 0,\r\n    previous : BEAST_CLASS\r\n}\r\n\r\nexport const JABBERWOCKY_CLASS : Class = {\r\n    name : 'jabberwocky',\r\n    onRank : 0,\r\n    previous : VORPAL_CLASS\r\n}","import * as React from 'react';\r\nimport './ToolTip.css';\r\n\r\ninterface IToolTipProps {\r\n    toolTipContent: React.ReactNode;\r\n    position?: ToolTipPosition;\r\n    width?: number;\r\n}\r\n\r\ninterface IToolTipState {\r\n    displayed: boolean;\r\n}\r\n\r\nexport default class ToolTip extends React.Component<IToolTipProps, IToolTipState>{\r\n    position: ToolTipPosition;\r\n\r\n    constructor(props: IToolTipProps) {\r\n        super(props);\r\n        this.position = this.props.position || ToolTipPosition.RIGHT;\r\n        this.state = { displayed: false };\r\n    }\r\n\r\n    render() {\r\n        let classname;\r\n        const positionClass = this.computePositionClass();\r\n        if (this.state.displayed) {\r\n            classname = 'tooltip-displayed';\r\n        }\r\n        else {\r\n            classname = 'tooltip-hidden';\r\n        }\r\n        let width = 300;\r\n        if (this.props.width) {\r\n            width = this.props.width;\r\n        }\r\n        return (\r\n            <div className=\"tooltip\">\r\n                <div onMouseEnter={this.onHover} onMouseLeave={this.onLeave}>\r\n                    {this.props.children}\r\n                </div>\r\n                <div className={`tooltip-content ${classname} ${positionClass}`} style={{ width: `${width}px` }}>\r\n                    {this.props.toolTipContent}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onHover = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        this.setState({ displayed: true });\r\n    }\r\n\r\n    onLeave = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        this.setState({ displayed: false });\r\n    }\r\n\r\n    computePositionClass = () => {\r\n        switch(this.position){\r\n            case ToolTipPosition.TOP:\r\n            return 'tooltip-position-top';\r\n            case ToolTipPosition.BOTTOM:\r\n            return '';\r\n            case ToolTipPosition.LEFT:\r\n            return '';\r\n            case ToolTipPosition.RIGHT:\r\n            return 'tooltip-position-right';\r\n        }\r\n    }\r\n}\r\n\r\nexport enum ToolTipPosition {\r\n    TOP = ('top'), BOTTOM = ('bottom'), LEFT = ('left'), RIGHT = ('right')\r\n}","import * as React from 'react';\r\nimport Class from 'model/Class';\r\nimport ToolTip from 'components/generic/ToolTip';\r\nimport './ClassInfo.css'\r\n\r\ninterface IClassInfoProps{\r\n    classList : string[];\r\n}\r\n\r\nexport default class ClassInfo extends React.Component<IClassInfoProps>{\r\n\r\n    constructor(props : IClassInfoProps){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        const classDetails = this.props.classList.length > 1;\r\n        const classTxt = <span className='class-txt'>{this.props.classList[0]}</span>\r\n        if(classDetails){\r\n            return (\r\n                <ToolTip toolTipContent={this.renderClassDetails()} width={120}>\r\n                {classTxt}\r\n                </ToolTip>\r\n            );\r\n        }\r\n        return classTxt;\r\n    }\r\n\r\n    renderClassDetails = () => {\r\n        const result : JSX.Element[] = [];\r\n        let i=0;\r\n        let color = 'green';\r\n        for(let className of this.props.classList){\r\n            result.push(<div key={`CLASSNAME_${i++}`} style={{color:color}}>{className}</div>);\r\n            color = 'white';\r\n        }\r\n        return result;\r\n    }\r\n}","import { ReduceStore } from \"flux/utils\";\r\nimport LogState from \"./LogState\";\r\nimport LogPayload, { LogRemovePayload, LogActionPayload } from \"./LogPayload\";\r\nimport LogDispatcher from \"./LogDispatcher\";\r\nimport { LogActionTypes } from \"./LogActions\";\r\n\r\nconst CACHE_LOG_KEY = \"log-cache\"\r\n\r\nclass LogStore extends ReduceStore<LogState, LogPayload> {\r\n\r\n    constructor() {\r\n        super(LogDispatcher);\r\n    }\r\n\r\n    getInitialState(): LogState {\r\n        let logCache = localStorage.getItem(CACHE_LOG_KEY);\r\n        if (logCache) {\r\n            return JSON.parse(logCache);\r\n        }\r\n        return {\r\n            logQueue: [],\r\n            logArchive: []\r\n        }\r\n    }\r\n\r\n    reduce(state: LogState, action: LogPayload): LogState {\r\n        const reducedObj = Object.assign({}, state);\r\n        switch (action.type) {\r\n            case LogActionTypes.LOG_ACTION:\r\n                {\r\n                    const payload = action.payload as LogActionPayload;\r\n                    reducedObj.logQueue.push(payload.log);\r\n                    reducedObj.logArchive.push(payload.log);\r\n                    break;\r\n                }\r\n            case LogActionTypes.REMOVE_FROM_QUEUE:\r\n                {\r\n                    const payload = action.payload as LogRemovePayload;\r\n                    const removeIdx: number[] = [];\r\n                    for (const log of payload.logs) {\r\n                        removeIdx.push(log.id);\r\n                    }\r\n                    reducedObj.logQueue = reducedObj.logQueue.filter(x => removeIdx.indexOf(x.id) === -1);\r\n                    break;\r\n                }\r\n            case LogActionTypes.CLEAR_LOG:\r\n                {\r\n                    reducedObj.logArchive = [];\r\n                    reducedObj.logQueue = [];\r\n                    break;\r\n                }\r\n        }\r\n        localStorage.setItem(CACHE_LOG_KEY, JSON.stringify(reducedObj));\r\n        return reducedObj;\r\n    }\r\n}\r\n\r\nexport default new LogStore();","import LogDispatcher from \"./LogDispatcher\";\r\nimport Log, { LogLevel } from \"model/log/Log\";\r\n\r\nexport enum LogActionTypes {\r\n    LOG_ACTION = 'log_action',\r\n    REMOVE_FROM_QUEUE = 'remove_from_queue',\r\n    CLEAR_LOG = 'clear_log'\r\n}\r\n\r\nexport const logUserAction = (msg: string) => {\r\n    this.logAction(new Log(msg, LogLevel.USER));\r\n}\r\n\r\nexport const logAction = (log: Log) => {\r\n    LogDispatcher.dispatch({\r\n        type: LogActionTypes.LOG_ACTION,\r\n        payload: {\r\n            log: log\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeLogFromQueue = (logs: Log[]) => {\r\n    LogDispatcher.dispatch({\r\n        type: LogActionTypes.REMOVE_FROM_QUEUE,\r\n        payload: {\r\n            logs: logs\r\n        }\r\n    });\r\n}\r\n\r\nexport const clearLogs = () => {\r\n    LogDispatcher.dispatch({\r\n        type: LogActionTypes.CLEAR_LOG,\r\n        payload: {}\r\n    });\r\n}","import Quest from \"model/Quest\";\r\nimport Hero from \"model/Hero\";\r\nimport { DungeonMode } from \"model/DungeonBase\";\r\nimport GameModelDispatcher from \"store/game-model/GameModelDispatcher\";\r\nimport { GameModelActionTypes } from \"store/game-model/GameModelActionTypes\";\r\nimport QuestHelper from \"business/QuestHelper\";\r\n\r\nclass DungeonHelper{\r\n\r\n    startDungeon = (quest: Quest, heroes : Hero[], mode : DungeonMode) => {\r\n        GameModelDispatcher.dispatch({\r\n            type : GameModelActionTypes.SUBMIT_DUNGEON,\r\n            payload : {\r\n                questId : quest.id,\r\n                mode : mode\r\n            }\r\n        });\r\n        QuestHelper.startQuest(quest, heroes);\r\n    }\r\n\r\n    endDungeon = (quest : Quest) => {\r\n        GameModelDispatcher.dispatch({\r\n            type : GameModelActionTypes.CLEAR_DUNGEON,\r\n            payload : {\r\n                questId : quest.id\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default new DungeonHelper();","import * as React from 'react';\r\nimport EndQuestResult from 'business/EndQuestResult';\r\nimport Overlay from 'components/generic/Overlay';\r\nimport Resource, { ResourceType } from 'components/generic/resource/Resource';\r\nimport QuestDrop from 'model/QuestDrop';\r\nimport ItemInfo from 'components/body/items-tab/ItemInfo';\r\nimport BaseQuest from 'model/BaseQuest';\r\nimport { QuestDataArray } from 'data/QuestData';\r\n\r\ninterface IQuestResultOverlayProps{\r\n    questResult: EndQuestResult\r\n    questData ?: BaseQuest;\r\n    closeOverlay : () => void;\r\n}\r\n\r\nexport default class QuestResultOverlay extends React.Component<IQuestResultOverlayProps>{\r\n    render(){\r\n        const quest = this.props.questResult;\r\n        if(quest){\r\n            return (\r\n                <Overlay display={!!quest} closeOverlayCallback={this.props.closeOverlay} width={30} height={50}>\r\n                    {quest.result &&\r\n                        this.renderQuestWin(quest)}\r\n                    {!quest.result &&\r\n                        this.renderQuestLose(quest)}\r\n                    <button className=\"input-center\" onClick={this.props.closeOverlay}>Acknowledge</button>\r\n                </Overlay>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderQuestWin = (questResult: EndQuestResult) => {\r\n        const quest = questResult.quest;\r\n        const questData = this.props.questData || QuestDataArray.get(quest.id);\r\n        return (\r\n            <div>\r\n                <h3>{questData.title}</h3>\r\n                <h2>WIN !</h2>\r\n                <Resource type={ResourceType.GOLD} value={questData.reward.gold} modifier />\r\n                <Resource type={ResourceType.EXP} value={questData.reward.exp} modifier />\r\n                <div>\r\n                    {this.renderDropInfo(questResult.drops)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderDropInfo = (drops: QuestDrop[]) => {\r\n        const result: JSX.Element[] = [];\r\n        let i = 0;\r\n        for (let drop of drops) {\r\n            result.push(<ItemInfo key={`ITEM_${i++}`} inline item={drop.item} quantity={drop.quantity} />)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderQuestLose = (questResult: EndQuestResult) => {\r\n        const quest = questResult.quest;\r\n        const questData = this.props.questData || QuestDataArray.get(quest.id);\r\n        return (\r\n            <div>\r\n                <h3>{questData.title}</h3>\r\n                <h2>LOSE !</h2>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Hero from 'model/Hero';\r\nimport './SelectHeroOverlay.css'\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport HeroInfo from 'components/body/hero-tab/HeroInfo';\r\nimport { SortOrder } from 'model/Sorting';\r\nimport SortButton from 'components/generic/hero-info/SortButton';\r\nimport HeroHelper from 'business/HeroHelper';\r\nimport Overlay from 'components/generic/Overlay';\r\nimport HeroSelectButton from 'components/generic/select-hero-overlay/HeroSelectButton';\r\n\r\ninterface ISelectHeroOverlayProps {\r\n    display: boolean;\r\n    maxSelection: number;\r\n    reqClass?: string[];\r\n    doConfirmSelection: (heroes: Hero[]) => void;\r\n    doCancelSelection: () => void;\r\n}\r\n\r\ninterface ISelectHeroOverlayState {\r\n    heroes: Hero[];\r\n    selectedHeroes: Set<Hero>;\r\n    rankOrder: SortOrder;\r\n    lvlOrder: SortOrder;\r\n    nameOrder: SortOrder;\r\n}\r\n\r\nexport default class SelectHeroOverlay extends React.Component<ISelectHeroOverlayProps, ISelectHeroOverlayState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: ISelectHeroOverlayProps) {\r\n        super(props);\r\n        this.state = { heroes: GameModelStore.getState().heroes.asArray(), selectedHeroes: new Set<Hero>(), rankOrder: SortOrder.DESC, lvlOrder: SortOrder.DESC, nameOrder: SortOrder.ASC };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Overlay display={this.props.display} closeOverlayCallback={this.props.doCancelSelection} width={80} height={80}>\r\n                {this.props.children}\r\n                <div className=\"hero-container\">\r\n                    <div>\r\n                        <SortButton order={this.state.rankOrder} txt={'rank'} toggle={() => { this.setState({ rankOrder: -this.state.rankOrder }) }} />\r\n                        <SortButton order={this.state.lvlOrder} txt={'lvl'} toggle={() => { this.setState({ lvlOrder: -this.state.lvlOrder }) }} />\r\n                        <SortButton order={this.state.nameOrder} txt={'name'} toggle={() => { this.setState({ nameOrder: -this.state.nameOrder }) }} />\r\n                    </div>\r\n                    {this.renderHeroes()}\r\n                </div>\r\n                <button className=\"confirm-button\" disabled={!this.canConfirm()} onClick={this.confirmSelection}>Confirm</button>\r\n            </Overlay>\r\n        );\r\n    }\r\n\r\n    renderHeroes = () => {\r\n        const heroArray = this.state.heroes;\r\n        heroArray.sort(HeroHelper.createHeroSort(this.state.rankOrder, this.state.lvlOrder, this.state.nameOrder));\r\n        const result: JSX.Element[] = [];\r\n        for (const hero of heroArray) {\r\n            result.push(\r\n                <HeroInfo key={`HEROINFO_${hero.data}`} hero={hero} >\r\n                    <HeroSelectButton\r\n                        hero={hero}\r\n                        selectedHeroes={this.state.selectedHeroes}\r\n                        doSelectHero={this.doSelectHero}\r\n                        doUnselectHero={this.doUnselectHero}\r\n                        partySize={this.props.maxSelection}\r\n                        reqClass={this.props.reqClass} />\r\n                </HeroInfo>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    doSelectHero = (hero: Hero) => {\r\n        this.setState({ selectedHeroes: this.state.selectedHeroes.add(hero) });\r\n    }\r\n\r\n    doUnselectHero = (hero: Hero) => {\r\n        this.state.selectedHeroes.delete(hero);\r\n        this.setState({ selectedHeroes: this.state.selectedHeroes });\r\n    }\r\n\r\n    canConfirm = () => {\r\n        return this.state.selectedHeroes.size > 0 && this.state.selectedHeroes.size <= this.props.maxSelection;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({ heroes: GameModelStore.getState().heroes.asArray() });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    confirmSelection = () => {\r\n        this.props.doConfirmSelection(Array.from(this.state.selectedHeroes));\r\n    }\r\n\r\n    computeHeroesCombinedPower = (heroeSet: Set<string>) => {\r\n        let result = 0;\r\n        const heroesId = Array.from(heroeSet);\r\n        for (let i = 0; i < heroesId.length; i++) {\r\n            const hero = GameModelStore.getState().heroes.get(heroesId[i]);\r\n            result += HeroHelper.getPower(hero);\r\n        }\r\n        return result;\r\n    }\r\n}","import * as React from 'react';\r\nimport Quest from 'model/Quest';\r\nimport BaseQuest from 'model/BaseQuest';\r\nimport QuestProgressBar from 'components/generic/quest/QuestProgressBar';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\nimport Timer from 'components/generic/Timer';\r\n\r\ninterface IQuestActionProps {\r\n    quest: Quest;\r\n    questData: BaseQuest;\r\n    startTxt: string;\r\n    endTxt: string;\r\n    end: () => void;\r\n    start: () => void;\r\n}\r\n\r\ninterface IQuestActionState {\r\n    questEnded: boolean;\r\n}\r\n\r\nexport default class QuestAction extends React.Component<IQuestActionProps, IQuestActionState>{\r\n\r\n    constructor(props: IQuestActionProps) {\r\n        super(props);\r\n        this.state = { questEnded: false };\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.quest || !this.props.quest.startedAt) {\r\n            return (\r\n                <button onClick={this.startQuest}>{this.props.startTxt}</button>\r\n            );\r\n        }\r\n        else if (!this.props.quest.completedAt && !this.state.questEnded) {\r\n            return (\r\n                <QuestProgressBar questData={this.props.questData} quest={this.props.quest} doQuestOver={() => this.setState({ questEnded: true })} widthPrct={25} />\r\n            );\r\n        }\r\n        else if (!this.props.quest.completedAt && this.state.questEnded) {\r\n            return (\r\n                <button onClick={this.endQuest}>{this.props.endTxt}</button>\r\n            );\r\n        }\r\n        else if (this.props.questData.repeat != null) {\r\n            return <Timer until={new Date(this.props.quest.completedAt + this.props.questData.repeat.toMs())} doEnd={this.repeatQuest} />\r\n        }\r\n    }\r\n\r\n    repeatQuest = () => {\r\n        GameModelDispatcher.dispatch({\r\n            type: GameModelActionTypes.REPEAT_QUEST,\r\n            payload: {\r\n                quest: this.props.quest\r\n            }\r\n        })\r\n    }\r\n\r\n    endQuest = () => {\r\n        this.setState({ questEnded: false });\r\n        this.props.end();\r\n    }\r\n\r\n    startQuest = () => {\r\n        this.props.start();\r\n    }\r\n}","import * as React from 'react';\r\nimport Ennemy from 'model/BattleEntity';\r\nimport ClassInfo from 'components/generic/hero-info/ClassInfo';\r\nimport './EnnemyInfo.css'\r\nimport ClassHelper from 'business/ClassHelper';\r\n\r\ninterface IEnnemyInfoProps {\r\n    ennemy: Ennemy;\r\n}\r\n\r\nexport default class EnnemyInfo extends React.Component<IEnnemyInfoProps>{\r\n    constructor(props: IEnnemyInfoProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ennemy-info'>\r\n                <div className='ennemy-info-name'>\r\n                    {this.props.ennemy.name}\r\n                </div>\r\n                <div>\r\n                    <ClassInfo classList={ClassHelper.computeClassList(this.props.ennemy.class)} />\r\n                </div>\r\n                <div>\r\n                    Battle Ability : {this.props.ennemy.ba}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import DungeonBase from \"model/DungeonBase\";\r\nimport Duration from \"model/Duration\";\r\nimport { ItemData } from \"./ItemData\";\r\nimport * as ClassData from 'data/ClassData';\r\nimport IndexedArray from \"business/collection/IndexedArray\";\r\nimport ObjectUtils from \"business/utils/ObjectUtils\";\r\n\r\nexport const DungeonData: DungeonBase[] = [\r\n    {\r\n        id: 'DUNGEON01',\r\n        name: 'Black forest',\r\n        requireSwitches: ['QUEST02'],\r\n        repeatIn: new Duration(0, 0, 10, 0),\r\n        modes: {\r\n            EASY: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.BEAST_CLASS,\r\n                        name: 'Lone wolf',\r\n                        ba: 50\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 0, 10),\r\n                maxPartySize : 1,\r\n                reward: {\r\n                    gold: 10,\r\n                    exp: 15,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.WOODEN_STICK, rates: [50, 50, 25] }\r\n                ]\r\n            },\r\n            NORMAL: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.BEAST_CLASS,\r\n                        name: 'Beta wolf',\r\n                        ba: 100\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 5, 0),\r\n                maxPartySize : 1,\r\n                reward: {\r\n                    gold: 20,\r\n                    exp: 30,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.WOODEN_STICK, rates: [100, 100, 50, 50, 50, 50, 25, 25] },\r\n                    { item: ItemData.SENSES_ORB, rates: [1] }\r\n                ]\r\n            },\r\n            HARD: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.BEAST_CLASS,\r\n                        name: 'Beta wolf',\r\n                        ba: 150\r\n                    },\r\n                    {\r\n                        class: ClassData.BEAST_CLASS,\r\n                        name: 'Beta wolf',\r\n                        ba: 150\r\n                    },\r\n                    {\r\n                        class: ClassData.BEAST_CLASS,\r\n                        name: 'Beta wolf',\r\n                        ba: 150\r\n                    },\r\n                    {\r\n                        class: ClassData.BEAST_CLASS,\r\n                        name: 'Alpha wolf',\r\n                        ba: 180\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 5, 0),\r\n                maxPartySize : 2,\r\n                reward: {\r\n                    gold: 40,\r\n                    exp: 60,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.WOODEN_STICK, rates: [100, 100, 50, 50, 50, 50, 25, 25] },\r\n                    { item: ItemData.SENSES_ORB, rates: [5] }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: 'DUNGEON02',\r\n        name: 'The Vaporous Swamp',\r\n        requireSwitches: ['QUEST16'],\r\n        repeatIn: new Duration(0, 3, 0, 0),\r\n        modes: {\r\n            EASY: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.VORPAL_CLASS,\r\n                        name: 'Vorpal Wolf',\r\n                        ba: 800\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 30, 0),\r\n                maxPartySize : 3,\r\n                reward: {\r\n                    gold: 20,\r\n                    exp: 50,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.SENSES_ORB, rates: [10, 5, 1] }\r\n                ]\r\n            },\r\n            NORMAL: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.VORPAL_CLASS,\r\n                        name: 'Vorpal Bear',\r\n                        ba: 1200\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 45, 0),\r\n                maxPartySize : 3,\r\n                reward: {\r\n                    gold: 30,\r\n                    exp: 75,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.SENSES_ORB, rates: [20, 10, 5] }\r\n                ]\r\n            },\r\n            HARD: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.BEAST_CLASS,\r\n                        name: 'Vorpal Abomination',\r\n                        ba: 1600\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 50, 0),\r\n                maxPartySize : 3,\r\n                reward: {\r\n                    gold: 40,\r\n                    exp: 100,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.SENSES_ORB, rates: [30, 20, 10] }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: 'DUNGEON03',\r\n        name: 'The Jabberwocky Layer',\r\n        requireSwitches: ['QUEST20'],\r\n        repeatIn: new Duration(0, 5, 0, 0),\r\n        modes: {\r\n            EASY: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.JABBERWOCKY_CLASS,\r\n                        name: 'Jabberwocky',\r\n                        ba: 1800\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 30, 0),\r\n                maxPartySize : 3,\r\n                reward: {\r\n                    gold: 90,\r\n                    exp: 200,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.SENSES_ORB, rates: [50, 50, 25, 25, 10] }\r\n                ]\r\n            },\r\n            NORMAL: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.JABBERWOCKY_CLASS,\r\n                        name: 'Jabberwocky Prime',\r\n                        ba: 2200\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 45, 0),\r\n                maxPartySize : 3,\r\n                reward: {\r\n                    gold: 130,\r\n                    exp: 300,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.SENSES_ORB, rates: [100, 50, 50, 50, 10] }\r\n                ]\r\n            },\r\n            HARD: {\r\n                ennemies: [\r\n                    {\r\n                        class: ClassData.JABBERWOCKY_CLASS,\r\n                        name: 'Ancient Jabberwocky',\r\n                        ba: 3000\r\n                    }\r\n                ],\r\n                duration: new Duration(0, 0, 50, 0),\r\n                maxPartySize : 3,\r\n                reward: {\r\n                    gold: 160,\r\n                    exp: 400,\r\n                    shard: 0\r\n                },\r\n                drop: [\r\n                    { item: ItemData.SENSES_ORB, rates: [100, 100, 100, 100, 100, 100, 100, 50, 50, 50, 50, 50, 50] }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\nexport const DungeonDataArray = new IndexedArray<string, DungeonBase>(x => x.id, ...ObjectUtils.getValues(DungeonData));","import Duration from \"model/Duration\";\r\nimport QuestReward from \"./QuestReward\";\r\nimport Drop from \"model/Drop\";\r\nimport Ennemy from \"./BattleEntity\";\r\nimport BaseQuest from \"model/BaseQuest\";\r\n\r\nexport default class DungeonBase {\r\n    id: string;\r\n    name: string;\r\n    requireSwitches : string[];\r\n    repeatIn : Duration;\r\n    modes: { [mode in DungeonMode]?: DungeonModeBase };\r\n}\r\n\r\nexport enum DungeonMode {\r\n    EASY = 'EASY',\r\n    NORMAL = 'NORMAL',\r\n    HARD = 'HARD',\r\n    INSANE = 'INSANE'\r\n}\r\n\r\nexport class DungeonModeBase {\r\n    ennemies: Ennemy[];\r\n    duration: Duration;\r\n    reward: QuestReward;\r\n    drop: Drop[];\r\n    maxPartySize : number;\r\n}\r\n\r\nexport const dungeonToQuestData = (dungeon : DungeonBase, mode : keyof typeof DungeonMode) => {\r\n        if(dungeon.modes.hasOwnProperty(mode)){\r\n            const quest = new BaseQuest();\r\n            quest.id = dungeon.id;\r\n            quest.title = `${dungeon.name} : ${mode} mode`;\r\n            quest.repeat = dungeon.repeatIn;\r\n            quest.ennemies = dungeon.modes[mode].ennemies;\r\n            quest.drop = dungeon.modes[mode].drop;\r\n            quest.duration = dungeon.modes[mode].duration;\r\n            quest.reward = dungeon.modes[mode].reward;\r\n            quest.maxPartySize = dungeon.modes[mode].maxPartySize;\r\n            quest.activates = [];\r\n            quest.classReq = [];\r\n            quest.description = '';\r\n            return quest;\r\n        }\r\n        return null;\r\n}","import * as React from 'react';\r\nimport QuestHelper from 'business/QuestHelper';\r\n\r\ninterface ITimerProps {\r\n    until: Date;\r\n    doEnd ?: () => void;\r\n}\r\n\r\ninterface ITimerState {\r\n    timeLeft: number;\r\n}\r\n\r\nexport default class Timer extends React.Component<ITimerProps, ITimerState>{\r\n    intervalId: number;\r\n\r\n    constructor(props: ITimerProps) {\r\n        super(props);\r\n        this.state = { timeLeft: this.computeTimeLeft() }\r\n        this.intervalId = null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTimeLeft()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.intervalId = window.setInterval(() => {\r\n            let timeLeft = this.computeTimeLeft()\r\n            if(timeLeft <= 0){\r\n                window.clearInterval(this.intervalId);\r\n                this.intervalId = null;\r\n                timeLeft = 0;\r\n                if(this.props.doEnd){\r\n                    this.props.doEnd();\r\n                }\r\n            }\r\n            this.setState({ timeLeft: timeLeft })\r\n        },\r\n            500);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(this.intervalId !== null){\r\n            window.clearInterval(this.intervalId);\r\n        }\r\n    }\r\n\r\n    computeTimeLeft = () => {\r\n        return this.props.until.getTime() - new Date().getTime();\r\n    }\r\n\r\n    renderTimeLeft = () => {\r\n        return QuestHelper.durationToString(this.state.timeLeft);\r\n    }\r\n}","import * as React from 'react';\r\nimport Quest from 'model/Quest';\r\nimport { QuestDataArray } from 'data/QuestData';\r\nimport BaseQuest from 'model/BaseQuest';\r\nimport { ProgressBar } from 'components/generic/quest/ProgressBar';\r\nimport ToolTip, { ToolTipPosition } from '../ToolTip';\r\nimport Timer from '../Timer';\r\n\r\ninterface IQuestProgressBarProps {\r\n    quest: Quest;\r\n    doQuestOver: () => void;\r\n    questData?: BaseQuest;\r\n    widthPrct: number;\r\n}\r\n\r\ninterface IQuestProgressBarState {\r\n    progress: number;\r\n}\r\n\r\nexport default class QuestProgressBar extends React.Component<IQuestProgressBarProps, IQuestProgressBarState>{\r\n    questData: BaseQuest;\r\n    intervalId: number;\r\n\r\n    constructor(props: IQuestProgressBarProps) {\r\n        super(props);\r\n        this.questData = this.props.questData || QuestDataArray.get(this.props.quest.id);\r\n        this.state = { progress: this.computeProgress(this.props.quest) };\r\n        this.intervalId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.intervalId = window.setInterval(() => {\r\n            if (this.intervalId !== null) {\r\n                let progress = this.computeProgress(this.props.quest);\r\n                if (progress >= 100) {\r\n                    window.clearInterval(this.intervalId);\r\n                    this.intervalId = null;\r\n                    this.props.doQuestOver();\r\n                    progress = 100;\r\n                }\r\n                this.setState({ progress: progress });\r\n            }\r\n        },\r\n            200);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.intervalId !== null) {\r\n            window.clearInterval(this.intervalId);\r\n            this.intervalId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToolTip toolTipContent={<Timer until={new Date(this.props.quest.startedAt + this.questData.duration.toMs())} />} position={ToolTipPosition.TOP}>\r\n                <ProgressBar progress={this.state.progress} style={{ width: `${this.props.widthPrct}%` }} />\r\n            </ToolTip>\r\n        )\r\n    }\r\n\r\n    computeProgress = (quest: Quest) => {\r\n        if (quest.startedAt != null) {\r\n            const t = new Date().getTime() - quest.startedAt;\r\n            const duration = this.questData.duration.toMs();\r\n            return Math.min(t / duration * 100, 100);\r\n        }\r\n        return 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport ItemInfo from 'components/body/items-tab/ItemInfo';\r\nimport { ItemData, ItemDataArray } from 'data/ItemData';\r\nimport Hero from 'model/Hero';\r\n\r\ninterface IItemsTabProps{\r\n    equipHero ?: Hero;\r\n}\r\n\r\ninterface IItemsTabState {\r\n    items: { [id: string]: number };\r\n}\r\n\r\nexport default class ItemsTab extends React.Component<IItemsTabProps, IItemsTabState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { items: Object.assign({}, GameModelStore.getState().items) };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                items: Object.assign({}, GameModelStore.getState().items)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%' }}>\r\n                <h2>Items</h2>\r\n                {this.renderItems()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderItems = () => {\r\n        const result: JSX.Element[] = [];\r\n        let i = 0;\r\n        for (let objectId in this.state.items) {\r\n            if (this.state.items[objectId] > 0) {\r\n                result.push(<ItemInfo key={`ITEM_${i++}`} inline item={ItemDataArray.get(objectId)} quantity={this.state.items[objectId]} equipHero={this.props.equipHero} />)\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import * as React from 'react';\r\nimport { SortOrder } from 'model/Sorting';\r\n\r\ninterface ISortButtonProps {\r\n    order: SortOrder;\r\n    txt: string;\r\n    toggle: () => void;\r\n}\r\n\r\ninterface ISortButtonState {\r\n\r\n}\r\n\r\nexport default class SortButton extends React.Component<ISortButtonProps, ISortButtonState>{\r\n    constructor(props: ISortButtonProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let icon = 'angle-up';\r\n        if (this.props.order < 0) {\r\n            icon = 'angle-down';\r\n        }\r\n        return (\r\n            <button onClick={this.props.toggle}>\r\n                {this.props.txt}\r\n                <i className={`fa fa-${icon}`}></i>\r\n            </button>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport './ProgressBar.css';\r\n\r\ninterface IProgressBarProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    progress: number;\r\n}\r\n\r\nexport const ProgressBar = (props: IProgressBarProps) => {\r\n    return (\r\n        <div className={`progress-bar-container ${props.className}`} style={props.style}>\r\n            <div className=\"progress-bar\" style={{ width: `${props.progress}%` }} />\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Hero from 'model/Hero';\r\nimport HeroHelper from 'business/HeroHelper';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\n\r\ninterface ILevelProps {\r\n    hero: Hero;\r\n    className?: string;\r\n}\r\n\r\ninterface ILevelState {\r\n    exp: number;\r\n}\r\n\r\nexport default class Level extends React.Component<ILevelProps, ILevelState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: ILevelProps) {\r\n        super(props);\r\n        this.state = { exp: GameModelStore.getState().exp };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({ exp: GameModelStore.getState().exp });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${this.props.className}`}>\r\n                <span className=\"txt\">{`lvl: ${this.props.hero.level}`}</span>\r\n                {this.renderLevelUp()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderLevelUp = () => {\r\n        const hero = this.props.hero\r\n        const requiredExp = HeroHelper.expRequiredToLevel(hero);\r\n        if (this.state.exp >= requiredExp && !HeroHelper.isMaxLevel(hero) && this.props.hero.questId == null) {\r\n            return (\r\n                <input className=\"level-up\" type=\"image\" src=\"img/plus.png\" onClick={this.heroLevelUp} />\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    heroLevelUp = (e: React.MouseEvent<HTMLInputElement>) => {\r\n        if (e.ctrlKey) {\r\n            GameModelDispatcher.dispatch({\r\n                type: GameModelActionTypes.HERO_BULK_LVL_UP,\r\n                payload: { heroId: this.props.hero.data }\r\n            });\r\n        }\r\n        else {\r\n            GameModelDispatcher.dispatch({\r\n                type: GameModelActionTypes.HERO_LVL_UP,\r\n                payload: { heroId: this.props.hero.data }\r\n            });\r\n        }\r\n    }\r\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./HeroInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./HeroInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./HeroInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport Hero from 'model/Hero';\r\n\r\ninterface IRankStarProps {\r\n\r\n}\r\n\r\ninterface IRankStarState {\r\n\r\n}\r\n\r\nexport default class RankStar extends React.Component<IRankStarProps, IRankStarState>{\r\n    constructor(props: IRankStarProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <img src=\"img/star.png\" />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    static generateRank = (rank: number) => {\r\n        const result: JSX.Element[] = [];\r\n        for (let i = 0; i < rank; i++) {\r\n            result.push(<RankStar key={`RANKSTAR_${i}`} />);\r\n        }\r\n        return result;\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Hero from 'model/Hero';\r\nimport RankStar from 'components/generic/hero-info/RankStar';\r\nimport './HeroInfo.css';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport HeroHelper from 'business/HeroHelper';\r\nimport ClassInfo from 'components/generic/hero-info/ClassInfo';\r\nimport BaseHero from 'model/BaseHero';\r\nimport { HeroDataArray } from 'data/HeroData';\r\nimport ClassHelper from 'business/ClassHelper';\r\nimport Level from 'components/body/hero-tab/Level';\r\nimport Rarity from 'components/body/hero-tab/Rarity';\r\n\r\ninterface IHeroInfoProps {\r\n    hero: Hero;\r\n}\r\n\r\nexport default class HeroInfo extends React.Component<IHeroInfoProps>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n    heroData: BaseHero;\r\n    constructor(props: IHeroInfoProps) {\r\n        super(props);\r\n        this.heroData = HeroDataArray.get(this.props.hero.data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container hero-info-container\">\r\n                <div className=\"divider\">\r\n                    {this.renderHeroName()}\r\n                    <Rarity className=\"rarity\" hero={this.props.hero} />\r\n                    <div className=\"icon\"><img src={this.heroData.imgUrl} /></div>\r\n                </div>\r\n                <div className=\"divider absolute-reference\">\r\n                    <span className=\"rank\">{RankStar.generateRank(this.props.hero.rank)}</span>\r\n                    <Level className=\"lvl\" hero={this.props.hero} />\r\n                </div>\r\n                <div className=\"divider\">\r\n                    <ClassInfo classList={ClassHelper.computeClassList(this.heroData.class, this.props.hero.rank)} />\r\n                </div>\r\n                <div className=\"divider\">\r\n                    {this.renderBattleAbility()}\r\n                </div>\r\n                <div className=\"divider\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderHeroName = () => {\r\n        let txtSize = '';\r\n        if (this.heroData.name.length > 6) {\r\n            txtSize = 'small';\r\n        }\r\n        return <span className={`txt ${txtSize}`}>{this.heroData.name}</span>\r\n    }\r\n\r\n    renderBattleAbility = () => {\r\n        const ba = HeroHelper.computeHeroBA(this.props.hero);\r\n        return (\r\n            <span>{`Battle Ability : ${ba}`}</span>\r\n        );\r\n    }\r\n}","export enum SortOrder{\r\n    ASC = 1,\r\n    DESC = -1,\r\n}","export default class Quest {\r\n    id: string;\r\n    startedAt: number;\r\n    completedAt: number;\r\n}","import {Dispatcher} from 'flux';\r\nimport LogPayload from './LogPayload';\r\n\r\nexport default new Dispatcher<LogPayload>();","export default class Duration {\r\n    days: number;\r\n    hours: number;\r\n    minutes: number;\r\n    seconds: number;\r\n\r\n    constructor(days: number, hours: number, minutes: number, seconds: number) {\r\n        this.days = days;\r\n        this.hours = hours;\r\n        this.minutes = minutes;\r\n        this.seconds = seconds;\r\n    }\r\n\r\n    toString() {\r\n        let result = '';\r\n        if (this.days > 0) {\r\n            result += `${this.days} d `\r\n        }\r\n        if (this.hours > 0) {\r\n            result += `${this.hours} h `\r\n        }\r\n        if (this.minutes > 0) {\r\n            result += `${this.minutes} m `\r\n        }\r\n        if (this.seconds > 0) {\r\n            result += `${this.seconds} s `\r\n        }\r\n        return result;\r\n    }\r\n\r\n    toMs() {\r\n        return this.days * 24 * 60 * 60000\r\n            + this.hours * 60 * 60000\r\n            + this.minutes * 60000\r\n            + this.seconds * 1000\r\n    }\r\n}","import EquipmentSet from \"model/EquipmentSet\";\r\nimport Equipment, { EquipmentType } from \"model/items/Equipment\";\r\nimport { ItemDataArray } from \"data/ItemData\";\r\n\r\nclass EquipmentSetHelper {\r\n    computeBA = (set: EquipmentSet) => {\r\n        let result = 0;\r\n        const toSetItem = (id : string) => ItemDataArray.get(id) as Equipment;\r\n        if (set.head) {\r\n            result += toSetItem(set.head).ba;\r\n        }\r\n        if (set.torso) {\r\n            result += toSetItem(set.torso).ba;\r\n        }\r\n        if (set.hands) {\r\n            result += toSetItem(set.hands).ba;\r\n        }\r\n        if (set.legs) {\r\n            result += toSetItem(set.legs).ba;\r\n        }\r\n        if (set.feet) {\r\n            result += toSetItem(set.feet).ba;\r\n        }\r\n        if (set.leftHand) {\r\n            result += toSetItem(set.leftHand).ba;\r\n        }\r\n        if (set.rightHand) {\r\n            result += toSetItem(set.rightHand).ba;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    isEquipableInSlot = (item: Equipment, slot: keyof EquipmentSet): boolean => {\r\n        switch (item.type) {\r\n            case EquipmentType.HEAD:\r\n                return slot === 'head';\r\n            case EquipmentType.TORSO:\r\n                return slot === 'torso';\r\n            case EquipmentType.HANDS:\r\n                return slot === 'hands';\r\n            case EquipmentType.LEGS:\r\n                return slot === 'legs';\r\n            case EquipmentType.FEET:\r\n                return slot === 'feet';\r\n            case EquipmentType.ONE_HANDED:\r\n            case EquipmentType.TWO_HANDED:\r\n                return slot === 'leftHand' || slot === 'rightHand';\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EquipmentSetHelper();","import GameModelState from \"store/game-model/GameModelState\";\r\n\r\nclass _TrainingHelper{\r\n    computeExpReward = (model : GameModelState) => {\r\n        if(model.improvements.train3){\r\n            return 4;\r\n        }\r\n        else if (model.improvements.train2){\r\n            return 3;\r\n        }\r\n        else if(model.improvements.train1){\r\n            return 2;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    computeReqClicks = (model : GameModelState) => {\r\n        if(model.improvements.trainClickNo1){\r\n            return 4;\r\n        }\r\n        return 5;\r\n    }\r\n}\r\n\r\nexport const TrainingHelper = new _TrainingHelper();","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\r\\n * Color scheme id : 0w11Tw0w0w0w0\\r\\n * website : http://colorschemedesigner.com/csd-3.5/\\r\\n */\\r\\n\\r\\nbody {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: sans-serif;\\r\\n  background-color: #FFB573;\\r\\n  -webkit-touch-callout: none; /* iOS Safari */\\r\\n  -webkit-user-select: none; /* Safari */\\r\\n   -khtml-user-select: none; /* Konqueror HTML */\\r\\n     -moz-user-select: none; /* Firefox */\\r\\n      -ms-user-select: none; /* Internet Explorer/Edge */\\r\\n          user-select: none;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  background:#FF7800;\\r\\n  border-color: #A64E00;\\r\\n  border-style: solid;\\r\\n  border-width: 1px;\\r\\n}\\r\\n\\r\\nbutton:hover{\\r\\n  background:#FFB573;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton:disabled,\\r\\nbutton[disabled]{\\r\\n  cursor: initial;\\r\\n  background:#FF7800;\\r\\n}\\r\\n\\r\\nh1, h2, h3, h4, h5, h6 {\\r\\n  color: rgb(124, 58, 0);\\r\\n  margin : 3px;\\r\\n}\\r\\n\\r\\nh1, h2{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.container{\\r\\n  margin:20px;\\r\\n  border-style:solid;\\r\\n  border-width: 2px;\\r\\n  border-color: #A64E00;\\r\\n  padding:3px;\\r\\n  background-color: #FF9A40;\\r\\n  border-radius: 4px;\\r\\n  position:relative;\\r\\n}\\r\\n\\r\\n.center{\\r\\n  margin-left : auto;\\r\\n  margin-right : auto;\\r\\n}\\r\\n\\r\\n.input-center{\\r\\n  margin-left : auto;\\r\\n  margin-right : auto;\\r\\n  display:block;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\n\r\ninterface ILogMessageProps {\r\n    msg: string;\r\n}\r\n\r\nexport default class LogMessage extends React.Component<ILogMessageProps>{\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                {this.props.msg}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport LogStore from 'store/log/LogStore';\r\nimport Log from 'model/log/Log';\r\nimport { removeLogFromQueue } from 'store/log/LogActions';\r\nimport LogMessage from 'components/log/LogMessage';\r\n\r\nconst LOG_TIMEOUT = 6000;\r\n\r\ninterface ILogDisplayerState {\r\n    logQueue: Log[];\r\n}\r\n\r\nexport default class LogDisplayer extends React.Component<{}, ILogDisplayerState>{\r\n    logSubscription: fbEmitter.EventSubscription;\r\n    logInterval: number;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { logQueue: LogStore.getState().logQueue.slice() };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.logSubscription = LogStore.addListener(() => {\r\n            this.setState({ logQueue: LogStore.getState().logQueue.slice() })\r\n        });\r\n        this.logInterval = window.setInterval(() => {\r\n            const logsToClear: Log[] = [];\r\n            for (const log of this.state.logQueue) {\r\n                if (this.isLogExpired(log)) {\r\n                    logsToClear.push(log);\r\n                }\r\n            }\r\n            if (logsToClear.length > 0) {\r\n                removeLogFromQueue(logsToClear);\r\n            }\r\n        }, 300);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.logSubscription.remove();\r\n        window.clearInterval(this.logInterval);\r\n    }\r\n\r\n    render() {\r\n        const logMessages: JSX.Element[] = [];\r\n        for (const log of this.state.logQueue) {\r\n            logMessages.push(<LogMessage key={`LOG_${log.id}`} msg={log.msg} />)\r\n        }\r\n        return (\r\n            <div style={{ position: 'fixed', bottom: '10px', right: '10px' }}>\r\n                {logMessages}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    isLogExpired = (log: Log) => {\r\n        return new Date().getTime() >= log.producedAt + LOG_TIMEOUT;\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".shop-item-container{\\r\\n    width:150px;\\r\\n    display: inline-grid;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./ShopItemInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./ShopItemInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./ShopItemInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport ShopItem from 'model/items/ShopItem';\r\nimport Resource, { ResourceType } from '../../generic/resource/Resource';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\nimport ItemInfo from 'components/body/items-tab/ItemInfo';\r\nimport './ShopItemInfo.css';\r\n\r\ninterface IShopitemInfoProps {\r\n    shopItem: ShopItem;\r\n    playerGold: number;\r\n}\r\n\r\nexport default class ShopItemInfo extends React.Component<IShopitemInfoProps>{\r\n    render() {\r\n        return (\r\n            <div className={`container shop-item-container`}>\r\n                <h3>{this.props.shopItem.item.name}</h3>\r\n                <ItemInfo item={this.props.shopItem.item} quantity={1} />\r\n                <Resource type={ResourceType.GOLD} value={this.props.shopItem.shopPrice} modifier remove />\r\n                <button disabled={!this.canBuy()} onClick={this.buy}>Buy</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    canBuy = () => {\r\n        return this.props.playerGold >= this.props.shopItem.shopPrice;\r\n    }\r\n\r\n    buy = () => {\r\n        GameModelDispatcher.dispatch({\r\n            type: GameModelActionTypes.BUY_ITEM,\r\n            payload: {\r\n                itemId: this.props.shopItem.item.id,\r\n                price: this.props.shopItem.shopPrice\r\n            }\r\n        });\r\n    }\r\n}","import { ItemData } from \"./ItemData\";\r\nimport ShopItem from \"model/items/ShopItem\";\r\n\r\nexport const shopData : ShopItem[] = [\r\n    {\r\n        item : ItemData.WOODEN_STICK,\r\n        shopPrice : 2\r\n    },\r\n    {\r\n        item : ItemData.RAGGED_SHIRT,\r\n        shopPrice : 8\r\n    },\r\n    {\r\n        item : ItemData.RAGGED_GLOVES,\r\n        shopPrice : 2\r\n    },\r\n    {\r\n        item : ItemData.RAGGED_BREACHES,\r\n        shopPrice : 5\r\n    },\r\n    {\r\n        item : ItemData.RAGGED_BOOTS,\r\n        shopPrice : 2\r\n    }\r\n]","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport { shopData } from 'data/ShopData';\r\nimport ShopItemInfo from './ShopItemInfo';\r\n\r\ninterface IShopTabProps {\r\n\r\n}\r\n\r\ninterface IShopTabState {\r\n    gold: number;\r\n}\r\n\r\nexport default class ShopTab extends React.Component<IShopTabProps, IShopTabState> {\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: IShopTabProps) {\r\n        super(props);\r\n        this.state = { gold: GameModelStore.getState().gold };\r\n    }\r\n\r\n    render() {\r\n        const shopItems: JSX.Element[] = [];\r\n        for (const shopItem of shopData) {\r\n            shopItems.push(<ShopItemInfo key={`SHOPITEM_${shopItem.item.id}`} shopItem={shopItem} playerGold={this.state.gold} />);\r\n        }\r\n        return (\r\n            <div>\r\n                {shopItems}\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                gold: GameModelStore.getState().gold\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport DungeonBase, { DungeonMode, dungeonToQuestData } from 'model/DungeonBase';\r\nimport Ennemy from 'model/BattleEntity';\r\nimport EnnemyInfo from 'components/generic/ennemy/EnnemyInfo';\r\nimport Quest from 'model/Quest';\r\nimport Hero from 'model/Hero';\r\nimport QuestHelper from 'business/QuestHelper';\r\nimport BaseQuest from 'model/BaseQuest';\r\nimport QuestAction from 'components/body/quest-tab/QuestAction';\r\nimport Resource, { ResourceType } from 'components/generic/resource/Resource';\r\nimport SelectHeroOverlay from 'components/generic/select-hero-overlay/SelectHeroOverlay';\r\nimport QuestResultOverlay from 'components/body/quest-tab/QuestResultOverlay';\r\nimport EndQuestResult from 'business/EndQuestResult';\r\nimport QuestMap from 'model/serializable/QuestMap';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport Dungeon from 'model/Dungeon';\r\nimport DungeonHelper from 'business/DungeonHelper';\r\n\r\ninterface IDungeonModeInfoProps {\r\n    dungeon: DungeonBase;\r\n    dungeonState : Dungeon;\r\n    mode: DungeonMode;\r\n    doEndQuest : (quest : Quest, questData: BaseQuest) => void;\r\n}\r\n\r\ninterface IDungeonModeInfoState {\r\n    overlayDisplayed: boolean;\r\n    activeQuests: QuestMap;\r\n}\r\n\r\nexport default class DungeonModeInfo extends React.Component<IDungeonModeInfoProps, IDungeonModeInfoState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: IDungeonModeInfoProps) {\r\n        super(props);\r\n        this.state = { overlayDisplayed: false, activeQuests: this.copyActiveQuests() };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                activeQuests: this.copyActiveQuests()\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    render() {\r\n        const dungeonModeData = this.props.dungeon.modes[this.props.mode];\r\n        const questData = this.getQuestData(this.props.mode);\r\n        const quest = this.getQuest();\r\n        return (\r\n            <div>\r\n                <h2>{this.props.mode}</h2>\r\n                {this.renderEnnemies(dungeonModeData.ennemies)}\r\n                <Resource type={ResourceType.GOLD} value={dungeonModeData.reward.gold} />\r\n                <Resource type={ResourceType.EXP} value={dungeonModeData.reward.exp} />\r\n                <Resource type={ResourceType.TIME} value={QuestHelper.durationToString(dungeonModeData.duration.toMs())} />\r\n                {this.renderStatusButton(quest, questData)}\r\n                <SelectHeroOverlay\r\n                    display={this.state.overlayDisplayed}\r\n                    maxSelection={this.props.dungeon.modes[this.props.mode].maxPartySize}\r\n                    doCancelSelection={this.closeHeroSelect}\r\n                    doConfirmSelection={this.confirmHeroes(quest)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderEnnemies = (ennemies: Ennemy[]) => {\r\n        const ennemyList: JSX.Element[] = [];\r\n        let i = 0;\r\n        for (const ennemy of ennemies) {\r\n            ennemyList.push(<EnnemyInfo key={`ENNEMY_${i++}`} ennemy={ennemy} />)\r\n        }\r\n        return (\r\n            <div>\r\n                {ennemyList}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    closeHeroSelect = () => {\r\n        this.setState({ overlayDisplayed: false });\r\n    }\r\n\r\n    openHeroSelect = () => {\r\n        this.setState({ overlayDisplayed: true });\r\n    }\r\n\r\n    confirmHeroes = (quest: Quest) => {\r\n        return (heroes: Hero[]) => {\r\n            DungeonHelper.startDungeon(quest, heroes, this.props.mode);\r\n            this.closeHeroSelect();\r\n        }\r\n    }\r\n\r\n    renderStatusButton = (quest: Quest, questData: BaseQuest) => {\r\n        if(!this.props.dungeonState || (this.props.dungeonState && this.props.dungeonState.mode === this.props.mode)){\r\n            return (\r\n                <QuestAction quest={quest}\r\n                    questData={questData}\r\n                    start={this.openHeroSelect} startTxt={`Challenge`}\r\n                    end={this.end(quest, questData)} endTxt={`Complete`} />\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <span>{`${this.props.dungeonState.mode} dungeon mode in progress...`}</span>\r\n            );\r\n        }\r\n    }\r\n\r\n    getQuest = () => {\r\n        if (!this.state.activeQuests.hasOwnProperty(this.props.dungeon.id)) {\r\n            const quest = new Quest();\r\n            quest.id = this.props.dungeon.id;\r\n            return quest;\r\n        }\r\n        return this.state.activeQuests[this.props.dungeon.id];\r\n    }\r\n\r\n    getQuestData = (mode: DungeonMode) => {\r\n        return dungeonToQuestData(this.props.dungeon, mode);\r\n    }\r\n\r\n    end = (quest: Quest, questData: BaseQuest) => {\r\n        return () => this.props.doEndQuest(quest, questData);\r\n    }\r\n\r\n    copyActiveQuests = () => {\r\n        return Object.assign({}, GameModelStore.getState().quests);\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface ITabProps {\r\n    name: string;\r\n}\r\n\r\nexport default class Tab extends React.Component<ITabProps>{\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}","import * as React from 'react';\r\nimport Tab, { ITabProps } from './Tab';\r\n\r\ninterface ITabsProps {\r\n    defaultTab ?: string;\r\n}\r\n\r\ninterface ITabsState {\r\n    currentTab: string;\r\n}\r\n\r\nexport default class Tabs extends React.Component<ITabsProps, ITabsState>{\r\n    childTabs: { [name: string]: React.ReactChild }\r\n\r\n    constructor(props: ITabsProps) {\r\n        super(props);\r\n        this.state = { currentTab: null };\r\n        this.childTabs = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        React.Children.forEach(this.props.children, (child, index) => {\r\n            if (React.isValidElement<ITabProps>(child)) {\r\n                this.childTabs[child.props.name] = child;\r\n            }\r\n        });\r\n        const childTabKeys = Object.keys(this.childTabs)\r\n        if (childTabKeys.length > 0) {\r\n            if(this.props.defaultTab){\r\n                this.setState({ currentTab: this.props.defaultTab });\r\n            }\r\n            else{\r\n                this.setState({ currentTab: childTabKeys[0] });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tabsHeader: JSX.Element[] = [];\r\n        for (const name of Object.keys(this.childTabs)) {\r\n            tabsHeader.push(<button key={`TAB_HEADER_${name}`} onClick={this.changeTab(name)}>{name}</button>)\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {tabsHeader}\r\n                </div>\r\n                {this.state.currentTab &&\r\n                    this.childTabs[this.state.currentTab]}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    changeTab = (name: string) => {\r\n        return () => {\r\n            this.setState({ currentTab: name });\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport DungeonBase, { DungeonMode } from 'model/DungeonBase';\r\nimport Tabs from 'components/generic/tabs/Tabs';\r\nimport Tab from 'components/generic/tabs/Tab';\r\nimport QuestMap from 'model/serializable/QuestMap';\r\nimport DungeonModeInfo from 'components/body/dungeon-tab/DungeonModeInfo';\r\nimport Dungeon from 'model/Dungeon';\r\nimport Quest from 'model/Quest';\r\nimport BaseQuest from 'model/BaseQuest';\r\n\r\ninterface IDungeonInfoProps {\r\n    dungeon: DungeonBase;\r\n    dungeonState : Dungeon;\r\n    doEndQuest : (quest : Quest, questData: BaseQuest) => void;\r\n}\r\n\r\ninterface IDungeonInfoState {\r\n}\r\n\r\nlet tabIdGenerator = 0;\r\n\r\nexport default class DungeonInfo extends React.Component<IDungeonInfoProps, IDungeonInfoState>{\r\n\r\n    constructor(props: IDungeonInfoProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const difficultyTabs: JSX.Element[] = [];\r\n        for (const mode in this.props.dungeon.modes) {\r\n            difficultyTabs.push(\r\n                <Tab key={`TAB_${mode}_${tabIdGenerator++}`} name={mode}>\r\n                    <DungeonModeInfo dungeon={this.props.dungeon} mode={mode as DungeonMode} dungeonState={this.props.dungeonState} doEndQuest={this.props.doEndQuest}/>\r\n                </Tab>\r\n            );\r\n        }\r\n        let defaultTab;\r\n        if(this.props.dungeonState){\r\n            defaultTab = this.props.dungeonState.mode;\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <h3>{this.props.dungeon.name}</h3>\r\n                <Tabs defaultTab={defaultTab}>\r\n                    {difficultyTabs}\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport DungeonBase from 'model/DungeonBase';\r\nimport { DungeonData } from 'data/DungeonData';\r\nimport DungeonInfo from './DungeonInfo';\r\nimport SerializableMap from 'model/serializable/SerializableMap';\r\nimport Dungeon from 'model/Dungeon';\r\nimport Quest from 'model/Quest';\r\nimport BaseQuest from 'model/BaseQuest';\r\nimport DungeonHelper from 'business/DungeonHelper';\r\nimport QuestHelper from 'business/QuestHelper';\r\nimport EndQuestResult from 'business/EndQuestResult';\r\nimport QuestResultOverlay from 'components/body/quest-tab/QuestResultOverlay';\r\n\r\ninterface IDungeonTabProps {\r\n\r\n}\r\n\r\ninterface IDungeonTabState {\r\n    dungeons: DungeonBase[];\r\n    dungeonStates : SerializableMap<Dungeon>;\r\n    questResult: EndQuestResult;\r\n    questResultData : BaseQuest;\r\n}\r\n\r\nexport default class DungeonTab extends React.Component<IDungeonTabProps, IDungeonTabState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: IDungeonTabProps) {\r\n        super(props);\r\n        this.state = { dungeons: this.computeAvailableDungeons(), dungeonStates : this.getDungeonStates(), questResult : null, questResultData : null };\r\n    }\r\n\r\n    render() {\r\n        const dungeonComponents: JSX.Element[] = [];\r\n        for (const dungeon of this.state.dungeons) {\r\n            let dungeonState;\r\n            let dungeonStateMode;\r\n            if(this.state.dungeonStates.hasOwnProperty(dungeon.id)){\r\n                dungeonState = this.state.dungeonStates[dungeon.id];\r\n                dungeonStateMode = dungeonState.mode;\r\n            }\r\n            dungeonComponents.push(<DungeonInfo key={`DUNGEON_${dungeon.id}_${dungeonStateMode}`} dungeon={dungeon} dungeonState={dungeonState} doEndQuest={this.endQuest} />);\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>Dungeons</h2>\r\n                {dungeonComponents}\r\n                <QuestResultOverlay questResult={this.state.questResult} questData={this.state.questResultData} closeOverlay={() => this.setState({ questResult: null, questResultData : null })} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                dungeons: this.computeAvailableDungeons(),\r\n                dungeonStates: this.getDungeonStates(),\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    computeAvailableDungeons = () => {\r\n        return DungeonData.filter(value => {\r\n            for (const req of value.requireSwitches) {\r\n                if (!GameModelStore.getState().gameSwitches[req]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        })\r\n    }\r\n\r\n    getDungeonStates = () => {\r\n        return Object.assign({}, GameModelStore.getState().dungeons);\r\n    }\r\n\r\n    endQuest = (quest: Quest, questData: BaseQuest) => {\r\n        DungeonHelper.endDungeon(quest);\r\n        this.setState({ questResult: QuestHelper.endQuest(quest, questData), questResultData: questData });\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".log-info-date{\\r\\n    color : grey;\\r\\n    font-size : small;\\r\\n    float: right;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./LogInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./LogInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./LogInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport Log from 'model/log/Log';\r\nimport './LogInfo.css'\r\n\r\ninterface ILogInfoProps {\r\n    log: Log;\r\n}\r\n\r\nexport default class LogInfo extends React.Component<ILogInfoProps>{\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <span>{` ${this.props.log.msg}`}</span>\r\n                <span className='log-info-date'>{` ${new Date(this.props.log.producedAt)}`}</span>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Log from 'model/log/Log';\r\nimport LogStore from 'store/log/LogStore';\r\nimport LogInfo from 'components/body/log-tab/LogInfo';\r\n\r\ninterface ILogTabState {\r\n    logArchives: Log[];\r\n}\r\n\r\nexport default class LogTab extends React.Component<{}, ILogTabState> {\r\n    logSubscription: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { logArchives: LogStore.getState().logArchive.slice().reverse() };\r\n    }\r\n\r\n    render() {\r\n        const logInfoComponents: JSX.Element[] = [];\r\n        for (const log of this.state.logArchives) {\r\n            logInfoComponents.push(<LogInfo key={`LOG_${log.id}`} log={log} />);\r\n        }\r\n        return (\r\n            <div>\r\n                {logInfoComponents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.logSubscription = LogStore.addListener(() => {\r\n            this.setState({ logArchives: LogStore.getState().logArchive.slice().reverse() })\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.logSubscription.remove();\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hero-select{\\r\\n    width:100%;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./HeroSelectButton.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./HeroSelectButton.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./HeroSelectButton.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Hero from 'model/Hero';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport './HeroSelectButton.css';\r\nimport BaseHero from 'model/BaseHero';\r\nimport { HeroDataArray } from 'data/HeroData';\r\nimport ClassHelper from 'business/ClassHelper';\r\n\r\ninterface IHeroSelectButtonProps {\r\n    selectedHeroes: Set<Hero>;\r\n    hero: Hero;\r\n    doSelectHero: (hero: Hero) => void;\r\n    doUnselectHero: (hero: Hero) => void;\r\n    partySize: number;\r\n    reqClass?: string[];\r\n}\r\n\r\ninterface IHeroSelectButtonState {\r\n    isHeroBusy: boolean;\r\n}\r\n\r\nexport default class HeroSelectButton extends React.Component<IHeroSelectButtonProps, IHeroSelectButtonState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n    heroData: BaseHero;\r\n    constructor(props: IHeroSelectButtonProps) {\r\n        super(props);\r\n        this.state = { isHeroBusy: this.isHeroBusy() };\r\n        this.heroData = HeroDataArray.get(this.props.hero.data);\r\n    }\r\n\r\n    render() {\r\n        const validClass = this.isHeroValidClass();\r\n        return (\r\n            <button\r\n                className=\"hero-select\"\r\n                disabled={this.isButtonDisabled(validClass)}\r\n                onClick={this.doButtonCall}>\r\n                {this.renderTxt(validClass)}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    renderTxt = (validClass: boolean) => {\r\n        if (this.state.isHeroBusy) {\r\n            return 'Hero is busy';\r\n        }\r\n        else if (!validClass) {\r\n            return `Requires class ${this.props.reqClass}`\r\n        }\r\n        else if (this.isHeroSelected()) {\r\n            return 'Unselect';\r\n        }\r\n        else if (this.areAllHeroSelected()) {\r\n            return 'Max party size';\r\n        }\r\n        return 'Select';\r\n    }\r\n\r\n    isButtonDisabled = (validClass: boolean) => {\r\n        return this.state.isHeroBusy || !validClass || (this.areAllHeroSelected() && !this.isHeroSelected());\r\n    }\r\n\r\n    areAllHeroSelected = () => {\r\n        return (this.props.selectedHeroes.size >= this.props.partySize);\r\n    }\r\n\r\n    doButtonCall = () => {\r\n        if (this.isHeroSelected()) {\r\n            this.props.doUnselectHero(this.props.hero);\r\n        }\r\n        else {\r\n            this.props.doSelectHero(this.props.hero);\r\n        }\r\n    }\r\n\r\n    doUnselectHero = () => {\r\n        this.props.doUnselectHero(this.props.hero);\r\n    }\r\n\r\n    isHeroBusy = () => {\r\n        return this.props.hero.questId !== null;\r\n    }\r\n\r\n    isHeroSelected = () => {\r\n        return this.props.selectedHeroes.has(this.props.hero);\r\n    }\r\n\r\n    isHeroValidClass = () => {\r\n        if (!this.props.reqClass || this.props.reqClass.length === 0) {\r\n            return true;\r\n        }\r\n        return ClassHelper.contains(this.heroData.class, this.props.hero.rank, this.props.reqClass);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({ isHeroBusy: this.isHeroBusy() });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".overlay .confirm-button{\\r\\n    position: absolute;\\r\\n    width:100%;\\r\\n    bottom:3px;\\r\\n    left:0px;\\r\\n}\\r\\n\\r\\n.overlay .hero-container{\\r\\n    overflow-y: auto;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./SelectHeroOverlay.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./SelectHeroOverlay.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./SelectHeroOverlay.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ennemy-info-name{\\r\\n    color : red;\\r\\n}\\r\\n\\r\\n.ennemy-info{\\r\\n    display: inline-block;\\r\\n    margin: 5px 10px 5px 10px;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./EnnemyInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./EnnemyInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./EnnemyInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Quest from 'model/Quest';\r\nimport Resource, { ResourceType } from 'components/generic/resource/Resource';\r\nimport { QuestDataArray } from 'data/QuestData';\r\nimport BaseQuest from 'model/BaseQuest';\r\nimport EnnemyInfo from 'components/generic/ennemy/EnnemyInfo';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport QuestAction from 'components/body/quest-tab/QuestAction';\r\nimport QuestHelper from 'business/QuestHelper';\r\n\r\ninterface IQuestInfoProps {\r\n    quest: Quest;\r\n    doEndQuest: (quest: Quest) => void;\r\n    doSelectQuest: (quest: Quest) => void;\r\n}\r\n\r\ninterface IQuestInfoState {\r\n    quest: Quest;\r\n}\r\n\r\nexport default class QuestInfo extends React.Component<IQuestInfoProps, IQuestInfoState>{\r\n    questData: BaseQuest;\r\n    gameStoreListener: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: IQuestInfoProps) {\r\n        super(props);\r\n        this.questData = QuestDataArray.get(this.props.quest.id);\r\n        this.state = { quest: this.props.quest };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.gameStoreListener = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                quest: GameModelStore.getState().quests[this.props.quest.id]\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.gameStoreListener) {\r\n            this.gameStoreListener.remove();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const questData = this.questData;\r\n        return (\r\n            <div className='container'>\r\n                <h3>{questData.title}</h3>\r\n                <p>{questData.description}</p>\r\n                {this.renderClassReq()}\r\n                {this.renderQuestDetails()}\r\n                {this.renderQuestAction()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderClassReq = () => {\r\n        if (this.questData.classReq && this.questData.classReq.length > 0) {\r\n            const classReqList: JSX.Element[] = [];\r\n            for (const cls of this.questData.classReq) {\r\n                classReqList.push(<span>{`${cls} `}</span>)\r\n            }\r\n            return (\r\n                <p>\r\n                    {`Required class : `}\r\n                    {classReqList}\r\n                </p>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderQuestDetails = () => {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <Resource type={ResourceType.GOLD} value={this.questData.reward.gold} modifier />\r\n                            <Resource type={ResourceType.EXP} value={this.questData.reward.exp} modifier />\r\n                            {this.questData.reward.shard !== 0 &&\r\n                                <Resource type={ResourceType.SHARD} value={this.questData.reward.shard} modifier />}\r\n                            <Resource type={ResourceType.TIME} value={QuestHelper.durationToString(this.questData.duration.toMs())} />\r\n                        </td>\r\n                        {this.renderEnnemyCells()}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    renderEnnemyCells = () => {\r\n        if (!this.questData.ennemies) {\r\n            return null;\r\n        }\r\n        const result: JSX.Element[] = [];\r\n        let i = 0;\r\n        if (this.questData.ennemies.length > 0) {\r\n            result.push(<td key={`ENNEMY_${i++}`}>Ennemies - </td>);\r\n        }\r\n        for (let ennemy of this.questData.ennemies) {\r\n            result.push(<td key={`ENNEMY_${i++}`}><EnnemyInfo ennemy={ennemy} /></td>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderQuestAction = () => {\r\n        return (\r\n            <QuestAction\r\n                quest={this.state.quest}\r\n                questData={this.questData}\r\n                startTxt={`Start`} start={this.startQuest}\r\n                endTxt={`Finish quest`} end={this.endQuest} />\r\n        )\r\n    }\r\n\r\n    endQuest = () => {\r\n        this.props.doEndQuest(this.state.quest);\r\n    }\r\n\r\n    startQuest = () => {\r\n        this.props.doSelectQuest(this.state.quest);\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport { QuestDataArray } from 'data/QuestData';\r\nimport Quest from 'model/Quest';\r\nimport QuestInfo from 'components/body/quest-tab/QuestInfo';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport QuestHelper from 'business/QuestHelper';\r\nimport Hero from 'model/Hero';\r\nimport SelectHeroOverlay from 'components/generic/select-hero-overlay/SelectHeroOverlay';\r\nimport EndQuestResult from 'business/EndQuestResult';\r\nimport ObjectUtils from 'business/utils/ObjectUtils';\r\nimport QuestResultOverlay from 'components/body/quest-tab/QuestResultOverlay';\r\n\r\ninterface IQuestTabState {\r\n    quests: Quest[];\r\n    questResult: EndQuestResult;\r\n    questSelect: Quest;\r\n}\r\n\r\nexport default class QuestTab extends React.Component<{}, IQuestTabState>{\r\n    gameStoreListener: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            quests: ObjectUtils.getValues(GameModelStore.getState().quests),\r\n            questResult: null,\r\n            questSelect: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Available guild quests</h2>\r\n                {this.renderQuests()}\r\n                {this.renderQuestEndOverlay()}\r\n                {this.renderQuestStartOverlay()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.gameStoreListener = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                quests: ObjectUtils.getValues(GameModelStore.getState().quests)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.gameStoreListener) {\r\n            this.gameStoreListener.remove();\r\n        }\r\n    }\r\n\r\n    renderQuests = () => {\r\n        const result: JSX.Element[] = [];\r\n        for (let quest of this.state.quests) {\r\n            if (this.shouldRenderQuest(quest)) {\r\n                result.push(<QuestInfo key={`QUEST_${quest.id}`} quest={quest} doEndQuest={this.endQuest} doSelectQuest={this.doSelectQuest} />);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    shouldRenderQuest = (quest: Quest) => {\r\n        const questData = QuestDataArray.get(quest.id);\r\n        return questData && (quest.completedAt == null || questData.repeat != null);\r\n    }\r\n\r\n    renderQuestEndOverlay = () => {\r\n        return <QuestResultOverlay questResult={this.state.questResult} closeOverlay={() => this.setState({ questResult: null })} />\r\n    }\r\n\r\n    renderQuestStartOverlay = () => {\r\n        if (this.state.questSelect) {\r\n            const questData = QuestDataArray.get(this.state.questSelect.id);\r\n            return (\r\n                <SelectHeroOverlay\r\n                    display={!!this.state.questSelect}\r\n                    maxSelection={questData.maxPartySize}\r\n                    doCancelSelection={() => this.setState({ questSelect: null })}\r\n                    doConfirmSelection={(heroes: Hero[]) => this.startQuest(this.state.questSelect, heroes)}\r\n                    reqClass={questData.classReq}>\r\n                    <h3>{questData.title}</h3>\r\n                    <h2>Select heroes to go on this quest.</h2>\r\n                </SelectHeroOverlay>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    endQuest = (quest: Quest) => {\r\n        const questResult = QuestHelper.endQuest(quest);\r\n        this.setState({ questResult: questResult });\r\n    }\r\n\r\n    startQuest = (quest: Quest, heroes: Hero[]) => {\r\n        QuestHelper.startQuest(quest, heroes);\r\n        this.setState({ questSelect: null });\r\n    }\r\n\r\n    doSelectQuest = (quest: Quest) => {\r\n        this.setState({ questSelect: quest });\r\n    }\r\n}","import Equipment from \"model/items/Equipment\";\r\n\r\nexport default class EquipmentSet{\r\n    head : string;\r\n    torso : string;\r\n    hands : string;\r\n    legs : string;\r\n    feet : string;\r\n    leftHand : string;\r\n    rightHand : string;\r\n}","import CallForHero from \"model/CallForHero\";\r\nimport Pool, { Rate } from \"model/Pool\";\r\nimport GameModelStore from \"store/game-model/GameModelStore\";\r\nimport Hero from \"model/Hero\";\r\nimport EquipmentSet from \"model/EquipmentSet\";\r\nimport GameModelDispatcher from \"store/game-model/GameModelDispatcher\";\r\nimport { GameModelActionTypes } from \"store/game-model/GameModelActionTypes\";\r\nimport { Rarity } from \"model/Rarity\";\r\n\r\nclass CFHHelper{\r\n    doCFH = (cfh : CallForHero) => {\r\n        let dupId = undefined;\r\n        let newHero : Hero = undefined;\r\n        const rarity = this.computeRollRarity(cfh.pool.rates);\r\n        const heroPull = this.computeHeroPull(rarity, cfh.pool);\r\n        if(GameModelStore.getState().heroes.contains(heroPull.id)){\r\n            dupId = heroPull.id;\r\n        }\r\n        else{\r\n            newHero = {\r\n                data : heroPull.id,\r\n                level : 1,\r\n                rank : 1,\r\n                dupLevel : 0,\r\n                questId : null,\r\n                equipment : new EquipmentSet()\r\n            }\r\n        }\r\n\r\n        GameModelDispatcher.dispatch({\r\n            type : GameModelActionTypes.REGISTER_CFH_RESULT,\r\n            payload : {\r\n                cfh : cfh,\r\n                hero : newHero,\r\n                dupId : dupId\r\n            }\r\n        });\r\n    }\r\n\r\n    computeRollRarity = (rates : Rate[]) => {\r\n        const roll = Math.random()*100;\r\n        let prct = 0;\r\n        for(let i=0; i<rates.length; i++){\r\n            const pull = rates[i];\r\n            prct += pull.nbr;\r\n            if(roll <= prct){\r\n                return pull.rarity;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    computeHeroPull = (rarity : Rarity, pool : Pool) => {\r\n        const roll = Math.floor(Math.random() * pool.content[rarity].length);\r\n        return pool.content[rarity][roll];\r\n    }\r\n}\r\n\r\nexport default new CFHHelper();","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport CallForHero from 'model/CallForHero';\r\nimport CFHHelper from 'business/CFHHelper';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport Resource, { ResourceType } from 'components/generic/resource/Resource';\r\n\r\ninterface ICallInfoProps {\r\n    cfh: CallForHero;\r\n}\r\n\r\ninterface ICallInfoState {\r\n    shards: number;\r\n}\r\n\r\nexport default class CallInfo extends React.Component<ICallInfoProps, ICallInfoState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: ICallInfoProps) {\r\n        super(props);\r\n        this.state = { shards: GameModelStore.getState().shards }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <h3>{this.props.cfh.title}</h3>\r\n                <p>{this.props.cfh.description}</p>\r\n                {this.props.cfh.price !== 0 && \r\n                    <Resource type={ResourceType.SHARD} value={this.props.cfh.price} modifier remove />}\r\n                <button onClick={this.doCall} disabled={!this.hasEnoughShards()}>Call</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                shards: GameModelStore.getState().shards\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.storeSubscribe) {\r\n            this.storeSubscribe.remove();\r\n        }\r\n    }\r\n\r\n    hasEnoughShards = () => {\r\n        return this.state.shards >= this.props.cfh.price;\r\n    }\r\n\r\n    doCall = () => {\r\n        CFHHelper.doCFH(this.props.cfh);\r\n    }\r\n}","import CallForHero from \"model/CallForHero\";\r\nimport { HeroData } from \"data/HeroData\";\r\nimport { Rarity } from \"model/Rarity\";\r\n\r\nexport const CFH1: CallForHero = {\r\n    id: 'CFH1',\r\n    title: 'Warrior call',\r\n    description: 'Call a warrior to your guild',\r\n    price: 0,\r\n    pool: {\r\n        content: { sp: [HeroData.HERO1] },\r\n        rates: [{ nbr: 100, rarity: Rarity.SP }]\r\n    }\r\n}\r\n\r\nexport const CFH2: CallForHero = {\r\n    id: 'CFH2',\r\n    title: 'Mage call',\r\n    description: 'Call a mage to your guild',\r\n    price: 0,\r\n    pool: {\r\n        content: { sp: [HeroData.HERO2] },\r\n        rates: [{ nbr: 100, rarity: Rarity.SP }]\r\n    }\r\n}\r\n\r\nexport const CFH3: CallForHero = {\r\n    id: 'CFH3',\r\n    title: 'Minstrel call',\r\n    description: 'Call a minstrel to your guild',\r\n    price: 0,\r\n    pool: {\r\n        content: { sp: [HeroData.HERO3] },\r\n        rates: [{ nbr: 100, rarity: Rarity.SP }]\r\n    }\r\n}\r\n\r\n/*\r\n * T  : 80%\r\n * R  : 19%\r\n * Ex : 1%\r\n */\r\nexport const CFH4: CallForHero = {\r\n    id: 'CFH4',\r\n    title: 'Beginner call',\r\n    description: 'Call heroes to your guild. This call for a hero will produce a single hero of rarity T to Ex.',\r\n    price: 5,\r\n    pool: {\r\n        content: { t: [HeroData.HERO4, HeroData.HERO5, HeroData.HERO6, HeroData.HERO7] },\r\n        rates: [{ nbr: 100, rarity: Rarity.T }]\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport * as CFHData from 'data/CFHData';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport CallInfo from 'components/body/call-tab/CallInfo';\r\n\r\ninterface ICallTabState {\r\n    beginnerCFH: boolean;\r\n}\r\n\r\nexport default class CallTab extends React.Component<{}, ICallTabState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { beginnerCFH: this.isBeginnerCFH() };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Perform a Call For Heroes !</h2>\r\n                {this.renderAvailableCFH()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            const beginnerCFH = this.isBeginnerCFH();\r\n            this.setState({\r\n                beginnerCFH: beginnerCFH\r\n            });\r\n        });\r\n    }\r\n\r\n    isBeginnerCFH = () => {\r\n        const CFH1nbr = GameModelStore.getState().statistics[CFHData.CFH1.id];\r\n        const CFH2nbr = GameModelStore.getState().statistics[CFHData.CFH2.id];\r\n        const CFH3nbr = GameModelStore.getState().statistics[CFHData.CFH3.id];\r\n        return (!CFH1nbr || CFH1nbr == 0) && (!CFH2nbr || CFH2nbr == 0) && (!CFH3nbr || CFH3nbr == 0);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.storeSubscribe) {\r\n            this.storeSubscribe.remove();\r\n        }\r\n    }\r\n\r\n    renderAvailableCFH = () => {\r\n        if (this.state.beginnerCFH) {\r\n            return (\r\n                <div>\r\n                    <CallInfo cfh={CFHData.CFH1} />\r\n                    <CallInfo cfh={CFHData.CFH2} />\r\n                    <CallInfo cfh={CFHData.CFH3} />\r\n                </div>\r\n            );\r\n        }\r\n        const callsList : JSX.Element[] = [];\r\n        callsList.push(<CallInfo key={`CFH_CFH4`} cfh={CFHData.CFH4} />)\r\n        return (\r\n            <div>\r\n                {callsList}\r\n            </div>\r\n        );\r\n    }\r\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".main-content{\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./Content.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./Content.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./Content.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import { ImprovementInfo } from \"model/Improvements\";\r\n\r\nexport const improvementsData: ImprovementInfo[] = [\r\n    {\r\n        key: 'shop1',\r\n        title: 'Guild Market',\r\n        desc: 'Build a guild market where your heroes can buy brand new pieces of equipment and sell objects they find on their quests.',\r\n        cost: 10,\r\n        requireKeys: [],\r\n    },\r\n    {\r\n        key: 'train1',\r\n        title: 'Training grounds',\r\n        desc: 'A training grounds where heroes can train and gain experience before leaving on quests.',\r\n        cost: 50,\r\n        requireKeys: [],\r\n    },\r\n    {\r\n        key: 'train2',\r\n        title: 'Training equipment',\r\n        desc: 'Heroes will be able to train more effectively with proper training equipment.',\r\n        cost: 200,\r\n        requireKeys: ['train1'],\r\n    },\r\n    {\r\n        key: 'train3',\r\n        title: 'Training master',\r\n        desc: 'Hires a retired mercenary to train your heroes in the ways of battle.',\r\n        cost: 500,\r\n        requireKeys: ['train2'],\r\n    },\r\n    {\r\n        key: 'trainClickNo1',\r\n        title: 'Training ground refreshments',\r\n        desc: 'Have some water and food stands available on the training grounds so that heroes train more efficiently.',\r\n        cost: 200,\r\n        requireKeys: ['train1'],\r\n    }\r\n];","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./ImprovementDetails.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./ImprovementDetails.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./ImprovementDetails.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport { ImprovementInfo } from 'model/Improvements';\r\nimport Resource, { ResourceType } from 'components/generic/resource/Resource';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\nimport './ImprovementDetails.css';\r\n\r\ninterface ImprovementDetailsProps {\r\n    improvement: ImprovementInfo;\r\n}\r\n\r\ninterface ImprovementDetailsState {\r\n    gold: number;\r\n}\r\n\r\nexport default class ImprovementDetails extends React.Component<ImprovementDetailsProps, ImprovementDetailsState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: ImprovementDetailsProps) {\r\n        super(props);\r\n        this.state = { gold: GameModelStore.getState().gold };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <h3>{this.props.improvement.title}</h3>\r\n                <Resource style={{ float: 'right' }} value={this.props.improvement.cost} type={ResourceType.GOLD} modifier remove inline />\r\n                <p>{this.props.improvement.desc}</p>\r\n                <button disabled={this.isTooExpensive()} onClick={this.buyImprovement}>Buy</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({ gold: GameModelStore.getState().gold });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    isTooExpensive = () => {\r\n        return this.props.improvement.cost > this.state.gold;\r\n    }\r\n\r\n    buyImprovement = () => {\r\n        GameModelDispatcher.dispatch({\r\n            type: GameModelActionTypes.ADD_GOLD,\r\n            payload: {\r\n                quantity: -this.props.improvement.cost\r\n            }\r\n        });\r\n        GameModelDispatcher.dispatch({\r\n            type: GameModelActionTypes.SET_IMPROVEMENT,\r\n            payload: {\r\n                improvementKey: this.props.improvement.key,\r\n                value: true\r\n            }\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport ImprovementDetails from 'components/body/improvements-tab/ImprovementDetails';\r\nimport Improvements, { ImprovementInfo } from 'model/Improvements';\r\nimport { improvementsData } from 'data/ImprovementsData';\r\n\r\ninterface ImprovementsTabProps {\r\n\r\n}\r\n\r\ninterface ImprovementsTabState {\r\n    improvements: Improvements;\r\n}\r\n\r\nexport default class ImprovementsTab extends React.Component<ImprovementsTabProps, ImprovementsTabState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n    constructor(props: ImprovementsTabProps) {\r\n        super(props);\r\n        this.state = { improvements: GameModelStore.getState().improvements };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Guild improvements</h2>\r\n                {this.renderImprovements()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({ improvements: GameModelStore.getState().improvements });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    renderImprovements = () => {\r\n        const result: JSX.Element[] = [];\r\n        for (let i = 0; i < improvementsData.length; i++) {\r\n            const improvement = improvementsData[i];\r\n            let requirements = true;\r\n            for(let i=0; i< improvement.requireKeys.length; i++){\r\n                const requireKey = improvement.requireKeys[i];\r\n                requirements = requirements && this.state.improvements[requireKey];\r\n            }\r\n            if (!this.state.improvements[improvement.key] && requirements) {\r\n                result.push(<ImprovementDetails key={`IMPROVEMENT_${i}`} improvement={improvement} />);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n","import QuestReward from 'model/QuestReward';\r\nimport Activity from 'model/Activity';\r\nimport Ennemy from 'model/BattleEntity';\r\nimport Drop from 'model/Drop';\r\nimport Duration from 'model/Duration';\r\n\r\nexport default class BaseQuest {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    ennemies: Ennemy[];\r\n    maxPartySize: number;\r\n    reward: QuestReward;\r\n    drop: Drop[];\r\n    activates: string[];\r\n    repeat: Duration;\r\n    duration: Duration;\r\n    classReq : string[];\r\n}","import Quest from \"model/Quest\";\r\nimport QuestDrop from \"model/QuestDrop\";\r\n\r\nexport default class EndQuestResult{\r\n    quest : Quest;\r\n    result : boolean;\r\n    drops : QuestDrop[];\r\n}","import Ennemy from \"model/BattleEntity\";\r\nimport Hero from \"model/Hero\";\r\nimport HeroHelper from \"business/HeroHelper\";\r\n\r\nclass BattleEngine {\r\n\r\n    //True win, False lose\r\n    computeBattleResult = (heroes: Hero[], ennemies: Ennemy[]) => {\r\n        const contenders = heroes.map(v => HeroHelper.computeHeroBA(v));\r\n        contenders.sort();\r\n        const toBeat = ennemies.map(v => v.ba);\r\n        toBeat.sort();\r\n        let j = 0;\r\n        let i = 0;\r\n        while(i < contenders.length && j < toBeat.length){\r\n            let heroBA = contenders[i];\r\n            let ennemyBA = toBeat[j];\r\n            const successPrct = this.computeSuccessRate(ennemyBA, heroBA);\r\n            const roll = Math.random();\r\n            if (roll <= successPrct) {\r\n                j++;\r\n                contenders[i] = this.downgradeBAOnWin(heroBA, ennemyBA);\r\n            }\r\n            else{\r\n                i++;\r\n                toBeat[j] = this.downgradeBAOnWin(ennemyBA, heroBA);\r\n            }\r\n        }\r\n        return i < contenders.length;\r\n    }\r\n\r\n    downgradeBAOnWin = (winBA : number, loseBA : number) => {\r\n        return winBA - (loseBA*0.1);\r\n    }\r\n\r\n    // Linear success chance between 80% to 120% of the reqPower\r\n    // <80% -> 0% chance success | >120% -> 100% chance success\r\n    computeSuccessRate = (questPower: number, heroPower: number) => {\r\n        return (5 * heroPower) / (2 * questPower) - 2;\r\n    }\r\n\r\n}\r\n\r\nexport default new BattleEngine();","import * as React from 'react';\r\nimport QuestProgressBar from 'components/generic/quest/QuestProgressBar';\r\nimport Hero from 'model/Hero';\r\nimport Quest from 'model/Quest';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport NavigationStore, { TabType } from 'store/navigation/NavigationStore';\r\nimport { dungeonToQuestData } from 'model/DungeonBase';\r\nimport { DungeonData, DungeonDataArray } from 'data/DungeonData';\r\n\r\ninterface IHeroQuestProgressProps {\r\n    hero: Hero;\r\n}\r\n\r\ninterface IHeroQuestProgressState {\r\n    quest: Quest;\r\n    isDungeon : boolean;\r\n    questFinished: boolean;\r\n}\r\n\r\nexport default class HeroQuestProgress extends React.Component<IHeroQuestProgressProps, IHeroQuestProgressState>{\r\n\r\n    constructor(props: IHeroQuestProgressProps) {\r\n        super(props);\r\n        this.state = { quest: this.getHeroQuest(), questFinished: false, isDungeon : this.isDungeon() };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.questFinished) {\r\n            return (\r\n                <button onClick={this.goToQuests}>Quest is finished</button>\r\n            )\r\n        }\r\n        else if (this.state.quest) {\r\n            let questData;\r\n            if(this.state.isDungeon){\r\n                questData = dungeonToQuestData(DungeonDataArray.get(this.props.hero.questId), GameModelStore.getState().dungeons[this.props.hero.questId].mode)\r\n            }\r\n            return (\r\n                <QuestProgressBar quest={this.state.quest} questData={questData} doQuestOver={() => this.setState({ questFinished : true })} widthPrct={100} />\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: IHeroQuestProgressProps) {\r\n        this.setState({ quest: this.getHeroQuest(nextProps), questFinished: false, isDungeon : this.isDungeon(nextProps) });\r\n    }\r\n\r\n    getHeroQuest = (nxtProps?: IHeroQuestProgressProps) => {\r\n        const props = nxtProps || this.props;\r\n        if (props.hero.questId != null) {\r\n            return GameModelStore.getState().quests[props.hero.questId];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDungeon = (nxtProps?: IHeroQuestProgressProps) => {\r\n        const props = nxtProps || this.props;\r\n        if(props.hero.questId != null){\r\n            return GameModelStore.getState().dungeons.hasOwnProperty(props.hero.questId);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    goToQuests = () => {\r\n        if(this.state.isDungeon){\r\n            NavigationStore.navigateTo(TabType.DUNGEONS);\r\n        }\r\n        else{\r\n            NavigationStore.navigateTo(TabType.QUESTS);\r\n        }\r\n    }\r\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".upgrade-overlay-button{\\r\\n    position : absolute;\\r\\n    bottom : 10px;\\r\\n    right: 0px;\\r\\n    left: 0px;\\r\\n    margin-left:auto;\\r\\n    margin-right:auto;\\r\\n    width:100px;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./UpgradeOverlay.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./UpgradeOverlay.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./UpgradeOverlay.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Hero from 'model/Hero';\r\nimport Overlay from 'components/generic/Overlay';\r\nimport BaseHero from 'model/BaseHero';\r\nimport { HeroDataArray } from 'data/HeroData';\r\nimport ItemCollection from 'model/serializable/ItemCollection';\r\nimport ItemInfo from 'components/body/items-tab/ItemInfo';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport './UpgradeOverlay.css'\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\n\r\ninterface IUpgradeOverlayProps {\r\n    display: boolean;\r\n    doCancel: () => void;\r\n    hero: Hero;\r\n}\r\n\r\ninterface IUpgradeOverlayState {\r\n    items: ItemCollection;\r\n}\r\n\r\nexport default class UpgradeOverlay extends React.Component<IUpgradeOverlayProps, IUpgradeOverlayState> {\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    heroData: BaseHero;\r\n    constructor(props: IUpgradeOverlayProps) {\r\n        super(props);\r\n        this.heroData = HeroDataArray.get(this.props.hero.data);\r\n        this.state = { items: Object.assign({}, GameModelStore.getState().items) };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                items: Object.assign({}, GameModelStore.getState().items)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    render() {\r\n        const requirements = this.heroData.upgradeRequirements[this.props.hero.rank];\r\n        if (requirements) {\r\n            const requireItems: JSX.Element[] = [];\r\n            for (const wrapper of requirements) {\r\n                const hasEnough = this.state.items[wrapper.item.id] >= wrapper.quantity;\r\n                const txtColor = (hasEnough) ? 'lightgreen' : 'indianred';\r\n                requireItems.push(<ItemInfo key={`REQ_ITEM_${wrapper.item.id}`} txtColor={txtColor} item={wrapper.item} quantity={wrapper.quantity} />);\r\n            }\r\n            return (\r\n                <Overlay display={this.props.display} closeOverlayCallback={this.props.doCancel} width={30} height={30}>\r\n                <h2>Rank Up</h2>\r\n                    <h3>\r\n                        Required :\r\n                    </h3>\r\n                    {requireItems}\r\n                    <button className={`input-center upgrade-overlay-button`} disabled={!this.canUpgrade()} onClick={this.rankUp}>Rank up</button>\r\n                </Overlay>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    canUpgrade = () => {\r\n        const requirements = this.heroData.upgradeRequirements[this.props.hero.rank];\r\n        for (const wrapper of requirements) {\r\n            const hasEnough = this.state.items[wrapper.item.id] >= wrapper.quantity;\r\n            if (!hasEnough) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    rankUp = () => {\r\n        GameModelDispatcher.dispatch({\r\n            type : GameModelActionTypes.HERO_RANK_UP,\r\n            payload : {\r\n                hero: this.props.hero\r\n            }\r\n        })\r\n    }\r\n}","import * as React from 'react';\r\nimport Hero from 'model/Hero';\r\nimport HeroHelper from 'business/HeroHelper';\r\nimport UpgradeOverlay from './UpgradeOverlay';\r\n\r\ninterface IUpgradeButtonProps {\r\n    hero: Hero;\r\n    className?:string;\r\n}\r\n\r\ninterface IUpgradeButtonState {\r\n    overlayDisplayed: boolean;\r\n}\r\n\r\nexport default class UpgradeButton extends React.Component<IUpgradeButtonProps, IUpgradeButtonState>{\r\n    constructor(props: IUpgradeButtonProps) {\r\n        super(props);\r\n        this.state = { overlayDisplayed: false };\r\n    }\r\n\r\n    render() {\r\n        if (!this.isMaxRank()) {\r\n            return (\r\n                <>\r\n                    <button className={`${this.props.className}`} disabled={!this.canRankUp()} onClick={this.displayOverlay}>Rank up</button>\r\n                    <UpgradeOverlay hero={this.props.hero} doCancel={this.hideOverlay} display={this.state.overlayDisplayed} />\r\n                </>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isMaxRank = () => {\r\n        return HeroHelper.isMaxRank(this.props.hero);\r\n    }\r\n\r\n    canRankUp = () => {\r\n        return HeroHelper.isMaxLevel(this.props.hero);\r\n    }\r\n\r\n    displayOverlay = () => {\r\n        this.setState({ overlayDisplayed: true });\r\n    }\r\n\r\n    hideOverlay = () => {\r\n        this.setState({ overlayDisplayed: false });\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".equipment-overlay-part{\\r\\n    width:50%;\\r\\n    height:100%;\\r\\n    float:left;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./EquipmentOverlay.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./EquipmentOverlay.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./EquipmentOverlay.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import Item from \"model/items/Item\";\r\nimport Equipment, { EquipmentType } from \"model/items/Equipment\";\r\nimport EquipmentSet from \"model/EquipmentSet\";\r\nimport Hero from \"model/Hero\";\r\n\r\nclass ItemHelper{\r\n\r\n    computeSlotForItem = (item : Item, hero: Hero) : keyof EquipmentSet => {\r\n        if(item instanceof Equipment){\r\n            const equipment = item as Equipment;\r\n            switch(equipment.type){\r\n                case EquipmentType.HEAD:\r\n                    return 'head';\r\n                case EquipmentType.TORSO:\r\n                    return 'torso';\r\n                case EquipmentType.HANDS:\r\n                    return 'hands';\r\n                case EquipmentType.LEGS:\r\n                    return 'legs';\r\n                case EquipmentType.FEET:\r\n                    return 'feet';\r\n                case EquipmentType.TWO_HANDED:\r\n                    return 'rightHand';\r\n                case EquipmentType.ONE_HANDED:\r\n                    {\r\n                        if(hero.equipment.rightHand){\r\n                            return 'leftHand';\r\n                        }\r\n                        else{\r\n                            return 'rightHand';\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    isEquipable = (item : Item) => {\r\n        return item instanceof Equipment;\r\n    }\r\n\r\n}\r\n\r\nexport default new ItemHelper();","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".item-container {\\r\\n    margin: 5px;\\r\\n    height: 35px;\\r\\n    width: 35px;\\r\\n    border-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: #A64E00;\\r\\n    background-color: #FF9A40;\\r\\n    border-radius: 4px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.item-img-container {\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\\r\\n}\\r\\n\\r\\n.item-quantity-txt {\\r\\n    position: absolute;\\r\\n    top: 0px;\\r\\n    right: 0px;\\r\\n}\\r\\n\\r\\n.item-name {\\r\\n    color: lightgreen;\\r\\n}\\r\\n\\r\\n.item-description {\\r\\n    margin-top: 5px;\\r\\n    color: lightgray;\\r\\n}\\r\\n\\r\\n.item-stats {\\r\\n    margin-top: 5px;\\r\\n    color: lightblue;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./ItemInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./ItemInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./ItemInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dup-level{\\r\\n    color:green;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./DupLevel.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./DupLevel.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./DupLevel.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport Hero from 'model/Hero';\r\nimport './DupLevel.css'\r\n\r\ninterface IDupLevelProps{\r\n    hero : Hero;\r\n}\r\n\r\nexport default class DupLevel extends React.Component<IDupLevelProps>{\r\n\r\n    render(){\r\n        if(this.props.hero.dupLevel > 0){\r\n            return(\r\n                <span className='dup-level'>{`+${this.props.hero.dupLevel}`}</span>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ability-modifier-positive {\\r\\n    color: green;\\r\\n}\\r\\n\\r\\n.ability-modifier-negative {\\r\\n    color: red;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./AbilityModifier.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./AbilityModifier.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./AbilityModifier.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport ModifierAbility from 'model/ModifierAbility';\r\nimport './AbilityModifier.css'\r\n\r\ninterface IAbilityModifierProps {\r\n    modifier: number;\r\n    klass: string;\r\n}\r\n\r\nexport default class AbilityModifier extends React.Component<IAbilityModifierProps> {\r\n    render() {\r\n        const isPositive = this.props.modifier >= 0;\r\n        const modifierSign = (isPositive) ? '+' : '';\r\n        const modifierClassname = (isPositive) ? 'ability-modifier-positive' : 'ability-modifier-negative';\r\n        return (\r\n            <div>\r\n                <span className={modifierClassname}>\r\n                    {`${modifierSign}${this.props.modifier}% BA`}\r\n                </span>\r\n                <span>\r\n                    {' against '}\r\n                </span>\r\n                <span className={modifierClassname}>\r\n                    {this.props.klass}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport AbilityModifier from './AbilityModifier';\r\nimport ModifierAbility from 'model/ModifierAbility';\r\n\r\ninterface IBonusInfoProps {\r\n    modAbilityList: ModifierAbility[];\r\n}\r\n\r\nexport default class AbilityModifierList extends React.Component<IBonusInfoProps>{\r\n    render() {\r\n        const modifierList: JSX.Element[] = [];\r\n        const modAbilityList = this.props.modAbilityList;\r\n        for (const modAbility of modAbilityList) {\r\n            for (const klass of modAbility.classes) {\r\n                modifierList.push(<AbilityModifier key={`${klass}_MODIFIER`} modifier={modAbility.modPrct} klass={klass} />)\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {modifierList}\r\n            </div>\r\n        );\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".equip-table {\\r\\n    background-color: #FF9A40;\\r\\n}\\r\\n\\r\\n.equip-hero-info {\\r\\n    text-align: center;\\r\\n    float: left;\\r\\n    width: 50%;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./EquipmentInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./EquipmentInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./EquipmentInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".equipment-piece{\\r\\n    border : 2px solid black;\\r\\n}\\r\\n\\r\\n.drag-hover{\\r\\n    border-color: white;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./EquipmentPiece.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./EquipmentPiece.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./EquipmentPiece.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Equipment, { EquipmentType } from 'model/items/Equipment';\r\nimport Hero from 'model/Hero';\r\nimport EquipmentSet from 'model/EquipmentSet';\r\nimport { NO_ICON_PATH, ItemData, ItemDataArray } from 'data/ItemData';\r\nimport EquipmentSetHelper from 'business/EquipmentSetHelper';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport './EquipmentPiece.css'\r\n\r\nexport const NO_ICON_PATH_SPECIFIC = (type: keyof EquipmentSet) => `img/items/none_${type}.png`\r\n\r\ninterface IEquipmentPieceProps {\r\n    hero: Hero;\r\n    type: keyof EquipmentSet\r\n}\r\n\r\ninterface IEquipmentPieceState {\r\n    pieceId: string;\r\n    isDropHover: boolean\r\n}\r\n\r\nexport default class EquipmentPiece extends React.Component<IEquipmentPieceProps, IEquipmentPieceState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: IEquipmentPieceProps) {\r\n        super(props);\r\n        this.state = { pieceId: this.getPieceId(), isDropHover: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                pieceId: this.getPieceId()\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    render() {\r\n        let classname = 'equipment-piece';\r\n        if (this.state.isDropHover) {\r\n            classname += ' drag-hover';\r\n        }\r\n        const piece = ItemDataArray.get(this.state.pieceId);\r\n        let imgElement;\r\n        if (piece) {\r\n            imgElement = <img className={classname} src={piece.icon} />\r\n        }\r\n        else {\r\n            imgElement = <img className={classname} src={NO_ICON_PATH_SPECIFIC(this.props.type)} />\r\n        }\r\n        return (\r\n            <div onDrop={this.onDrop} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave} onDragEnter={this.preventDefault} onDoubleClick={this.onDoubleClick}>\r\n                {imgElement}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onDrop = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n        this.setState({ isDropHover: false });\r\n        const itemId = e.dataTransfer.getData(\"itemId\");\r\n        if (this.checkItemValidity(itemId)) {\r\n            GameModelDispatcher.dispatch({\r\n                type: GameModelActionTypes.EQUIP_ITEM,\r\n                payload: {\r\n                    hero: this.props.hero,\r\n                    itemId: itemId,\r\n                    slot: this.props.type\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    checkItemValidity = (itemId: string) => {\r\n        const item = ItemDataArray.get(itemId);\r\n        if (item instanceof Equipment) {\r\n            const equipment = item as Equipment;\r\n            if (EquipmentSetHelper.isEquipableInSlot(equipment, this.props.type)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    preventDefault = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n        const itemId = e.dataTransfer.getData(\"itemId\");\r\n        if (this.checkItemValidity(itemId)) {\r\n            this.setState({ isDropHover: true });\r\n        }\r\n    }\r\n\r\n    onDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n        this.setState({ isDropHover: false });\r\n    }\r\n\r\n    getPieceId = () => {\r\n        return GameModelStore.getState().heroes.get(this.props.hero.data).equipment[this.props.type];\r\n    }\r\n\r\n    onDoubleClick = () => {\r\n        if (this.state.pieceId) {\r\n            GameModelDispatcher.dispatch({\r\n                type: GameModelActionTypes.REMOVE_ITEM,\r\n                payload: {\r\n                    hero: this.props.hero,\r\n                    slot: this.props.type\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport Hero from 'model/Hero';\r\nimport EquipmentPiece from 'components/generic/equip-overlay/EquipmentPiece';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\nimport './EquipmentInfo.css'\r\nimport BaseHero from 'model/BaseHero';\r\nimport { HeroDataArray } from 'data/HeroData';\r\nimport ClassInfo from '../hero-info/ClassInfo';\r\nimport ClassHelper from 'business/ClassHelper';\r\nimport HeroHelper from 'business/HeroHelper';\r\nimport RankStar from 'components/generic/hero-info/RankStar';\r\nimport AbilityModifierList from '../hero-info/AbilityModifierList';\r\nimport Level from 'components/body/hero-tab/Level';\r\nimport DupLevel from 'components/generic/hero-info/DupLevel';\r\n\r\ninterface IEquipmentInfoProps {\r\n    hero: Hero;\r\n}\r\n\r\nexport default class EquipmentInfo extends React.Component<IEquipmentInfoProps>{\r\n    heroData: BaseHero;\r\n    constructor(props: IEquipmentInfoProps) {\r\n        super(props);\r\n        this.heroData = HeroDataArray.get(this.props.hero.data);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='equip-hero-info'>\r\n                    <div>\r\n                        <h2 style={{display:'inline'}}>{this.heroData.name}</h2>\r\n                        <DupLevel hero={this.props.hero}/>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"rank\">{RankStar.generateRank(this.props.hero.rank)}</span>\r\n                    </div>\r\n                    <Level hero={this.props.hero} />\r\n                    <div>\r\n                        Class : <ClassInfo classList={ClassHelper.computeClassList(this.heroData.class, this.props.hero.rank)} />\r\n                    </div>\r\n                    <div>\r\n                        {this.renderBattleAbility()}\r\n                    </div>\r\n                    <AbilityModifierList modAbilityList={this.heroData.modAbilityList} />\r\n                </div>\r\n                <table className='equip-table center'>\r\n                    <thead>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <EquipmentPiece hero={this.props.hero} type={'head'} />\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <EquipmentPiece hero={this.props.hero} type={'hands'} />\r\n                            </td>\r\n                            <td>\r\n                                <EquipmentPiece hero={this.props.hero} type={'torso'} />\r\n                            </td>\r\n                            <td>\r\n                                <EquipmentPiece hero={this.props.hero} type={'hands'} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <EquipmentPiece hero={this.props.hero} type={'legs'} />\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <EquipmentPiece hero={this.props.hero} type={'feet'} />\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr><td>\r\n                            <EquipmentPiece hero={this.props.hero} type={'rightHand'} />\r\n                        </td>\r\n                            <td></td>\r\n                            <td>\r\n                                <EquipmentPiece hero={this.props.hero} type={'leftHand'} />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button className='input-center' onClick={this.removeAll}>Remove all</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    removeAll = () => {\r\n        GameModelDispatcher.dispatch({\r\n            type: GameModelActionTypes.REMOVE_ALL_ITEMS,\r\n            payload: {\r\n                hero: this.props.hero\r\n            }\r\n        });\r\n    }\r\n\r\n    renderBattleAbility = () => {\r\n        const ba = HeroHelper.computeHeroBA(this.props.hero);\r\n        return (\r\n            <>\r\n                <span>{`Battle Ability : `}</span>\r\n                <span style={{ color: 'green' }}>{ba}</span>\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport Overlay from 'components/generic/Overlay';\r\nimport Hero from 'model/Hero';\r\nimport EquipmentInfo from 'components/generic/equip-overlay/EquipmentInfo';\r\nimport ItemsTab from 'components/body/items-tab/ItemsTab';\r\nimport './EquipmentOverlay.css';\r\n\r\ninterface IEquipmentOverlayProps{\r\n    display : boolean;\r\n    doCancelSelection: () => void;\r\n    hero : Hero;\r\n}\r\n\r\nexport default class EquipmentOverlay extends React.Component<IEquipmentOverlayProps>{\r\n    render(){\r\n        return (\r\n            <Overlay display={this.props.display} closeOverlayCallback={this.props.doCancelSelection} width={80} height={80}>\r\n                <div className='equipment-overlay-part'>\r\n                    <EquipmentInfo hero={this.props.hero}/>\r\n                </div>\r\n                <div className='equipment-overlay-part'>\r\n                    <ItemsTab equipHero={this.props.hero}/>\r\n                </div>\r\n            </Overlay>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport Hero from 'model/Hero';\r\nimport EquipmentOverlay from 'components/generic/equip-overlay/EquipmentOverlay';\r\n\r\ninterface IEquipmentButtonProps{\r\n    hero : Hero;\r\n    className?:string;\r\n}\r\n\r\ninterface IEquipmentButtonState{\r\n    display : boolean;\r\n}\r\n\r\nexport default class EquipmentButton extends React.Component<IEquipmentButtonProps, IEquipmentButtonState>{\r\n\r\n    constructor(props : IEquipmentButtonProps){\r\n        super(props);\r\n        this.state = {display : false};\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <>\r\n                <button className={`${this.props.className}`} onClick={this.showOverlay} disabled={this.cantChangeHeroEquipment()}>Equipment</button>\r\n                <EquipmentOverlay display={this.state.display} doCancelSelection={() => this.setState({display : false})} hero={this.props.hero}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    showOverlay = () => {\r\n        this.setState({display : true});\r\n    }\r\n\r\n    cantChangeHeroEquipment = () => {\r\n        return this.props.hero.questId != null;\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sort-buttons{\\r\\n    margin:20px;\\r\\n}\\r\\n\\r\\n.guild-occupation{\\r\\n    text-align:center;\\r\\n    clear:both;\\r\\n}\\r\\n\\r\\n.hero-tab-hero-info-buttons{\\r\\n    width:50%;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./HeroTab.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./HeroTab.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./HeroTab.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".train-container{\\r\\n    width:10%;\\r\\n}\\r\\n\\r\\n.train-button{\\r\\n    width: 40%;\\r\\nmargin-left: 30%;\\r\\nmargin-right: 30%\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./TrainInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./TrainInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./TrainInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport {GameModelActionTypes} from 'store/game-model/GameModelActionTypes';\r\n\r\ninterface ITrainButtonProps{\r\n    className?: string;\r\n}\r\n\r\ninterface ITrainButtonState{\r\n\r\n}\r\n\r\nexport default class TrainButton extends React.Component<ITrainButtonProps, ITrainButtonState>{\r\n    constructor(props:ITrainButtonProps){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <button onClick={this.doTrain} className={this.props.className}>Train</button>\r\n        );\r\n    }\r\n\r\n    doTrain = () => {\r\n        GameModelDispatcher.dispatch({\r\n            type:GameModelActionTypes.TRAIN_CLICK,\r\n            payload:{ }\r\n        });\r\n    }\r\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".train-progress{\\r\\n    margin: 10px;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n    margin-right: 10%\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./TrainProgress.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./TrainProgress.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./TrainProgress.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".progress-bar-container{\\r\\n    width:25%;\\r\\n    border-style: solid;\\r\\n    border-width: 1px;\\r\\n    border-color: #A64E00;\\r\\n    background:#FFB573;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.progress-bar{\\r\\n    background: #FF7800;\\r\\n    height:10px;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./ProgressBar.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./ProgressBar.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./ProgressBar.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport { ProgressBar } from 'components/generic/quest/ProgressBar';\r\nimport { TrainingHelper } from 'store/TrainingHelper';\r\nimport './TrainProgress.css'\r\n\r\ninterface ITrainProgressProps {\r\n    totalClicks: number;\r\n}\r\n\r\ninterface ITrainProgressState {\r\n}\r\n\r\nexport default class TrainProgress extends React.Component<ITrainProgressProps, ITrainProgressState>{\r\n\r\n    constructor(props: ITrainProgressProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const progress = this.computeProgress(this.props.totalClicks);\r\n        return (\r\n            <ProgressBar className='train-progress' progress={progress} />\r\n        );\r\n    }\r\n\r\n    computeProgress = (totalClicks: number) => {\r\n        const reqClicks = TrainingHelper.computeReqClicks(GameModelStore.getState());\r\n        return (this.props.totalClicks % reqClicks) * 100 / (reqClicks - 1);\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport TrainProgress from './TrainProgress';\r\nimport TrainButton from './TrainButton';\r\nimport './TrainInfo.css'\r\nimport Improvements from 'model/Improvements';\r\n\r\ninterface ITrainInfoProps{\r\n\r\n}\r\n\r\ninterface ITrainInfoState{\r\n    nbHeroes : number;\r\n    totalTrainClicks : number;\r\n    improvements : Improvements;\r\n}\r\n\r\nexport default class TrainInfo extends React.Component<ITrainInfoProps, ITrainInfoState>{\r\n    storeSubscribe : fbEmitter.EventSubscription;\r\n\r\n    constructor(props:ITrainInfoProps){\r\n        super(props);\r\n        const nbHeroes = GameModelStore.getState().heroes.size();\r\n        const totalTrainClicks = GameModelStore.getState().statistics.trainClicks;\r\n        const improvements = Object.assign({}, GameModelStore.getState().improvements);\r\n        this.state = {nbHeroes, totalTrainClicks, improvements};\r\n    }\r\n\r\n    render(){\r\n        if(this.state.nbHeroes > 0 && this.state.improvements.train1){\r\n            return (\r\n                <div className=\"train-container container\">\r\n                    <TrainProgress totalClicks={this.state.totalTrainClicks}/>\r\n                    <TrainButton className='train-button'/>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            const nbHeroes = GameModelStore.getState().heroes.size();\r\n            const totalTrainClicks = GameModelStore.getState().statistics.trainClicks;\r\n            const improvements = Object.assign({}, GameModelStore.getState().improvements);\r\n            this.setState({nbHeroes, totalTrainClicks, improvements});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.storeSubscribe.remove();\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hero-recruit-button{\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    display: block;\\r\\n    margin-top: 7px;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./HeroRecruitButton.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./HeroRecruitButton.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./HeroRecruitButton.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport './HeroRecruitButton.css';\r\nimport './HeroInfo.css'\r\nimport NavigationStore, { TabType } from 'store/navigation/NavigationStore';\r\n\r\ninterface IHeroRecruitButtonProps {\r\n\r\n}\r\n\r\ninterface IHeroRecruitButtonState {\r\n\r\n}\r\n\r\nexport default class HeroRecruitButton extends React.Component<IHeroRecruitButtonProps, IHeroRecruitButtonState>{\r\n    constructor(props: IHeroRecruitButtonProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"hero-info-container container\">\r\n                <input className=\"hero-recruit-button\" type=\"image\" src=\"img/add.png\" onClick={this.goToRecruit} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    goToRecruit = () => {\r\n        NavigationStore.navigateTo(TabType.CFH);\r\n    }\r\n}","import * as React from 'react';\r\nimport Hero from 'model/Hero';\r\nimport { HeroDataArray } from 'data/HeroData';\r\nimport * as RarityEnum from 'model/Rarity';\r\n\r\ninterface IRarityProps{\r\n    hero : Hero;\r\n    className ?: string;\r\n}\r\n\r\nexport default class Rarity extends React.Component<IRarityProps>{\r\n    render(){\r\n        return <img className={this.props.className} src={this.computeIconPath()}/>\r\n    }\r\n\r\n    computeIconPath = () => {\r\n        const heroData = HeroDataArray.get(this.props.hero.data);\r\n        switch(heroData.rarity){\r\n            case RarityEnum.Rarity.T:\r\n                return 'img/rarity/t_rarity.png'\r\n\r\n            case RarityEnum.Rarity.SP:\r\n            return 'img/rarity/sp_rarity.png'\r\n        }\r\n        return '';\r\n    }\r\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".class-txt{\\r\\n    color:green;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./ClassInfo.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./ClassInfo.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./ClassInfo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tooltip {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n.tooltip-displayed{\\r\\n    visibility: visible;\\r\\n}\\r\\n\\r\\n.tooltip-hidden{\\r\\n    visibility: hidden;\\r\\n}\\r\\n\\r\\n.tooltip-content{\\r\\n    position:absolute;\\r\\n    background-color: rgba(0, 0, 0, 0.7);\\r\\n    color: #fff;\\r\\n    text-align: center;\\r\\n    border-radius: 6px;\\r\\n}\\r\\n\\r\\n.tooltip-position-right{\\r\\n    top: -5px;\\r\\n    left: 105%; \\r\\n    z-index:999;\\r\\n}\\r\\n.tooltip-position-top{\\r\\n    top: -20px;\\r\\n    z-index:999;\\r\\n}\\r\\n\\r\\n/* Tooltip text */\\r\\n.tooltip .tooltiptext {\\r\\n    visibility: hidden;\\r\\n    width: 120px;\\r\\n    background-color: rgba(0, 0, 0, 0.7);\\r\\n    color: #fff;\\r\\n    text-align: center;\\r\\n    padding: 5px 0;\\r\\n    border-radius: 6px;\\r\\n \\r\\n    /* Position the tooltip text - see examples below! */\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.tooltip .tooltiptext.right{\\r\\n    top: -5px;\\r\\n    left: 105%; \\r\\n}\\r\\n.tooltip .tooltiptext.left{\\r\\n    top: -5px;\\r\\n    left: 105%; \\r\\n}\\r\\n.tooltip .tooltiptext.top {\\r\\n    width: 120px;\\r\\n    bottom: 100%;\\r\\n    left: 50%;\\r\\n    margin-left: -60px; /* Use half of the width (120/2 = 60), to center the tooltip */\\r\\n}\\r\\n.tooltip .tooltiptext.bottom {\\r\\n    width: 120px;\\r\\n    bottom: 100%;\\r\\n    left: 50%;\\r\\n    margin-left: -60px; /* Use half of the width (120/2 = 60), to center the tooltip */\\r\\n}\\r\\n\\r\\n/* Show the tooltip text when you mouse over the tooltip container */\\r\\n.tooltip:hover .tooltiptext {\\r\\n    visibility: visible;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./ToolTip.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./ToolTip.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./ToolTip.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hero-info-container{\\r\\n    width:180px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.hero-info-container .icon{\\r\\n    position: absolute;\\r\\n    right: 0px;\\r\\n    top: 0px;\\r\\n}\\r\\n\\r\\n.hero-info-container .txt{\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.hero-info-container .txt.small{\\r\\n    font-size: small;\\r\\n}\\r\\n\\r\\n.hero-info-container .lvl{\\r\\n    position: absolute;\\r\\n    right: 40px;\\r\\n    top: -2px;\\r\\n}\\r\\n\\r\\n.hero-info-container .rarity{\\r\\n    position: absolute;\\r\\n    right: 40px;\\r\\n    top: -4px;\\r\\n}\\r\\n\\r\\n.hero-info-container .level-up{\\r\\n    vertical-align: middle;\\r\\n    margin-left: 3px;\\r\\n}\\r\\n\\r\\n.hero-info-container .divider{\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.absolute-reference{\\r\\n    position: relative;\\r\\n}\", \"\"]);\n\n// exports\n","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Hero from 'model/Hero';\r\nimport { SortOrder } from 'model/Sorting';\r\nimport HeroInfo from 'components/body/hero-tab/HeroInfo';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport HeroRecruitButton from 'components/body/hero-tab/HeroRecruitButton';\r\nimport TrainInfo from 'components/body/hero-tab/train/TrainInfo';\r\nimport SortButton from 'components/generic/hero-info/SortButton';\r\nimport './HeroTab.css'\r\nimport HeroHelper from 'business/HeroHelper';\r\nimport EquipmentButton from 'components/body/hero-tab/EquipmentButton';\r\nimport UpgradeButton from 'components/body/hero-tab/upgrade-overlay/UpgradeButton';\r\nimport HeroQuestProgress from './HeroQuestProgress';\r\n\r\ninterface IHeroTabProps {\r\n\r\n}\r\n\r\ninterface IHeroTabState {\r\n    heroes: Hero[];\r\n    rankOrder: SortOrder;\r\n    lvlOrder: SortOrder;\r\n    nameOrder: SortOrder;\r\n}\r\n\r\nexport default class HeroTab extends React.Component<IHeroTabProps, IHeroTabState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: IHeroTabProps) {\r\n        super(props);\r\n        this.state = {\r\n            heroes: GameModelStore.getState().heroes.asArray(),\r\n            rankOrder: SortOrder.DESC, lvlOrder: SortOrder.DESC, nameOrder: SortOrder.ASC\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TrainInfo />\r\n                <div className=\"sort-buttons\">\r\n                    <SortButton order={this.state.rankOrder} txt={'rank'} toggle={() => { this.setState({ rankOrder: -this.state.rankOrder }) }} />\r\n                    <SortButton order={this.state.lvlOrder} txt={'lvl'} toggle={() => { this.setState({ lvlOrder: -this.state.lvlOrder }) }} />\r\n                    <SortButton order={this.state.nameOrder} txt={'name'} toggle={() => { this.setState({ nameOrder: -this.state.nameOrder }) }} />\r\n                </div>\r\n                {this.renderHeroes()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                heroes: GameModelStore.getState().heroes.asArray()\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    renderHeroes = () => {\r\n        const result: JSX.Element[] = [];\r\n        const heroesArray = this.state.heroes;\r\n        heroesArray.sort(HeroHelper.createHeroSort(this.state.rankOrder, this.state.lvlOrder, this.state.nameOrder));\r\n        for (const hero of heroesArray) {\r\n            result.push(\r\n                <HeroInfo key={`HEROINFO_${hero.data}`} hero={hero} >\r\n                    <HeroQuestProgress hero={hero} />\r\n                    <EquipmentButton className={'hero-tab-hero-info-buttons'} hero={hero} />\r\n                    <UpgradeButton className={'hero-tab-hero-info-buttons'} hero={hero} />\r\n                </HeroInfo>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderHeroRecruit = () => {\r\n        return (\r\n            <HeroRecruitButton />\r\n        );\r\n    }\r\n\r\n    renderSortButton = (order: SortOrder, txt: string, toggle: () => void) => {\r\n        let icon = 'angle-up';\r\n        if (order < 0) {\r\n            icon = 'angle-down';\r\n        }\r\n        return (\r\n            <button onClick={toggle}>\r\n                {txt}\r\n                <i className={`fa fa-${icon}`}></i>\r\n            </button>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport HeroTab from 'components/body/hero-tab/HeroTab';\r\nimport ImprovementsTab from 'components/body/improvements-tab/ImprovementsTab';\r\nimport './Content.css';\r\nimport { TabType } from 'store/navigation/NavigationStore';\r\nimport CallTab from 'components/body/call-tab/CallTab';\r\nimport QuestTab from 'components/body/quest-tab/QuestTab';\r\nimport ItemsTab from 'components/body/items-tab/ItemsTab';\r\nimport LogTab from 'components/body/log-tab/LogTab';\r\nimport DungeonTab from './dungeon-tab/DungeonTab';\r\nimport ShopTab from './shop-tab/ShopTab';\r\n\r\ninterface IContentProps {\r\n    currentTab: TabType;\r\n}\r\n\r\ninterface IContentState {\r\n}\r\n\r\nexport default class Content extends React.Component<IContentProps, IContentState>{\r\n    constructor(props: IContentProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-content\">\r\n                {this.tabSwitch()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    tabSwitch = () => {\r\n        switch (this.props.currentTab) {\r\n            case TabType.HEROES:\r\n                return <HeroTab />\r\n            case TabType.CFH:\r\n                return <CallTab />\r\n            case TabType.QUESTS:\r\n                return <QuestTab />\r\n            case TabType.DUNGEONS:\r\n                return <DungeonTab />\r\n            case TabType.ITEMS:\r\n                return <ItemsTab />\r\n            case TabType.SHOP:\r\n                return <ShopTab />\r\n            case TabType.IMPROVEMENTS:\r\n                return <ImprovementsTab />\r\n            case TabType.LOG:\r\n                return <LogTab />\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".menu-container{\\r\\n    width:100%;\\r\\n    background: #FF7800;\\r\\n    border-top-style: solid;\\r\\n    border-bottom-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: #A64E00;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./Menu.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./Menu.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./Menu.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".menu-button{\\r\\n    background-color: #FF7800;\\r\\n    border-top-style: none;\\r\\n    border-bottom-style: none;\\r\\n    border-left-style: none;\\r\\n    border-right-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: #A64E00;\\r\\n}\\r\\n\\r\\n.menu-button:hover{\\r\\n    background-color: #FFB573;\\r\\n    cursor: pointer;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./MenuButton.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./MenuButton.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./MenuButton.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport './MenuButton.css';\r\n\r\ninterface IMenuButtonProps {\r\n    txt: string;\r\n    onClick : () => void;\r\n}\r\n\r\ninterface IMenuButtonState {\r\n\r\n}\r\n\r\nexport default class MenuButton extends React.Component<IMenuButtonProps, IMenuButtonState>{\r\n    constructor(props: IMenuButtonProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"menu-button\" onClick={this.props.onClick}>\r\n                {this.props.txt}\r\n            </button>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport MenuButton from 'components/menu/MenuButton';\r\nimport './Menu.css';\r\nimport HeroTab from 'components/body/hero-tab/HeroTab';\r\nimport NavigationHandler, { TabType } from 'store/navigation/NavigationStore';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport GameSwitches from 'model/GameSwitches';\r\nimport LogStore from 'store/log/LogStore';\r\nimport Improvement from 'model/Improvements';\r\n\r\ninterface IMenuProps {\r\n\r\n}\r\n\r\ninterface IMenuState {\r\n    gameSwitches: GameSwitches;\r\n    improvements: Improvement;\r\n    hasLogs: boolean;\r\n}\r\n\r\nexport default class Menu extends React.Component<IMenuProps, IMenuState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n    logSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            gameSwitches: Object.assign({}, GameModelStore.getState().gameSwitches),\r\n            hasLogs: LogStore.getState().logArchive.length > 0,\r\n            improvements: Object.assign({}, GameModelStore.getState().improvements)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            this.setState({\r\n                gameSwitches: Object.assign({}, GameModelStore.getState().gameSwitches),\r\n                improvements: Object.assign({}, GameModelStore.getState().improvements)\r\n            });\r\n        });\r\n        this.logSubscribe = LogStore.addListener(() => {\r\n            this.setState({\r\n                hasLogs: LogStore.getState().logArchive.length > 0\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n        this.logSubscribe.remove();\r\n    }\r\n\r\n    render() {\r\n        const menuLeftContent: JSX.Element[] = [];\r\n        const menuRightContent: JSX.Element[] = [];\r\n\r\n        menuLeftContent.push(<MenuButton key='HEROES_BUTTON' txt=\"Heroes\" onClick={this.onMenuClick(TabType.HEROES)} />);\r\n        menuLeftContent.push(<MenuButton key='CFH_BUTTON' txt=\"Call For Heroes\" onClick={this.onMenuClick(TabType.CFH)} />);\r\n        if (this.state.gameSwitches.firstHero) {\r\n            menuLeftContent.push(<MenuButton key='QUESTS_BUTTON' txt=\"Quests\" onClick={this.onMenuClick(TabType.QUESTS)} />);\r\n        }\r\n        if (this.state.gameSwitches.QUEST02) {\r\n            menuLeftContent.push(<MenuButton key='DUNGEON_BUTTON' txt=\"Dungeons\" onClick={this.onMenuClick(TabType.DUNGEONS)} />);\r\n        }\r\n        if (this.state.gameSwitches.QUEST01) {\r\n            menuLeftContent.push(<MenuButton key='ITEMS_BUTTON' txt=\"Items\" onClick={this.onMenuClick(TabType.ITEMS)} />);\r\n        }\r\n        if (this.state.improvements.shop1) {\r\n            menuLeftContent.push(<MenuButton key='SHOP_BUTTON' txt=\"Market\" onClick={this.onMenuClick(TabType.SHOP)} />);\r\n        }\r\n        if (this.state.gameSwitches.QUEST08) {\r\n            menuLeftContent.push(<MenuButton key='IMPROVEMENTS_BUTTON' txt=\"Improvements\" onClick={this.onMenuClick(TabType.IMPROVEMENTS)} />);\r\n        }\r\n        if (this.state.hasLogs) {\r\n            menuRightContent.push(<MenuButton key='LOG_BUTTON' txt=\"Logs\" onClick={this.onMenuClick(TabType.LOG)} />);\r\n        }\r\n        return (\r\n            <div className=\"menu-container\">\r\n                {menuLeftContent}\r\n                <span style={{float:'right'}}>\r\n                    {menuRightContent}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onMenuClick = (tab: TabType) => {\r\n        return () => {\r\n            NavigationHandler.navigateTo(tab);\r\n        }\r\n    }\r\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".guild-visualisation{\\r\\n    height:200px;\\r\\n    width:100%;\\r\\n    background: #BF7330;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./GuildVisu.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./GuildVisu.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./GuildVisu.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport './GuildVisu.css'\r\n\r\ninterface IGuildVisuProps {\r\n\r\n}\r\n\r\ninterface IGuildVisuState {\r\n\r\n}\r\n\r\nexport default class GuildVisu extends React.Component<IGuildVisuProps, IGuildVisuState>{\r\n    constructor(props: IGuildVisuProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"guild-visualisation\">\r\n            </div>\r\n        );\r\n    }\r\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".overlay{\\r\\n    border-style: solid;\\r\\n    border-width: 5px;\\r\\n    border-color: #A64E00;\\r\\n    padding:3px;\\r\\n    background-color: #FFB573;\\r\\n    position: fixed; /* Sit on top of the page content */\\r\\n    z-index: 2; /* Specify a stack order in case you're using a different order for other elements */\\r\\n}\\r\\n\\r\\n\\r\\n.overlay .cross{\\r\\n    position: absolute;\\r\\n    top:3px;\\r\\n    right:3px;\\r\\n}\\r\\n\\r\\n.blackout{\\r\\n    position: fixed; /* Sit on top of the page content */\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    background: rgba(0, 0, 0, 0.5);\\r\\n    top:0px;\\r\\n    left:0px;\\r\\n    right:0px;\\r\\n    bottom:0px;\\r\\n    z-index: 3;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./Overlay.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./Overlay.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./Overlay.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport Overlay from 'components/generic/Overlay';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\n\r\ninterface ISettingsProps {\r\n\r\n}\r\n\r\ninterface ISettingsState {\r\n    displayed: boolean;\r\n}\r\n\r\nexport default class Settings extends React.Component<ISettingsProps, ISettingsState>{\r\n    constructor(props: ISettingsProps) {\r\n        super(props);\r\n        this.state = { displayed: false };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <i style={{fontSize:\"32px\", margin:\"3px\"}} onClick={this.displayOverlay} className=\"fa fa-cog\"></i>\r\n                <Overlay display={this.state.displayed} closeOverlayCallback={this.closeOverlay} width={40} height={60}>\r\n                    <button onClick={this.clearGameData}>Clear saved game data</button>\r\n                </Overlay>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    displayOverlay = () => {\r\n        this.setState({ displayed: true });\r\n    }\r\n\r\n    closeOverlay = () => {\r\n        this.setState({ displayed: false });\r\n    }\r\n\r\n    clearGameData = () => {\r\n        GameModelDispatcher.dispatch({ type: GameModelActionTypes.CLEAR_GAME_DATA, payload: {} });\r\n    }\r\n}","\r\nlet ID_GEN = 0;\r\n\r\nexport default class Log{\r\n    constructor(msg : string, lvl : LogLevel){\r\n        this.id = ID_GEN++;\r\n        this.level = lvl;\r\n        this.msg = msg;\r\n        this.producedAt = new Date().getTime();\r\n    }\r\n\r\n    id: number;\r\n    level : LogLevel;\r\n    msg : string;\r\n    producedAt : number;\r\n}\r\n\r\n// USER > HISTORY > CONSOLE\r\nexport enum LogLevel{\r\n    USER, HISTORY, CONSOLE\r\n}","import Item from \"model/items/Item\";\r\nimport { ItemData } from \"data/ItemData\";\r\n\r\nexport default class UpgradeRequirements {\r\n    [rank: number]: { item: Item, quantity: number }[];\r\n}\r\n\r\nexport const WARRIOR_REQUIREMENTS: UpgradeRequirements = {\r\n    1: [\r\n        {\r\n            item: ItemData.COURAGE_ORB,\r\n            quantity: 5\r\n        }\r\n    ]\r\n}\r\n\r\nexport const MINSTREL_REQUIREMENTS: UpgradeRequirements = {\r\n    1: [\r\n        {\r\n            item: ItemData.SENSES_ORB,\r\n            quantity: 5\r\n        }\r\n    ]\r\n}\r\n\r\nexport const MAGE_REQUIREMENTS: UpgradeRequirements = {\r\n    1: [\r\n        {\r\n            item: ItemData.SPIRIT_ORB,\r\n            quantity: 5\r\n        }\r\n    ]\r\n}","export default class ModifierAbility{\r\n    classes : string[];\r\n    modPrct : number;\r\n    type : ModifierAbilityType;\r\n}\r\n\r\nexport enum ModifierAbilityType{\r\n    BOOST = 'boost',\r\n    WEAK = 'weak'\r\n}","export default class Item {\r\n    id: string;\r\n    name : string;\r\n    icon : string;\r\n    description : string;\r\n    price : number;\r\n}","import * as FbEmitter from 'fbemitter';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport GameModelDispatcher from 'store/game-model/GameModelDispatcher';\r\nimport GameModelState from 'store/game-model/GameModelState';\r\nimport Statistics from 'model/Statistics';\r\nimport { GameModelActionTypes } from 'store/game-model/GameModelActionTypes';\r\n\r\nexport default class AchievementsHelper {\r\n    questCompleteLastState: number;\r\n    constructor() {\r\n        this.questCompleteLastState = 0;\r\n    }\r\n\r\n    computeQuestStat = (gameState: GameModelState) => {\r\n        const questCompleted = gameState.statistics.questCompleted;\r\n        if (questCompleted > this.questCompleteLastState && questCompleted % 5 == 0) {\r\n            this.questCompleteLastState = questCompleted;\r\n            gameState.shards += 1;\r\n        }\r\n        return gameState;\r\n    }\r\n}","export default class GameSwitches {\r\n    [sw: string] : boolean;\r\n    firstHero : boolean;\r\n    QUEST01 : boolean;\r\n    QUEST02 : boolean;\r\n    QUEST08 : boolean;\r\n}","export default class Improvement {\r\n    [key: string]: boolean;\r\n    autoQuest: boolean;\r\n    stables: boolean;\r\n    train1: boolean;\r\n    train2: boolean;\r\n    train3: boolean;\r\n    trainClickNo1: boolean;\r\n    shop1 : boolean;\r\n}\r\n\r\nexport class ImprovementInfo {\r\n    key: string;\r\n    title: string;\r\n    desc: string;\r\n    cost: number;\r\n    requireKeys: string[];\r\n}","import Hero from 'model/Hero';\r\nimport Improvements from 'model/Improvements';\r\nimport Statistics from 'model/Statistics';\r\nimport IndexedArray from 'business/collection/IndexedArray';\r\nimport GameSwitches from 'model/GameSwitches';\r\nimport Quest from 'model/Quest';\r\nimport { QuestDataArray, QuestData } from 'data/QuestData';\r\nimport ItemCollection from 'model/serializable/ItemCollection';\r\nimport QuestMap from 'model/serializable/QuestMap';\r\nimport SerializableMap from 'model/serializable/SerializableMap';\r\nimport Dungeon from 'model/Dungeon';\r\n\r\nexport default interface GameModelState {\r\n    gold: number,\r\n    exp: number,\r\n    shards: number,\r\n    heroes: IndexedArray<string, Hero>,\r\n    statistics: Statistics;\r\n    completedDungeons: Set<string>;\r\n    improvements: Improvements;\r\n    quests: SerializableMap<Quest>;\r\n    dungeons: SerializableMap<Dungeon>;\r\n    gameSwitches: GameSwitches;\r\n    items: ItemCollection;\r\n}\r\n\r\nexport const StartingGameState = (): GameModelState => {\r\n    return {\r\n        gold: 0,\r\n        shards: 0,\r\n        exp: 0,\r\n        heroes: new IndexedArray<string, Hero>(x => x.data),\r\n        statistics: {\r\n            questCompleted: 0,\r\n            trainClicks: 0,\r\n        },\r\n        completedDungeons: new Set<string>(),\r\n        improvements: new Improvements(),\r\n        gameSwitches: new GameSwitches(),\r\n        quests: {\r\n            \"QUEST01\" :{\r\n                id: \"QUEST01\",\r\n                startedAt: null,\r\n                completedAt: null\r\n            }\r\n        },\r\n        dungeons : {},\r\n        items: {}\r\n    } as GameModelState;\r\n}\r\n\r\nexport const GameStateSerializer = (obj: GameModelState) => JSON.stringify(obj, replacer);\r\nexport const GameStateDeserializer = (str: string) => JSON.parse(str, reviver);\r\n\r\nconst reviver = (key: any, value: any) => {\r\n    switch (key) {\r\n        case 'heroes':\r\n            {\r\n                const result = new IndexedArray<string, Hero>(x => x.data);\r\n                JSON.parse(value).forEach((element: Hero) => {\r\n                    result.add(element);\r\n                });\r\n                return result;\r\n            }\r\n        case 'completedDungeons':\r\n            {\r\n                const result = new Set<string>();\r\n                JSON.parse(value).forEach((element: string) => {\r\n                    result.add(element);\r\n                });\r\n                return result;\r\n            }\r\n        default:\r\n            return value;\r\n    }\r\n}\r\n\r\nconst replacer = (key: string, value: any) => {\r\n\r\n    switch (key) {\r\n        case 'heroes':\r\n            {\r\n                return JSON.stringify(value.asArray());\r\n            }\r\n        case 'completedDungeons':\r\n            {\r\n                return JSON.stringify(Array.from(value));\r\n            }\r\n        default:\r\n            return value;\r\n    }\r\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.header{\\r\\n    width:100%;\\r\\n    background:#FF7800;\\r\\n    border-bottom-style: solid;\\r\\n    border-bottom-width: 2px;\\r\\n    border-color: #A64E00;\\r\\n    overflow:hidden;\\r\\n}\\r\\n\\r\\n.header-left{\\r\\n    float:left;\\r\\n}\\r\\n\\r\\n.header-right{\\r\\n    float:right;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./Header.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./Header.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./Header.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".resource-container{\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.resource-container .icon{\\r\\n    vertical-align: middle;\\r\\n    position: relative;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n}\\r\\n\\r\\n.resource-container .resource-value{\\r\\n  vertical-align: middle;\\r\\n  border-style: solid;\\r\\n  border-width: 2px;\\r\\n  border-color: #A64E00;\\r\\n  background-color: #FF9A40;\\r\\n  border-radius: 6px;\\r\\n  width:100px;\\r\\n  margin-left:-17px;\\r\\n  text-align: right;\\r\\n  display: inline-block;\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.remove-txt{\\r\\n    color:red;\\r\\n}\\r\\n\\r\\n.add-txt{\\r\\n    color:green;\\r\\n}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./Resource.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./Resource.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./Resource.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\r\nimport * as fbEmitter from 'fbemitter';\r\nimport Resource, { ResourceType } from 'components/generic/resource/Resource';\r\nimport './Header.css';\r\nimport GameModelStore from 'store/game-model/GameModelStore';\r\nimport Settings from 'components/header/Settings';\r\n\r\ninterface IHeaderProps {\r\n\r\n}\r\n\r\ninterface IHeaderState {\r\n    gold: number;\r\n    xp: number;\r\n    shards: number;\r\n}\r\n\r\nexport default class Header extends React.Component<IHeaderProps, IHeaderState>{\r\n    storeSubscribe: fbEmitter.EventSubscription;\r\n\r\n    constructor(props: IHeaderProps) {\r\n        super(props);\r\n        this.state =\r\n            {\r\n                gold: GameModelStore.getState().gold,\r\n                xp: GameModelStore.getState().exp,\r\n                shards: GameModelStore.getState().shards\r\n            };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.storeSubscribe = GameModelStore.addListener(() => {\r\n            const gameState = GameModelStore.getState();\r\n            this.setState({ gold: gameState.gold, xp: gameState.exp, shards: gameState.shards });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.storeSubscribe.remove();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-left\">\r\n                    <Resource value={this.state.gold} type={ResourceType.GOLD} inline />\r\n                    <Resource value={this.state.xp} type={ResourceType.EXP} inline />\r\n                    <Resource value={this.state.shards} type={ResourceType.SHARD} inline />\r\n                </div>\r\n                <div className=\"header-right\">\r\n                    <Settings />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport Header from 'components/header/Header';\r\nimport GuildVisu from 'components/guild-visu/GuildVisu';\r\nimport Menu from 'components/menu/Menu';\r\nimport Content from 'components/body/Content';\r\nimport NavigationHandler, {TabType} from 'store/navigation/NavigationStore';\r\nimport LogDisplayer from 'components/log/LogDisplayer';\r\n\r\ninterface IAppState {\r\n    tabType: TabType;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { tabType: TabType.HEROES };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <GuildVisu />\r\n                <Menu />\r\n                <Content currentTab={this.state.tabType} />\r\n                <LogDisplayer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        NavigationHandler.listener = this.navigateTo;\r\n    }\r\n\r\n    navigateTo = (newTab: TabType) => {\r\n        this.setState({ tabType: newTab });\r\n    }\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}